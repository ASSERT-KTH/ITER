bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  null);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  null);	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue),    null);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
2	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue),    null);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
3	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue),    null);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
4	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  if(type.isUnknownType()  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  if(type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isUnknownType()    ||    resultEqualsValue)    {    if(type.isUnknownType()  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	123	None	add
5	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  JSType  type  =  type.isUnknownType()  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  JSType  type  =  type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isUnknownType()    ||    resultEqualsValue)    {    JSType  type  =  type.isUnknownType()  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	123	None	add
6	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  JSType  result  =  type.isUnknownType()  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  JSType  result  =  type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isUnknownType()    ||    resultEqualsValue)    {    JSType  result  =  type.isUnknownType()  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	123	None	add
7	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  JSType  type  =  type.isUnknownType()  ||  resultEqualsValue);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  JSType  type  =  type.isUnknownType()  ||  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isUnknownType()    ||    resultEqualsValue)    {    JSType  type  =  type.isUnknownType()  ||  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	123	None	add
8	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  JSType  result  =  type.isUnknownType()  ||  resultEqualsValue);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  JSType  result  =  type.isUnknownType()  ||  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isUnknownType()    ||    resultEqualsValue)    {    JSType  result  =  type.isUnknownType()  ||  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	123	None	add
9	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  If(type.isUnknownType()  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  If(type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isUnknownType()    ||    resultEqualsValue)    {    If(type.isUnknownType()  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	123	None	add
10	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
11	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
12	[BUG]  [BUGGY]  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	58	None	replace
13	[BUG]  [BUGGY]  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
14	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
15	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
16	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  ||  resultEqualsValue  ==  null)  {	  if(type!=    null    ||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	24	None	replace
17	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  type!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  ||  type!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  type!=  null)  {	  if(type!=    null    ||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	24	None	replace
18	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  type  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  ||  type  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  type  ==  null)  {	  if(type!=    null    ||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	24	None	replace
19	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value)&&  resultEqualsValue!=  null)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value)&&  resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value)&&  resultEqualsValue!=  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&    resultEqualsValue!=    null)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
20	[BUG]  [BUGGY]  if(type.isAssignableFrom(resultEqualsValue)&&  resultEqualsValue!=  null)  {  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isAssignableFrom(resultEqualsValue)&&  resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isAssignableFrom(resultEqualsValue)&&  resultEqualsValue!=  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&    resultEqualsValue!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
21	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&  value!=  null)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&  value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&  value!=  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&    resultEqualsValue!=    null)    {    	non-compiled	[CE]  ';'  expected	135	None	replace
22	[BUG]  [BUGGY]  if(type.isAssignableFrom(resultEqualsValue)&&  type!=  null)  {  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isAssignableFrom(resultEqualsValue)&&  type!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isAssignableFrom(resultEqualsValue)&&  type!=  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&    resultEqualsValue!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
23	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
24	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
25	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(value  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
26	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  resultEqualsValue.length()  ==  0)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  resultEqualsValue.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  resultEqualsValue.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
27	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value));	  if(type!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value,  resultEqualsValue));	  if(type!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value),  resultEqualsValue);	  if(type!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value),  resultEqualsValue));  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value),  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value),  resultEqualsValue));	  if(type!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  	3	None	replace
31	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
32	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
33	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
34	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
35	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
36	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
37	[BUG]  [BUGGY]  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	39	None	replace
38	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(resultEqualsValue);	  JSType    result    =    type.getRestrictedByTypeOfResult(value);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
39	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  value);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(value,  value);	  JSType    result    =    type.getRestrictedByTypeOfResult(value);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.equals( "   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  ||  value.equals( "   "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	8	replace
41	[BUG]  [BUGGY]  if(value!=  null  ||  value.equals( "   "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.equals( "   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  ||  value.equals( "   "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	8	replace
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.equals( "   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  value.equals( "   "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
43	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals( "   "))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.equals( "   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.equals( "   "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals( "* "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  &&  value.equals( "* "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
45	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals( "* "))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals( "* "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  &&  value.equals( "* "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.equals( "   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  ||  value.equals( "   "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	9	replace
47	[BUG]  [BUGGY]  if(type!=  null  ||  value.equals( "   "))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.equals( "   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  value.equals( "   "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	9	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals( "_ "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  &&  value.equals( "_ "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
49	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals( "_ "))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals( "_ "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  &&  value.equals( "_ "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  value.equals( "   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  &&  value.equals( "   "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
51	[BUG]  [BUGGY]  if(type!=  null  &&  value.equals( "   "))  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  value.equals( "   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  &&  value.equals( "   "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
52	[BUG]  [BUGGY]  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
53	[BUG]  [BUGGY]  final  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  final  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	final  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
54	[BUG]  [BUGGY]  JSType  type  =  type.getNativeType(CHKED_UNKNOWN_TYPE);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.getNativeType(CHKED_UNKNOWN_TYPE);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.getNativeType(CHKED_UNKNOWN_TYPE);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
55	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    if(value!=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
56	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    if(value  ==  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
57	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
58	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
59	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    JSType  result  =  getNativeTypeForTypeOf(type);  if(value!=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
60	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  type,  resultEqualsValue));  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  type,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	101	None	add
61	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	101	None	add
62	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  value));  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  value));	  	non-compiled	[CE]  ';'  expected	101	None	add
63	[BUG]  [BUGGY]  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value));	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
64	[BUG]  [BUGGY]  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
65	[BUG]  [BUGGY]  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  value);	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
66	[BUG]  [BUGGY]  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value,  resultEqualsValue));	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
68	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
69	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
70	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
71	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
72	[BUG]  [BUGGY]  if(type.isAssignableFrom(resultEqualsValue))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isAssignableFrom(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isAssignableFrom(resultEqualsValue))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
73	[BUG]  [BUGGY]  if(!resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(!resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(!resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ';'  expected	129	None	replace
74	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ';'  expected	129	None	replace
75	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ';'  expected	129	None	replace
76	[BUG]  [BUGGY]  if(!resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(!resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(!resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ';'  expected	129	None	replace
77	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ';'  expected	129	None	replace
78	[BUG]  [BUGGY]  if(type.resultEqualsValue  ==  null)  {  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.resultEqualsValue  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.resultEqualsValue  ==  null)  {	  if(this.resultEqualsValue    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	87	None	replace
79	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  value));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  value));	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictedByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
80	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  value,  resultEqualsValue));	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictedByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
81	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  value),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  value),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  value),  resultEqualsValue);	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictedByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
82	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue),  value);	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictedByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
83	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value);	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
84	[BUG]  [BUGGY]  JSError.make(type,  value,  resultEqualsValue));  [CE]  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSError.make(type,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSError.make(type,  value,  resultEqualsValue));	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  	116	None	replace
85	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value.toString());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value.toString());  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value.toString());	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
86	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value,  value);	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isConstructor()  ||  type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type.isConstructor()  ||  type.isUnknownType()  ||  resultEqualsValue)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	5	replace
88	[BUG]  [BUGGY]  if(type.isConstructor()  ||  type.isUnknownType()  ||  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isConstructor()  ||  type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isConstructor()  ||  type.isUnknownType()  ||  resultEqualsValue)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	5	replace
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type.isUnknownType()  ||  value.equals(resultEqualsValue))  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	3	replace
90	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  value.equals(resultEqualsValue))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isUnknownType()  ||  value.equals(resultEqualsValue))  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	3	replace
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  ||  type.isUnknownType()  ||  resultEqualsValue)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	9	replace
92	[BUG]  [BUGGY]  if(type!=  null  ||  type.isUnknownType()  ||  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  type.isUnknownType()  ||  resultEqualsValue)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	9	replace
93	[BUG]  [BUGGY]  if(value.isUnknownType()  ||  resultEqualsValue)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value.isUnknownType()  ||  resultEqualsValue)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isFunctionType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type.isFunctionType()  ||  resultEqualsValue)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	5	replace
95	[BUG]  [BUGGY]  if(type.isFunctionType()  ||  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isFunctionType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isFunctionType()  ||  resultEqualsValue)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	5	replace
96	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isUnknownType()  ||  resultEqualsValue  >  0)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	124	None	replace
97	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isPrimitive())  {  [CE]  boolean  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isPrimitive())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue.isPrimitive())  {	  if(resultEqualsValue    ==    null    ||    type.isPrimitive())    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	54	None	replace
98	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue.isPrimitive())  {  [CE]  boolean  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue.isPrimitive())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue.isPrimitive())  {	  if(resultEqualsValue    ==    null    ||    type.isPrimitive())    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	54	None	replace
99	[BUG]  [BUGGY]  if(value  ==  null  ||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type.isPrimitive())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  type.isPrimitive())  {	  if(resultEqualsValue    ==    null    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
100	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue.isPrimitive())  {  [CE]  boolean  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue.isPrimitive())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue.isPrimitive())  {	  if(resultEqualsValue    ==    null    ||    type.isPrimitive())    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	54	None	replace
101	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  &&  type.isPrimitive())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  &&  type.isPrimitive())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  &&  type.isPrimitive())  {	  if(resultEqualsValue    ==    null    ||    type.isPrimitive())    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	54	None	replace
102	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    value),    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
103	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    value),    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
104	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value,  value),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value,  value),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value,  value),  resultEqualsValue);	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    value),    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
105	[BUG]  [BUGGY]  if(value  ==  null)  {  if(type!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(type!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(type!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
106	[BUG]  [BUGGY]  if(value  ==  null)  {  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(value!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
107	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    value.length()    ==    0)    {    if(value  ==  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	64	None	add
108	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    value.length()    ==    0)    {    if(value!=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	64	None	add
109	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    value.length()    ==    0)    {    JSType  result  =  getNativeTypeForTypeOf(type);  if(value  ==  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	64	None	add
110	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  type,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  type,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    value.length()    ==    0)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	64	None	add
111	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    value.length()    ==    0)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	64	None	add
112	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    value.length()    ==    0)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	64	None	add
113	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  if(value  ==  null  ||  value.length()!=  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  if(value  ==  null  ||  value.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    value.length()    ==    0)    {    if(value  ==  null  ||  value.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	64	None	add
114	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    value.length()    ==    0)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	64	None	add
115	[BUG]  [BUGGY]  if(value  ==  null)  {  If(value  ==  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  If(value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  If(value  ==  null)  {	  if(type!=    null)    {    If(type!=    null)    {    	non-compiled	[CE]  ';'  expected	86	None	replace
116	[BUG]  [BUGGY]  if(type  ==  null)  {  If(type!=  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  If(type!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  If(type!=  null)  {	  if(type!=    null)    {    If(type!=    null)    {    	non-compiled	[CE]  ';'  expected	86	None	replace
117	[BUG]  [BUGGY]  if(type!=  null)  {  If(type  ==  null)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  If(type  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  If(type  ==  null)  {	  if(type!=    null)    {    If(type!=    null)    {    	non-compiled	[CE]  ';'  expected	86	None	replace
118	[BUG]  [BUGGY]  if(resultEqualsValue)  {  If(type!=  null)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  If(type!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  If(type!=  null)  {	  if(type!=    null)    {    If(type!=    null)    {    	non-compiled	[CE]  ';'  expected	86	None	replace
119	[BUG]  [BUGGY]  if(resultEqualsValue)  {  If(type  ==  null)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  If(type  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  If(type  ==  null)  {	  if(type!=    null)    {    If(type!=    null)    {    	non-compiled	[CE]  ';'  expected	86	None	replace
120	[BUG]  [BUGGY]  if(value  ==  null)  {  If(type!=  null)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  If(type!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  If(type!=  null)  {	  if(type!=    null)    {    If(type!=    null)    {    	non-compiled	[CE]  ';'  expected	86	None	replace
121	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value),  resultEqualsValue);	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value));    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
122	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByFalseTypeOfResultVisitor(value));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByFalseTypeOfResultVisitor(value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByFalseTypeOfResultVisitor(value));	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value));    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
123	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.equals(resultEqualsValue))    {    if(type  ==  null  ||  value.equals(resultEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
124	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.equals(resultEqualsValue))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.equals(resultEqualsValue))    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.equals(resultEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
125	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.equals(resultEqualsValue))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.equals(resultEqualsValue))    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.equals(resultEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
126	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.equals(resultEqualsValue))    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.equals(resultEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
127	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  if(type!=  null  ||  value.equals(resultEqualsValue))  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  if(type!=  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.equals(resultEqualsValue))    {    if(type!=  null  ||  value.equals(resultEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
128	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  JSType  type  =  type.getNativeTypeForTypeOf(resultEqualsValue);  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  JSType  type  =  type.getNativeTypeForTypeOf(resultEqualsValue);  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.equals(resultEqualsValue))    {    JSType  type  =  type.getNativeTypeForTypeOf(resultEqualsValue);  if(type  ==  null  ||  value.equals(resultEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
129	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  JSType  type  =  type.getNativeTypeForTypeOf(resultEqualsValue);  if(value  ==  null  ||  value.equals(resultEqualsValue))  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  JSType  type  =  type.getNativeTypeForTypeOf(resultEqualsValue);  if(value  ==  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.equals(resultEqualsValue))    {    JSType  type  =  type.getNativeTypeForTypeOf(resultEqualsValue);  if(value  ==  null  ||  value.equals(resultEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
130	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  JSType  type  =  type.getNativeTypeForTypeOf(resultEqualsValue);  if(value!=  null  ||  value.equals(resultEqualsValue))  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  JSType  type  =  type.getNativeTypeForTypeOf(resultEqualsValue);  if(value!=  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.equals(resultEqualsValue))    {    JSType  type  =  type.getNativeTypeForTypeOf(resultEqualsValue);  if(value!=  null  ||  value.equals(resultEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
131	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  type);	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue),    type);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
132	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue),    type);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
133	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  type);	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue),    type);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
134	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
135	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  value));	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
136	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue),  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue),  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue),  value);	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
137	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue),  resultEqualsValue);	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
138	[BUG]  [BUGGY]  if(resultEqualsValue  ==  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  0)  {	  if(resultEqualsValue    >    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	48	None	replace
139	[BUG]  [BUGGY]  if(valueEqualsValue  >  0)  {  [CE]  cannot  find  symbol  valueEqualsValue  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(valueEqualsValue  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(valueEqualsValue  >  0)  {	  if(resultEqualsValue    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  valueEqualsValue	48	None	replace
140	[BUG]  [BUGGY]  if(resultEqualsValue!=  0)  {  [CE]  incomparable  types:  boolean  and  int  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  0)  {	  if(resultEqualsValue    >    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	48	None	replace
141	[BUG]  [BUGGY]  if(value  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  >  0)  {	  if(resultEqualsValue    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	48	None	replace
142	[BUG]  [BUGGY]  if(resultEqualsValue  >=  0)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  >=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  >=  0)  {	  if(resultEqualsValue    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	48	None	replace
143	[BUG]  [BUGGY]  if(resultEqualsValue  <=  0)  {  [CE]  bad  operand  types  for  binary  operator  '<='  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  <=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  <=  0)  {	  if(resultEqualsValue    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<='	48	None	replace
144	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(value);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(value);	  JSType    resultEqualsValue    =    getNativeTypeForTypeOfResult(type);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
145	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getRestrictedByTypeOfResult(type,  value);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getRestrictedByTypeOfResult(type,  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getRestrictedByTypeOfResult(type,  value);	  JSType    resultEqualsValue    =    getNativeTypeForTypeOfResult(type);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
146	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
147	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  value);	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
148	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
149	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value));	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
150	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
151	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
152	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
153	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
154	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
155	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
156	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)    ==    null)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
157	[BUG]  [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)    ==    null)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
158	[BUG]  [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)    ==    null)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
159	[BUG]  [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)    ==    null)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	105	5	replace
161	[BUG]  [BUGGY]  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	105	5	replace
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	105	8	replace
163	[BUG]  [BUGGY]  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	105	8	replace
164	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  value.length()  ==  0)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  value.length()  ==  0)  {	  if(value    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	50	None	replace
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  value.equals(resultEqualsValue))  {	  if(value    ==    null    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	50	3	replace
166	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals(resultEqualsValue))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.equals(resultEqualsValue))  {	  if(value    ==    null    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	50	3	replace
167	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  value.equals(resultEqualsValue))  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  value.equals(resultEqualsValue))  {	  if(value    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	50	None	replace
168	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)!=    null)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
169	[BUG]  [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)!=    null)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
170	[BUG]  [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)!=    null)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
171	[BUG]  [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)!=    null)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
172	[BUG]  [BUGGY]  if(type!=  null)  {  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(resultEqualsValue)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)!=    null)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
173	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)!=    null)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
174	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue)  {  if(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	38	None	replace
175	[BUG]  [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	38	None	replace
176	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  ||  resultEqualsValue)  {  if(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	38	None	replace
177	[BUG]  [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	38	None	replace
178	[BUG]  [BUGGY]  if(value!=  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	38	None	replace
179	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(type!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(type!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue)  {  if(type!=  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	38	None	replace
180	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue)  {  if(value  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	38	None	replace
181	[BUG]  [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(type  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	56	None	replace
182	[BUG]  [BUGGY]  if(value  ==  null)  {  if(value.length()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	56	None	replace
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  value.length()!=  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	56	8	replace
184	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()!=  0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.length()!=  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	56	8	replace
185	[BUG]  [BUGGY]  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value));	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
186	[BUG]  [BUGGY]  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  value);	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
187	[BUG]  [BUGGY]  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value,  resultEqualsValue));	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
188	[BUG]  [BUGGY]  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
189	[BUG]  [BUGGY]  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value),  resultEqualsValue);	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
190	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  if(type!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  if(type!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    if(type!=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	67	None	add
191	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  if(type  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  if(type  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    if(type  ==  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	67	None	add
192	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	67	None	add
193	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	67	None	add
194	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	67	None	add
195	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	67	None	add
196	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	67	None	add
197	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);	  	non-compiled	[CE]  ';'  expected	67	None	add
198	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    type;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
199	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE):  type;	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    type;    	non-compiled	[CE]  	154	None	replace
200	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    type;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
201	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    type;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
202	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeOf(type)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeOf(type)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeOf(type)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    type;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
203	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue),    null);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
204	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value)&&  resultEqualsValue  ==  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value)&&  resultEqualsValue  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value)&&  resultEqualsValue  ==  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  ';'  expected	133	None	replace
205	[BUG]  [BUGGY]  if(type.isAssignableFrom(resultEqualsValue)&&  resultEqualsValue  ==  null)  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isAssignableFrom(resultEqualsValue)&&  resultEqualsValue  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isAssignableFrom(resultEqualsValue)&&  resultEqualsValue  ==  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
206	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&  value  ==  null)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&  value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&  value  ==  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  ';'  expected	133	None	replace
207	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  if(value!=  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  if(value!=  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    if(value!=  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	144	None	add
208	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	144	None	add
209	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  if(value  ==  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  if(value  ==  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    if(value  ==  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	144	None	add
210	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type,  resultEqualsValue);  if(value!=  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type,  resultEqualsValue);  if(value!=  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    JSType  result  =  getNativeTypeForTypeOf(type,  resultEqualsValue);  if(value!=  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	144	None	add
211	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	144	None	add
212	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	144	None	add
213	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	144	None	add
214	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	144	None	add
215	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
216	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
217	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
218	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
219	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
220	[BUG]  [BUGGY]  final  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  final  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	final  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
221	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)!=    null)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
222	[BUG]  [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)!=    null)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
223	[BUG]  [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)!=    null)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
224	[BUG]  [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)!=    null)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
225	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue));  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue));	  if(type!=    null)    {    JSType    result    =    type.visit(    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  	7	None	replace
226	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    ==    false)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
227	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    ==    false)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
228	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ==  null  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ==  null  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(resultEqualsValue  ==  null  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    ==    false)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
229	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(value  ==  null  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(value  ==  null  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(value  ==  null  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    ==    false)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
230	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue!=  null  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue!=  null  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(resultEqualsValue!=  null  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    ==    false)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
231	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    null));    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
232	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  null),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  null),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  null),  resultEqualsValue);	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    null));    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
233	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  null));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  null));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  null));	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    null));    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
234	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value)||  resultEqualsValue!=  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value)||  resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value)||  resultEqualsValue!=  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  ';'  expected	131	None	replace
235	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  value!=  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  value!=  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  ';'  expected	131	None	replace
236	[BUG]  [BUGGY]  if(type  ==  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue!=  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue!=  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  ';'  expected	131	None	replace
237	[BUG]  [BUGGY]  if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue!=  null)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue!=  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  ';'  expected	131	None	replace
238	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  value  ==  null)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  value  ==  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  ';'  expected	131	None	replace
239	[BUG]  [BUGGY]  JSType  type  =  type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	110	None	replace
240	[BUG]  [BUGGY]  JSType  type  =  type!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type!=  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	110	None	replace
241	[BUG]  [BUGGY]  JSType  result  =  type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	110	None	replace
242	[BUG]  [BUGGY]  AssertionFailedError(type,  resultEqualsValue)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  AssertionFailedError(type,  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	AssertionFailedError(type,  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	110	None	replace
243	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  resultEqualsValue.length()  ==  0)  {	  if(value    ==    null    ||    resultEqualsValue.length()    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	70	None	replace
244	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  type.length()  ==  0)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  ||  type.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  type.length()  ==  0)  {	  if(value    ==    null    ||    resultEqualsValue.length()    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	70	None	replace
245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  >=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  value.length()  >=  0)  {	  if(value!=    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	102	8	replace
246	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  >=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  >=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.length()  >=  0)  {	  if(value!=    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	102	8	replace
247	[BUG]  [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    >=    null)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
248	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(type);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
249	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(type);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
250	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(type);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
251	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(type);    if(resultEqualsValue)    {    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	21	None	replace
252	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(type);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
253	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  }  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(type);    if(resultEqualsValue)    {    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	21	None	replace
254	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isConstructor())  {  [CE]  boolean  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isConstructor())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue.isConstructor())  {	  if(resultEqualsValue    ==    null    ||    type.isConstructor())    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	55	None	replace
255	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue.isConstructor())  {  [CE]  boolean  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue.isConstructor())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue.isConstructor())  {	  if(resultEqualsValue    ==    null    ||    type.isConstructor())    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	55	None	replace
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type.isConstructor())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  type.isConstructor())  {	  if(resultEqualsValue    ==    null    ||    type.isConstructor())    {    	compilable	  [FE]  AssertionFailedError  	55	3	replace
257	[BUG]  [BUGGY]  if(value  ==  null  ||  type.isConstructor())  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type.isConstructor())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  type.isConstructor())  {	  if(resultEqualsValue    ==    null    ||    type.isConstructor())    {    	compilable	  [FE]  AssertionFailedError  	55	3	replace
258	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  &&  type.isConstructor())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  &&  type.isConstructor())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  &&  type.isConstructor())  {	  if(resultEqualsValue    ==    null    ||    type.isConstructor())    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	55	None	replace
259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.isConstructor())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  type.isConstructor())  {	  if(resultEqualsValue    ==    null    ||    type.isConstructor())    {    	compilable	  [FE]  AssertionFailedError  	55	2	replace
260	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isConstructor())  {  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.isConstructor())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  type.isConstructor())  {	  if(resultEqualsValue    ==    null    ||    type.isConstructor())    {    	compilable	  [FE]  AssertionFailedError  	55	2	replace
261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  &&  resultEqualsValue)  {	  if(type!=    null    &&    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	128	3	replace
262	[BUG]  [BUGGY]  if(value  ==  null  &&  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  &&  resultEqualsValue)  {	  if(type!=    null    &&    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	128	3	replace
263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  &&  resultEqualsValue)  {	  if(type!=    null    &&    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	128	3	replace
264	[BUG]  [BUGGY]  if(type  ==  null  &&  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  &&  resultEqualsValue)  {	  if(type!=    null    &&    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	128	3	replace
265	[BUG]  [BUGGY]  if(resultEqualsValue!=  null  &&  type.isUnknownType())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue!=  null  &&  type.isUnknownType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  null  &&  type.isUnknownType())  {	  if(type!=    null    &&    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	128	None	replace
266	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue  ==  NULL)  {  [CE]  cannot  find  symbol  NULL  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue  ==  NULL)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue  ==  NULL)  {	  if(type    ==    null    ||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  NULL	23	None	replace
267	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue  >=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue  >=  null)  {	  if(type    ==    null    ||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	23	None	replace
268	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isUnknownType())  {  [CE]  boolean  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isUnknownType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue.isUnknownType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnknownType())    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	53	None	replace
269	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue.isUnknownType())  {  [CE]  boolean  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue.isUnknownType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue.isUnknownType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnknownType())    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	53	None	replace
270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type.isUnknownType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  type.isUnknownType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	53	3	replace
271	[BUG]  [BUGGY]  if(value  ==  null  ||  type.isUnknownType())  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type.isUnknownType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  type.isUnknownType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	53	3	replace
272	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue.isUnknownType())  {  [CE]  boolean  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue.isUnknownType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue.isUnknownType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnknownType())    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	53	None	replace
273	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isUnknownType()  ||  value.equals(resultEqualsValue))  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isUnknownType()  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  type.isUnknownType()  ||  value.equals(resultEqualsValue))  {	  if(resultEqualsValue    ==    null    ||    type.isUnknownType())    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	53	None	replace
274	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isUnknownType()  ||  value.startsWith(resultEqualsValue))  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isUnknownType()  ||  value.startsWith(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  type.isUnknownType()  ||  value.startsWith(resultEqualsValue))  {	  if(resultEqualsValue    ==    null    ||    type.isUnknownType())    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	53	None	replace
275	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  If(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  If(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue)  {  If(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    If(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	112	None	replace
276	[BUG]  [BUGGY]  if(resultEqualsValue)  {  If(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  If(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  If(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    If(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	112	None	replace
277	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  If(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  If(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue)  {  If(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    If(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	112	None	replace
278	[BUG]  [BUGGY]  if(value  ==  null)  {  If(value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  If(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  If(value  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    If(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	112	None	replace
279	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  If(value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  If(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue)  {  If(value  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    If(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	112	None	replace
280	[BUG]  [BUGGY]  if(value  ==  null)  {  If(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  If(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  If(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    If(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	112	None	replace
281	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  if(value!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  if(value!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    resultEqualsValue)    {    if(value!=  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	73	None	add
282	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  if(value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  if(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    resultEqualsValue)    {    if(value  ==  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	73	None	add
283	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	73	None	add
284	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	73	None	add
285	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	73	None	add
286	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	73	None	add
287	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value));  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value));	  	non-compiled	[CE]  ';'  expected	73	None	add
288	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(!resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(!resultEqualsValue)  {	  if(type!=    null)    {    if(type    >=    null)    {    	compilable	  [FE]  AssertionFailedError  	83	8	replace
289	[BUG]  [BUGGY]  if(!resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(!resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(!resultEqualsValue)  {	  if(type!=    null)    {    if(type    >=    null)    {    	compilable	  [FE]  AssertionFailedError  	83	8	replace
290	[BUG]  [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  value.length()!=  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  value.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(type  ==  null  ||  value.length()!=  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    value.length()!=    0)    {    	non-compiled	[CE]  ';'  expected	115	None	replace
291	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  resultEqualsValue!=  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  resultEqualsValue!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
292	[BUG]  [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  resultEqualsValue!=  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(resultEqualsValue  ||  resultEqualsValue!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
293	[BUG]  [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  resultEqualsValue  ==  null)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  resultEqualsValue  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(resultEqualsValue  ||  resultEqualsValue  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
294	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  resultEqualsValue  ==  null)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  resultEqualsValue  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  resultEqualsValue  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
295	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  value  ==  null)  {	  if(type    ==    null    ||    value!=    null)    {    	compilable	  [FE]  AssertionFailedError  	76	2	replace
296	[BUG]  [BUGGY]  if(type  ==  null  ||  value  ==  null)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  value  ==  null)  {	  if(type    ==    null    ||    value!=    null)    {    	compilable	  [FE]  AssertionFailedError  	76	2	replace
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  type  ==  null)  {	  if(type    ==    null    ||    value!=    null)    {    	compilable	  [FE]  AssertionFailedError  	76	2	replace
298	[BUG]  [BUGGY]  if(value  ==  null  ||  type  ==  null)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  type  ==  null)  {	  if(type    ==    null    ||    value!=    null)    {    	compilable	  [FE]  AssertionFailedError  	76	2	replace
299	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  type!=  null)  {	  if(type    ==    null    ||    value!=    null)    {    	compilable	  [FE]  AssertionFailedError  	76	9	replace
300	[BUG]  [BUGGY]  if(value  ==  null  ||  type!=  null)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  type!=  null)  {	  if(type    ==    null    ||    value!=    null)    {    	compilable	  [FE]  AssertionFailedError  	76	9	replace
301	[BUG]  [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  key.length()  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  key.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(type  ==  null  ||  key.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    key.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	155	None	replace
302	[BUG]  [BUGGY]  if(value  ==  null  ||  key.length()  ==  0)  {  [CE]  cannot  find  symbol  key  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  key.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  key.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    key.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  key	155	None	replace
303	[BUG]  [BUGGY]  if(key  ==  null  ||  value.length()  ==  0)  {  [CE]  cannot  find  symbol  key  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(key  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(key  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    key.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  key	155	None	replace
304	[BUG]  [BUGGY]  if(type  ==  null  ||  key.length()  ==  0)  {  [CE]  cannot  find  symbol  key  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  key.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  key.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    key.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  key	155	None	replace
305	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));	  JSType    result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
306	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  if(type  ==  null  ||  value!=  null)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  if(type  ==  null  ||  value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    if(type  ==  null  ||  value!=  null)  {	  	non-compiled	[CE]  ';'  expected	75	None	add
307	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value!=  null)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value!=  null)  {	  	non-compiled	[CE]  ';'  expected	75	None	add
308	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value!=  null)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value!=  null)  {	  	non-compiled	[CE]  ';'  expected	75	None	add
309	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value!=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value!=  null)  {	  	non-compiled	[CE]  ';'  expected	75	None	add
310	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	75	None	add
311	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	75	None	add
312	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	75	None	add
313	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null)  {	  	non-compiled	[CE]  ';'  expected	75	None	add
314	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByUndefinedVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
315	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  value));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  value));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByUndefinedVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
316	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByUndefinedVisitor(resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByUndefinedVisitor(resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByUndefinedVisitor(resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByUndefinedVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
317	[BUG]  [BUGGY]  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByUndefinedVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
318	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByUndefinedVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
319	[BUG]  [BUGGY]  JSType  type  =  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	111	None	replace
320	[BUG]  [BUGGY]  JSType  result  =  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	111	None	replace
321	[BUG]  [BUGGY]  JSType  type  =  null  ||  value.equals(resultEqualsValue)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  null  ||  value.equals(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  null  ||  value.equals(resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	111	None	replace
322	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(type,  value,  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(type,  value,  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeForTypeOf(type,  value,  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	111	None	replace
323	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue))  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue))  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	111	None	replace
324	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
325	[BUG]  [BUGGY]  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	59	None	replace
326	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
327	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  if(type!=  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  if(type!=  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    &&    resultEqualsValue)    {    if(type!=  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	127	None	add
328	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  if(type  ==  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  if(type  ==  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    &&    resultEqualsValue)    {    if(type  ==  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	127	None	add
329	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  type  =  type!=  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  type  =  type!=  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    &&    resultEqualsValue)    {    JSType  type  =  type!=  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	127	None	add
330	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    &&    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	127	None	add
331	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  type  =  type  ==  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  type  =  type  ==  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    &&    resultEqualsValue)    {    JSType  type  =  type  ==  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	127	None	add
332	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  if(type  >=  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  if(type  >=  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    &&    resultEqualsValue)    {    if(type  >=  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	127	None	add
333	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  value,  resultEqualsValue);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    &&    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  value,  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	127	None	add
334	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  result  =  type!=  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  result  =  type!=  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    &&    resultEqualsValue)    {    JSType  result  =  type!=  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	127	None	add
335	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    ==    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
336	[BUG]  [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    ==    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
337	[BUG]  [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    ==    null)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
338	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value),    type,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
339	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type),  value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type),  value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type),  value,  resultEqualsValue);	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value),    type,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
340	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value),  value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value),  value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value),  value,  resultEqualsValue);	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value),    type,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
341	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value),    type,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
342	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
343	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
344	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  }	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
345	[BUG]  [BUGGY]  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
346	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
347	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(type!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(type!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    if(type!=  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
348	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    if(type  ==  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
349	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
350	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	46	None	add
351	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	46	None	add
352	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
353	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
354	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
355	[BUG]  [BUGGY]  if(!resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  resultEqualsValue))  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(!resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(!resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  resultEqualsValue))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,    resultEqualsValue))    {    	non-compiled	[CE]  ';'  expected	132	None	replace
356	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  resultEqualsValue))  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  resultEqualsValue))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,    resultEqualsValue))    {    	non-compiled	[CE]  ';'  expected	132	None	replace
357	[BUG]  [BUGGY]  if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value,  resultEqualsValue))  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value,  resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value,  resultEqualsValue))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,    resultEqualsValue))    {    	non-compiled	[CE]  ';'  expected	132	None	replace
358	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  value))  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  value))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,    resultEqualsValue))    {    	non-compiled	[CE]  ';'  expected	132	None	replace
359	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value,  resultEqualsValue))  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value,  resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value,  resultEqualsValue))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,    resultEqualsValue))    {    	non-compiled	[CE]  ';'  expected	132	None	replace
360	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
361	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  value));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  value));	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
362	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue),  value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue),  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue),  value);	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
363	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue),  resultEqualsValue);	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
364	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
365	[BUG]  [BUGGY]  if(resultEqualsValue!=  null  ||  value.length()  ==  0)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  null  ||  value.length()  ==  0)  {	  if(value!=    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	74	None	replace
366	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  value!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  ||  value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  value!=  null)  {	  if(value    ==    null    ||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	99	None	replace
367	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue);	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value),    type,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
368	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type),  value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type),  value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type),  value,  resultEqualsValue);	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value),    type,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
369	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value),    type,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
370	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type,  value),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type,  value),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type,  value),  resultEqualsValue);	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value),    type,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
371	[BUG]  [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(type)    ==    null)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
372	[BUG]  [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(type)    ==    null)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
373	[BUG]  [BUGGY]  if(!resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(!resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(!resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(type)    ==    null)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
374	[BUG]  [BUGGY]  if(!resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(!resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(!resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(value)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(type)    ==    null)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
375	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(type)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(type)    ==    null)    {    	non-compiled	[CE]  ';'  expected	109	None	replace
376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  ||  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	8	replace
377	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  >  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  ||  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	8	replace
378	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	8	replace
379	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  >  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	8	replace
380	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  ||  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	8	replace
381	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  >  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	8	replace
382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	8	replace
383	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  >  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	8	replace
384	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  &&  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	3	replace
385	[BUG]  [BUGGY]  if(value  ==  null  &&  value.length()  >  0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  &&  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	3	replace
386	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    null;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
387	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    null;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
388	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE):  null;	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    null;    	non-compiled	[CE]  	152	None	replace
389	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    null;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
390	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    null;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
391	[BUG]  [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  resultEqualsValue);	  JSType    result    =    getRestrictedByTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
392	[BUG]  [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  outcome);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  outcome);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  outcome);	  JSType    result    =    getRestrictedByTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
393	[BUG]  [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  result);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  result);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  result);	  JSType    result    =    getRestrictedByTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
394	[BUG]  [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  type);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  type);	  JSType    result    =    getRestrictedByTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
395	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  if(type  ==  null  ||  value.length()!=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  if(type  ==  null  ||  value.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()!=    0)    {    if(type  ==  null  ||  value.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	103	None	add
396	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()!=  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()!=    0)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  value.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	103	None	add
397	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()!=  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()!=    0)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	103	None	add
398	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()!=  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()!=    0)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	103	None	add
399	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()!=    0)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	103	None	add
400	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  if(type  ==  null  ||  value.length()  >=  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  if(type  ==  null  ||  value.length()  >=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()!=    0)    {    if(type  ==  null  ||  value.length()  >=  0)  {	  	non-compiled	[CE]  ';'  expected	103	None	add
401	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()!=    0)    {    JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	103	None	add
402	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()!=    0)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	103	None	add
403	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    resultEqualsValue)    {    if(value  ==  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	49	None	add
404	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	49	None	add
405	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	49	None	add
406	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	49	None	add
407	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(value!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(value!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    resultEqualsValue)    {    if(value!=  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	49	None	add
408	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    resultEqualsValue)    {    JSType  result  =  type.visit(  new  RestrictByTrueTypeOfResultVisitor(value),  type,  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	49	None	add
409	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type,  resultEqualsValue);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    resultEqualsValue)    {    JSType  result  =  getNativeTypeForTypeOf(type,  resultEqualsValue);	  	non-compiled	[CE]  ';'  expected	49	None	add
410	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
411	[BUG]  [BUGGY]  final  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  final  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	final  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
412	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  if(value!=  null  &&  value.length()  >  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  if(value!=  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    if(value!=  null  &&  value.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	142	None	add
413	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  &&  value.length()  >  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  &&  value.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	142	None	add
414	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  value  =  type.getRestrictedByTypeOfResult(value);  if(value!=  null  &&  value.length()  >  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  value  =  type.getRestrictedByTypeOfResult(value);  if(value!=  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    JSType  value  =  type.getRestrictedByTypeOfResult(value);  if(value!=  null  &&  value.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	142	None	add
415	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null  &&  value.length()  >  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    if(value  ==  null  &&  value.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	142	None	add
416	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  value  =  getNativeTypeForTypeOf(type);  if(value!=  null  &&  value.length()  >  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  value  =  getNativeTypeForTypeOf(type);  if(value!=  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    JSType  value  =  getNativeTypeForTypeOf(type);  if(value!=  null  &&  value.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	142	None	add
417	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  value  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue);  if(value!=  null  &&  value.length()  >  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  value  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue);  if(value!=  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    JSType  value  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue);  if(value!=  null  &&  value.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	142	None	add
418	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  &&  value.length()  >  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    JSType  value  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  &&  value.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	142	None	add
419	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(value!=  null  &&  value.length()  >  0)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(value!=  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    JSType  result  =  getNativeTypeForTypeOf(type);  if(value!=  null  &&  value.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	142	None	add
420	[BUG]  [BUGGY]  if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))    {    	non-compiled	[CE]  ';'  expected	134	None	replace
421	[BUG]  [BUGGY]  if(type  ==  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))    {    	non-compiled	[CE]  ';'  expected	134	None	replace
422	[BUG]  [BUGGY]  if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))    {    	non-compiled	[CE]  ';'  expected	134	None	replace
423	[BUG]  [BUGGY]  if(type  ==  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))    {    	non-compiled	[CE]  ';'  expected	134	None	replace
424	[BUG]  [BUGGY]  if(type.isAssignableFrom(value)||  type.isAssignableFrom(resultEqualsValue))  {  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isAssignableFrom(value)||  type.isAssignableFrom(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isAssignableFrom(value)||  type.isAssignableFrom(resultEqualsValue))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))    {    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
425	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isUnionType())  {  [CE]  boolean  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isUnionType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue.isUnionType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnionType())    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	141	None	replace
426	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue.isUnionType())  {  [CE]  boolean  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue.isUnionType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue.isUnionType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnionType())    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	141	None	replace
427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type.isUnionType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  type.isUnionType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnionType())    {    	compilable	  [FE]  AssertionFailedError  	141	9	replace
428	[BUG]  [BUGGY]  if(value  ==  null  ||  type.isUnionType())  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type.isUnionType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  type.isUnionType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnionType())    {    	compilable	  [FE]  AssertionFailedError  	141	9	replace
429	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue.isUnionType())  {  [CE]  boolean  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue.isUnionType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue.isUnionType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnionType())    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	141	None	replace
430	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isFunctionType())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  ||  type.isFunctionType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  type.isFunctionType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnionType())    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	141	None	replace
431	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value)||  resultEqualsValue  ==  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value)||  resultEqualsValue  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value)||  resultEqualsValue  ==  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
432	[BUG]  [BUGGY]  if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue  ==  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  resultEqualsValue  ==  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
433	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  value);	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
434	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    <    null)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
435	[BUG]  [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    <    null)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
436	[BUG]  [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    <    null)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
437	[BUG]  [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  <  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    <    null)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
438	[BUG]  [BUGGY]  JSType  result  =  getNativeType(type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeType(type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeType(type);	  JSType    result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
439	[BUG]  [BUGGY]  JSType  result  =  getNativeType(TYPE);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeType(TYPE);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeType(TYPE);	  JSType    result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
440	[BUG]  [BUGGY]  JSType  result  =  getNativeType(type,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeType(type,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeType(type,  resultEqualsValue);	  JSType    result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
441	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  value);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  value);	  JSType    result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
442	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  type);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  type);	  JSType    result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
443	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  value  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  ||  value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  value  ==  null)  {	  if(value    ==    null    ||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	25	None	replace
444	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeForTypeOf(value);	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
445	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue);	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
446	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value.toLowerCase());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value.toLowerCase());  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeForTypeOf(value.toLowerCase());	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
447	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value).getRestrictedByTypeOfResult();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value).getRestrictedByTypeOfResult();  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeForTypeOf(value).getRestrictedByTypeOfResult();	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
448	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value.toString());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value.toString());  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeForTypeOf(value.toString());	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
449	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
450	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
451	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
452	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
453	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByFalseTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
454	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByFalseTypeOfResultVisitor(resultEqualsValue));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByFalseTypeOfResultVisitor(resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByFalseTypeOfResultVisitor(resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByFalseTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
455	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByFalseTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
456	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue),  type);	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByFalseTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
457	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  value));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  value));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByFalseTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
458	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeOf(type).visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeOf(type).visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeOf(type).visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByFalseTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
459	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeOf(value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeOf(value);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
460	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTypeOfResultVisitor(resultEqualsValue));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTypeOfResultVisitor(resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTypeOfResultVisitor(resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
461	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  value,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
462	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTypeOfResultVisitor(value,  value));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTypeOfResultVisitor(value,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTypeOfResultVisitor(value,  value));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
463	[BUG]  [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  type.length()  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  type.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(type  ==  null  ||  type.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    type.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	114	None	replace
464	[BUG]  [BUGGY]  if(value!=  null)  {  if(type  ==  null  ||  type.length()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(type  ==  null  ||  type.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(type  ==  null  ||  type.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    type.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	114	None	replace
465	[BUG]  [BUGGY]  if(type!=  null  ||  type.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  type.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  type.length()  ==  0)  {	  if(type    ==    null    ||    type.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
466	[BUG]  [BUGGY]  if(type  ==  null  ||  type.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  type.length()!=  0)  {	  if(type    ==    null    ||    type.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
467	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.equals(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  type.equals(value))  {	  if(type    ==    null    ||    type.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	71	2	replace
468	[BUG]  [BUGGY]  if(type  ==  null  ||  type.equals(value))  {  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.equals(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  type.equals(value))  {	  if(type    ==    null    ||    type.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	71	2	replace
469	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  value);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  value);	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
470	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  resultEqualsValue);	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
471	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeOf(value);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeOf(value);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
472	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type,  value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type,  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type,  value);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
473	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOfResult(type);	  JSType    result    =    getNativeTypeForTypeOf(type);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
474	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type,  resultEqualsValue);	  JSType    result    =    getNativeTypeForTypeOf(type);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
475	[BUG]  [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getRestrictedByTypeOfResult(type,  value);	  JSType    result    =    getNativeTypeForTypeOf(type);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
476	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeType(type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeType(type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeType(type);	  JSType    resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
477	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeType(TYPE);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeType(TYPE);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeType(TYPE);	  JSType    resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
478	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeType(type,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeType(type,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeType(type,  resultEqualsValue);	  JSType    resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
479	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeType(type,  value);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeType(type,  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeType(type,  value);	  JSType    resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
480	[BUG]  [BUGGY]  if(value  ==  null  ||  type.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  type.length()!=  0)  {	  if(type    ==    null    ||    value.length()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
481	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    null;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
482	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(type);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeForTypeOf(type);	  if(type!=    null)    {    JSType    type!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
483	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
484	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
485	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
486	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
487	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
488	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    if(type    {    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	125	None	replace
489	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  JSType    result    =    type.visit(new    RestrictedByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
490	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue));  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  type,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value),    type,    resultEqualsValue));    	non-compiled	[CE]  	22	None	replace
491	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type),  value,  resultEqualsValue));  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type),  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type),  value,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value),    type,    resultEqualsValue));    	non-compiled	[CE]  	22	None	replace
492	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue));  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value),    type,    resultEqualsValue));    	non-compiled	[CE]  	22	None	replace
493	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type,  value,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value),    type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
494	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  resultEqualsValue)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
495	[BUG]  [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(resultEqualsValue  ||  resultEqualsValue)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
496	[BUG]  [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(resultEqualsValue  ||  resultEqualsValue)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
497	[BUG]  [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(resultEqualsValue  ||  resultEqualsValue)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
498	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(resultEqualsValue  ||  resultEqualsValue)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	14	5	replace
499	[BUG]  [BUGGY]  if(resultEqualsValue  ||  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ||  resultEqualsValue)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	14	5	replace
500	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue);	  JSType    resultEqualsValue    =    type.getRestrictedByTypeOfResult(value);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
501	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(resultEqualsValue);	  JSType    resultEqualsValue    =    type.getRestrictedByTypeOfResult(value);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
502	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value,  value);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value,  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value,  value);	  JSType    resultEqualsValue    =    type.getRestrictedByTypeOfResult(value);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
503	[BUG]  [BUGGY]  if(type  ==  null)  {  if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  ';'  expected	138	None	replace
504	[BUG]  [BUGGY]  if(type!=  null)  {  if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  ';'  expected	138	None	replace
505	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  ';'  expected	138	None	replace
506	[BUG]  [BUGGY]  if(type  ==  null)  {  if(value  ==  null  ||  resultEqualsValue  >=  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(value  ==  null  ||  resultEqualsValue  >=  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(value  ==  null  ||  resultEqualsValue  >=  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  ';'  expected	138	None	replace
507	[BUG]  [BUGGY]  if(type!=  null)  {  if(value  ==  null  ||  resultEqualsValue  >=  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(value  ==  null  ||  resultEqualsValue  >=  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(value  ==  null  ||  resultEqualsValue  >=  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  ';'  expected	138	None	replace
508	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	138	None	replace
509	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	138	None	replace
510	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(type,  value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(type,  value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(type,  value,  resultEqualsValue);	  JSType    resultEqualsValue    =    getNativeTypeForTypeOfResult(type,    value);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
511	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeOfResult(type,  value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeOfResult(type,  value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeTypeOfResult(type,  value,  resultEqualsValue);	  JSType    resultEqualsValue    =    getNativeTypeForTypeOfResult(type,    value);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
512	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(value,  type);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(value,  type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(value,  type);	  JSType    resultEqualsValue    =    getNativeTypeForTypeOfResult(type,    value);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
513	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    type.visit(new    RestrictByTypeOfResultVisitor(value),    value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
514	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    type.visit(new    RestrictByTypeOfResultVisitor(value),    value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
515	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  }  else  {  return  result;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  }  else  {  return  result;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  }  else  {  return  result;  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    type.visit(new    RestrictByTypeOfResultVisitor(value),    value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
516	[BUG]  [BUGGY]  final  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  final  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	final  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    type.visit(new    RestrictByTypeOfResultVisitor(value),    value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
517	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( "   "))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( "   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.equals(   "   "))    {    if(value!=  null  &&  value.equals( "   "))  {	  	non-compiled	[CE]  ';'  expected	146	None	add
518	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value  ==  null  &&  value.equals( "   "))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value  ==  null  &&  value.equals( "   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.equals(   "   "))    {    if(value  ==  null  &&  value.equals( "   "))  {	  	non-compiled	[CE]  ';'  expected	146	None	add
519	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( ". "))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( ". "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.equals(   "   "))    {    if(value!=  null  &&  value.equals( ". "))  {	  	non-compiled	[CE]  ';'  expected	146	None	add
520	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( ".class "))  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( ".class "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.equals(   "   "))    {    if(value!=  null  &&  value.equals( ".class "))  {	  	non-compiled	[CE]  ';'  expected	146	None	add
521	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( ",   "))  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( ",   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.equals(   "   "))    {    if(value!=  null  &&  value.equals( ",   "))  {	  	non-compiled	[CE]  ';'  expected	146	None	add
522	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( "._ "))  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( "._ "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.equals(   "   "))    {    if(value!=  null  &&  value.equals( "._ "))  {	  	non-compiled	[CE]  ';'  expected	146	None	add
523	[BUG]  [BUGGY]  if(type.resultEqualsValue!=  null)  {  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.resultEqualsValue!=  null)  {	  if(this.resultEqualsValue!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	100	None	replace
524	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ==  null  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ==  null  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(resultEqualsValue  ==  null  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
525	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ==  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(resultEqualsValue  ==  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(resultEqualsValue  ==  getNativeType(CHECKED_UNKNOWN_TYPE));  }	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
526	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
527	[BUG]  [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
528	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
529	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
530	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
531	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(value));	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
532	[BUG]  [BUGGY]  if(value  ==  null)  {  if(type!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(type!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(type!=  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    if(type!=    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
533	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  if(type!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  if(type!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  ||  resultEqualsValue)  {  if(type!=  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    if(type!=    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
534	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  resultEqualsValue);	  JSType    result    =    type.getRestrictedByTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
535	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(value,  value,  resultEqualsValue);	  JSType    result    =    type.getRestrictedByTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
536	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  value);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  value);	  JSType    result    =    type.getRestrictedByTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
537	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue.equals(value))  {  [CE]  boolean  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue.equals(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue.equals(value))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	52	None	replace
538	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue.equals(value))  {  [CE]  boolean  cannot  be  dereferenced  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue.equals(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue.equals(value))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	52	None	replace
539	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  value.equals(value))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	compilable	  [FE]  AssertionFailedError  	52	8	replace
540	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(value))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  value.equals(value))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	compilable	  [FE]  AssertionFailedError  	52	8	replace
541	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue.equals(value))  {  [CE]  boolean  cannot  be  dereferenced  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue.equals(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue.equals(value))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	52	None	replace
542	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  value.equals(type))  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  ||  value.equals(type))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  value.equals(type))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	52	None	replace
543	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type.equals(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  type.equals(value))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	compilable	  [FE]  AssertionFailedError  	52	3	replace
544	[BUG]  [BUGGY]  if(value  ==  null  ||  type.equals(value))  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type.equals(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  type.equals(value))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	compilable	  [FE]  AssertionFailedError  	52	3	replace
545	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.equals(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  ||  value.equals(value))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	compilable	  [FE]  AssertionFailedError  	52	8	replace
546	[BUG]  [BUGGY]  if(type!=  null  ||  value.equals(value))  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.equals(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  value.equals(value))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	compilable	  [FE]  AssertionFailedError  	52	8	replace
547	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isSubtype(value))  {  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isSubtype(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue.isSubtype(value))  {	  if(resultEqualsValue    ==    null    ||    type.isSubtype(value))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	140	None	replace
548	[BUG]  [BUGGY]  if(value  ==  null  ||  type.isSubtype(resultEqualsValue))  {  [CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type.isSubtype(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  type.isSubtype(resultEqualsValue))  {	  if(resultEqualsValue    ==    null    ||    type.isSubtype(value))    {    	non-compiled	[CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;	140	None	replace
549	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue.isSubtype(value))  {  [CE]  boolean  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue.isSubtype(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue.isSubtype(value))  {	  if(resultEqualsValue    ==    null    ||    type.isSubtype(value))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	140	None	replace
550	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isSubtype(resultEqualsValue))  {  [CE]  boolean  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isSubtype(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue.isSubtype(resultEqualsValue))  {	  if(resultEqualsValue    ==    null    ||    type.isSubtype(value))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	140	None	replace
551	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isSubtype(result))  {  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue.isSubtype(result))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue.isSubtype(result))  {	  if(resultEqualsValue    ==    null    ||    type.isSubtype(value))    {    	non-compiled	[CE]  cannot  find  symbol  result	140	None	replace
552	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue.isSubtype(resultEqualsValue))  {  [CE]  boolean  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue.isSubtype(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue.isSubtype(resultEqualsValue))  {	  if(resultEqualsValue    ==    null    ||    type.isSubtype(value))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	140	None	replace
553	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  &&  type.isSubtype(value))  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  &&  type.isSubtype(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  &&  type.isSubtype(value))  {	  if(resultEqualsValue    ==    null    ||    type.isSubtype(value))    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	140	None	replace
554	[BUG]  [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  value  ==  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(resultEqualsValue  ||  value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(resultEqualsValue  ||  value  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
555	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  value  ==  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  value  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
556	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue),  resultEqualsValue);	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByFalseTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
557	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByFalseTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
558	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByUndefinedVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
559	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByUndefinedVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
560	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByUndefinedVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
561	[BUG]  [BUGGY]  if(value!=  null)  {  if(type  ==  null  ||  key.length()  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(type  ==  null  ||  key.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(type  ==  null  ||  key.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    key.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	155	None	replace
562	[BUG]  [BUGGY]  if(value  ==  null)  {  if(key  ==  null  ||  key.length()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(key  ==  null  ||  key.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(key  ==  null  ||  key.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    key.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	155	None	replace
563	[BUG]  [BUGGY]  if(value!=  null)  {  if(type  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(type  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(type  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    key.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	155	None	replace
564	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue  ==  NULL)  {  [CE]  cannot  find  symbol  NULL  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue  ==  NULL)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue  ==  NULL)  {	  if(value    ==    null    ||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  NULL	25	None	replace
565	[BUG]  [BUGGY]  resultEqualsValue  =  RestrictByTypeOfResultVisitor.class.getRestrictedByTypeOfResult(value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  resultEqualsValue  =  RestrictByTypeOfResultVisitor.class.getRestrictedByTypeOfResult(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	resultEqualsValue  =  RestrictByTypeOfResultVisitor.class.getRestrictedByTypeOfResult(value);	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))    {    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
566	[BUG]  [BUGGY]  resultEqualsValue  =  RestrictByTypeOfResultVisitor.class.getSimpleName();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  resultEqualsValue  =  RestrictByTypeOfResultVisitor.class.getSimpleName();  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	resultEqualsValue  =  RestrictByTypeOfResultVisitor.class.getSimpleName();	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))    {    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
567	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
568	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  variable  result  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	116	None	replace
569	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
570	[BUG]  [BUGGY]  JSError.make(type,  value,  UNKNOWN_TYPE,  resultEqualsValue))  {  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSError.make(type,  value,  UNKNOWN_TYPE,  resultEqualsValue))  {  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSError.make(type,  value,  UNKNOWN_TYPE,  resultEqualsValue))  {  JSType  result  =  getNativeTypeForTypeOf(value);	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  ';'  expected	116	None	replace
571	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  &&  value.length()  ==  0)  {	  if(type!=    null    &&    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	128	3	replace
572	[BUG]  [BUGGY]  if(type!=  null  &&  value.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  &&  value.length()  ==  0)  {	  if(type!=    null    &&    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	128	3	replace
573	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  value!=  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  value!=  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    JSType  value!=  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	144	None	add
574	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  if(value  >=  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  if(value  >=  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    if(value  >=  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	144	None	add
575	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  If(value!=  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  If(value!=  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    If(value!=  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	144	None	add
576	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  if(value  >>  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  if(value  >>  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    if(value  >>  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	144	None	add
577	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  if(value!=  null  &&  resultEqualsVALue)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  if(value!=  null  &&  resultEqualsVALue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    if(value!=  null  &&  resultEqualsVALue)  {	  	non-compiled	[CE]  ';'  expected	144	None	add
578	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  null);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  null);	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue),    null);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
579	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  type.isPrimitive())  {	  if(resultEqualsValue    ==    null    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
580	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
581	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  incomparable  types:  boolean  and  <null>  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	126	None	replace
582	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
583	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
584	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  variable  result  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	126	None	replace
585	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
586	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
587	[BUG]  [BUGGY]  if(value!=  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
588	[BUG]  [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
589	[BUG]  [BUGGY]  if(value!=  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
590	[BUG]  [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(type  ==  null  ||  resultEqualsValue)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
591	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(resultEqualsValue)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
592	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	resultEqualsValue  =  getNativeTypeForTypeOf(value);	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    >=    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
593	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
594	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
595	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
596	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
597	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
598	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
599	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
600	[BUG]  [BUGGY]  if(resultEqualsValue!=  null  ||  type.isUnknownType())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue!=  null  ||  type.isUnknownType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  null  ||  type.isUnknownType())  {	  if(type!=    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	47	None	replace
601	[BUG]  [BUGGY]  if(resultEqualsValue!=  null  ||  type.isPrimitive())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue!=  null  ||  type.isPrimitive())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  null  ||  type.isPrimitive())  {	  if(type!=    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	47	None	replace
602	[BUG]  [BUGGY]  if(type!=  null)  {  if(value  ==  null  ||  resultEqualsValue  ==  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(value  ==  null  ||  resultEqualsValue  ==  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(value  ==  null  ||  resultEqualsValue  ==  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  ';'  expected	138	None	replace
603	[BUG]  [BUGGY]  if(type!=  null)  {  if(value  ==  null  ||  resultEqualsValue  ==  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(value  ==  null  ||  resultEqualsValue  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(value  ==  null  ||  resultEqualsValue  ==  null)  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  ';'  expected	138	None	replace
604	[BUG]  [BUGGY]  if(type  ==  null)  {  if(value  ==  null  ||  resultEqualsValue  ==  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(value  ==  null  ||  resultEqualsValue  ==  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(value  ==  null  ||  resultEqualsValue  ==  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  ';'  expected	138	None	replace
605	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	138	None	replace
606	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  type!=  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  type!=  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    &&    resultEqualsValue)    {    JSType  type!=  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	127	None	add
607	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  If(type!=  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  If(type!=  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    &&    resultEqualsValue)    {    If(type!=  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	127	None	add
608	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  if(type  >>  null  &&  resultEqualsValue)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  if(type  >>  null  &&  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    &&    resultEqualsValue)    {    if(type  >>  null  &&  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	127	None	add
609	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  &&  value.equals( " "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  &&  value.equals( " "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
610	[BUG]  [BUGGY]  if(value  ==  null  &&  value.equals( " "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  &&  value.equals( " "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  &&  value.equals( " "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
611	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  &&  value.equals( "* "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  &&  value.equals( "* "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
612	[BUG]  [BUGGY]  if(value  ==  null  &&  value.equals( "* "))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  &&  value.equals( "* "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  &&  value.equals( "* "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
613	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type,  value,  resultEqualsValue);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type,  value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(type,  value,  resultEqualsValue);	  if(value    ==    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value),    type,    resultEqualsValue);    	non-compiled	[CE]  	18	None	replace
614	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  null));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  null));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  null));  }	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    null));    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
615	[BUG]  [BUGGY]  if(resultEqualsValue!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
616	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
617	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  else  {  return  result  ==  null?  getNativeType(UNKNOWN_TY  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  else  {  return  result  ==  null?  getNativeType(UNKNOWN_TY  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  else  {  return  result  ==  null?  getNativeType(UNKNOWN_TY	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  ')'  expected	151	None	replace
618	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( ".s "))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( ".s "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.equals(   "   "))    {    if(value!=  null  &&  value.equals( ".s "))  {	  	non-compiled	[CE]  ';'  expected	146	None	add
619	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( "))  {  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals( "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.equals(   "   "))    {    if(value!=  null  &&  value.equals( "))  {	  	non-compiled	[CE]  unclosed  string  literal	146	None	add
620	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
621	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
622	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  getNativeTypeForTypeOf(value);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  getNativeTypeForTypeOf(value);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  getNativeTypeForTypeOf(value);  }	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
623	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  getNativeTypeForTypeOf(value);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.length()  ==  0)  {  JSType  type  =  getNativeTypeForTypeOf(value);	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	117	None	replace
624	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOf(value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeTypeForTypeOf(value);	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
625	[BUG]  [BUGGY]  if(this.resultEqualsValue  ==  null  ||  this.resultEqualsValue!=  null)  {  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(this.resultEqualsValue  ==  null  ||  this.resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(this.resultEqualsValue  ==  null  ||  this.resultEqualsValue!=  null)  {	  if(this.resultEqualsValue    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	87	None	replace
626	[BUG]  [BUGGY]  if(this.resultEqualsValue  ==  null  ||  this.resultEqualsValue  ==  null)  {  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(this.resultEqualsValue  ==  null  ||  this.resultEqualsValue  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(this.resultEqualsValue  ==  null  ||  this.resultEqualsValue  ==  null)  {	  if(this.resultEqualsValue    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	87	None	replace
627	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  If(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  If(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    value.length()    ==    0)    {    If(value  ==  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	64	None	add
628	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  value  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  value  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    value.length()    ==    0)    {    JSType  value  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	64	None	add
629	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(type);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    value.length()    ==    0)    {    JSType  result  =  getNativeTypeForTypeOf(type);	  	non-compiled	[CE]  ';'  expected	64	None	add
630	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.isUnionType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  type.isUnionType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnionType())    {    	compilable	  [FE]  AssertionFailedError  	141	8	replace
631	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isUnionType())  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.isUnionType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  type.isUnionType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnionType())    {    	compilable	  [FE]  AssertionFailedError  	141	8	replace
632	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
633	[BUG]  [BUGGY]  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	129	None	replace
634	[BUG]  [BUGGY]  if(type  ==  null  ||  RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  RestrictByTypeOfResultVisitor.class.isAssignableFrom(value))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	129	None	replace
635	[BUG]  [BUGGY]  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	129	None	replace
636	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  if(type.isUnknownType()  ||  resultEqualsVALue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue)  {  if(type.isUnknownType()  ||  resultEqualsVALue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isUnknownType()    ||    resultEqualsValue)    {    if(type.isUnknownType()  ||  resultEqualsVALue)  {	  	non-compiled	[CE]  ';'  expected	123	None	add
637	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    null;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
638	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue);	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value),    type,    resultEqualsValue);    	non-compiled	[CE]  	31	None	replace
639	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  1)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  value.length()  ==  1)  {	  if(value    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	65	3	replace
640	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  1)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.length()  ==  1)  {	  if(value    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	65	3	replace
641	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.equals(type))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  value.equals(type))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	compilable	  [FE]  AssertionFailedError  	52	3	replace
642	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals(type))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.equals(type))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.equals(type))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	compilable	  [FE]  AssertionFailedError  	52	3	replace
643	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue),  this);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue),  this);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue),  this);	  JSType    result    =    type.visit(new    RestrictedByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
644	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictedByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
645	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
646	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
647	[BUG]  [BUGGY]  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
648	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  typeRegistry.getRestrictedByTypeOfResult(value);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  typeRegistry.getRestrictedByTypeOfResult(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  typeRegistry.getRestrictedByTypeOfResult(value);	  JSType    resultEqualsValue    =    type.getRestrictedByTypeOfResult(value);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
649	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  if(value  >=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  if(value  >=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    resultEqualsValue)    {    if(value  >=  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	73	None	add
650	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  If(value!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  If(value!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    resultEqualsValue)    {    If(value!=  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	73	None	add
651	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  value  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  value  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    resultEqualsValue)    {    JSType  value  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	73	None	add
652	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    resultEqualsValue)    {    JSType  result  =  getNativeTypeForTypeOf(type);	  	non-compiled	[CE]  ';'  expected	73	None	add
653	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    resultEqualsValue)    {    JSType  result  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	73	None	add
654	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  type.isConstructor())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  ||  type.isConstructor())  {	  if(resultEqualsValue    ==    null    ||    type.isConstructor())    {    	compilable	  [FE]  AssertionFailedError  	55	9	replace
655	[BUG]  [BUGGY]  if(type!=  null  ||  type.isConstructor())  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  type.isConstructor())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  type.isConstructor())  {	  if(resultEqualsValue    ==    null    ||    type.isConstructor())    {    	compilable	  [FE]  AssertionFailedError  	55	9	replace
656	[BUG]  [BUGGY]  if(type  ==  null  ||  value.isConstructor())  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.isConstructor())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  value.isConstructor())  {	  if(resultEqualsValue    ==    null    ||    type.isConstructor())    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
657	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  &&  value.length()  ==  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	3	replace
658	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  &&  value.length()  ==  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	3	replace
659	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  &&  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	9	replace
660	[BUG]  [BUGGY]  if(type!=  null  &&  value.length()  >  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  &&  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	compilable	  [FE]  AssertionFailedError  	143	9	replace
661	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeType(value);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeType(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeType(value);	  JSType    resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
662	[BUG]  [BUGGY]  if(value!=  null)  {  If(value  ==  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  If(value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  If(value  ==  null)  {	  if(type!=    null)    {    If(type!=    null)    {    	non-compiled	[CE]  ';'  expected	86	None	replace
663	[BUG]  [BUGGY]  if(value  ==  null)  {  If(value!=  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  If(value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  If(value!=  null)  {	  if(type!=    null)    {    If(type!=    null)    {    	non-compiled	[CE]  ';'  expected	86	None	replace
664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  type.isUnknownType()  ||  resultEqualsValue)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	4	replace
665	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isUnknownType()  ||  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  type.isUnknownType()  ||  resultEqualsValue)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	4	replace
666	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type.isUnknownType()  ||  value  ==  null)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	3	replace
667	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  value  ==  null)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isUnknownType()  ||  value  ==  null)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	3	replace
668	[BUG]  [BUGGY]  if(type.isNative()  ||  type.isUnknownType()  ||  resultEqualsValue)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isNative()  ||  type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isNative()  ||  type.isUnknownType()  ||  resultEqualsValue)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
669	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  &&  type.isUnknownType()  ||  resultEqualsValue)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	5	replace
670	[BUG]  [BUGGY]  if(type!=  null  &&  type.isUnknownType()  ||  resultEqualsValue)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  &&  type.isUnknownType()  ||  resultEqualsValue)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	5	replace
671	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);	  JSType    resultEqualsValue    =    getNativeTypeForTypeOfResult(type);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
672	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForRestrictedResult(type);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForRestrictedResult(type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeTypeForRestrictedResult(type);	  JSType    resultEqualsValue    =    getNativeTypeForTypeOfResult(type);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
673	[BUG]  [BUGGY]  JSType  result  =  getNativeType(UNKNOWN_TYPE);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeType(UNKNOWN_TYPE);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeType(UNKNOWN_TYPE);	  JSType    result    =    getNativeTypeForTypeOf(type);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
674	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  type);	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue),    type);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
675	[BUG]  [BUGGY]  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  value))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  value))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,    resultEqualsValue))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	132	None	replace
676	[BUG]  [BUGGY]  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value,  resultEqualsValue))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value,  resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(value,  resultEqualsValue))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,    resultEqualsValue))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	132	None	replace
677	[BUG]  [BUGGY]  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  resultEqualsValue))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  resultEqualsValue))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,    resultEqualsValue))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	132	None	replace
678	[BUG]  [BUGGY]  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  value)||  resultEqualsValue  ==  null)  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  value)||  resultEqualsValue  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,  value)||  resultEqualsValue  ==  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type,    resultEqualsValue))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	132	None	replace
679	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  type  =  type  ==  null  ||  value!=  null)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  JSType  type  =  type  ==  null  ||  value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    JSType  type  =  type  ==  null  ||  value!=  null)  {	  	non-compiled	[CE]  ';'  expected	75	None	add
680	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  if(type!=  null  ||  value!=  null)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  if(type!=  null  ||  value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    if(type!=  null  ||  value!=  null)  {	  	non-compiled	[CE]  ';'  expected	75	None	add
681	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  if(type  ==  null  ||  value  >=  null)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  if(type  ==  null  ||  value  >=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    if(type  ==  null  ||  value  >=  null)  {	  	non-compiled	[CE]  ';'  expected	75	None	add
682	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  if(type  ==  null  ||  value  >>  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  if(type  ==  null  ||  value  >>  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    if(type  ==  null  ||  value  >>  null)  {	  	non-compiled	[CE]  ';'  expected	75	None	add
683	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  If(type  ==  null  ||  value!=  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  If(type  ==  null  ||  value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    If(type  ==  null  ||  value!=  null)  {	  	non-compiled	[CE]  ';'  expected	75	None	add
684	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  if(type  ==  null  ||  type.length()!=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  if(type  ==  null  ||  type.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()!=    0)    {    if(type  ==  null  ||  type.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	103	None	add
685	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  if(type!=  null  ||  value.length()!=  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  if(type!=  null  ||  value.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()!=    0)    {    if(type!=  null  ||  value.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	103	None	add
686	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  If(type  ==  null  ||  value.length()!=  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  If(type  ==  null  ||  value.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()!=    0)    {    If(type  ==  null  ||  value.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	103	None	add
687	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()!=    0)    {    JSType  result  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	103	None	add
688	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  ||  value.length()!=  0)  {	  if(type    ==    null    ||    value.length()!=    0)    {    	compilable	  [FE]  AssertionFailedError  	104	8	replace
689	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()!=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  ||  value.length()!=  0)  {	  if(type    ==    null    ||    value.length()!=    0)    {    	compilable	  [FE]  AssertionFailedError  	104	8	replace
690	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  JSType    result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
691	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  value  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    resultEqualsValue)    {    JSType  value  ==  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	49	None	add
692	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(value  >=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(value  >=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    resultEqualsValue)    {    if(value  >=  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	49	None	add
693	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    resultEqualsValue)    {    JSType  result  =  getNativeTypeForTypeOf(type);	  	non-compiled	[CE]  ';'  expected	49	None	add
694	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    resultEqualsValue)    {    JSType  result  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	49	None	add
695	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE);	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
696	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
697	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
698	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
699	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.length()  ==  0)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	60	None	replace
700	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  if(value  >=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  if(value  >=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    if(value  >=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
701	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  value  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  value  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    JSType  value  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	101	None	add
702	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  If(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  If(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    If(value!=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
703	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    JSType  result  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	101	None	add
704	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(type);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    JSType  result  =  getNativeTypeForTypeOf(type);	  	non-compiled	[CE]  ';'  expected	101	None	add
705	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(value!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByFalseTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
706	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isAssignableFrom(value))  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.isAssignableFrom(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  type.isAssignableFrom(value))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)&&    resultEqualsValue!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
707	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  }  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type  ==  null  ||  resultEqualsValue)  {  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	39	None	replace
708	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  resultEqualsValue)  {  }  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  resultEqualsValue)  {  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(type!=  null  ||  resultEqualsValue)  {  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	39	None	replace
709	[BUG]  [BUGGY]  if(value!=  null)  {  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(resultEqualsValue)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    ==    false)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
710	[BUG]  [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(value,  type,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(value,  type,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getRestrictedByTypeOfResult(value,  type,  resultEqualsValue);	  JSType    result    =    getRestrictedByTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
711	[BUG]  [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue),  resultEqualsValue);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue),  resultEqualsValue);	  JSType    result    =    getRestrictedByTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  	36	None	replace
712	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
713	[BUG]  [BUGGY]  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
714	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  type  =  getNativeTypeForTypeOf(value);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  type  =  getNativeTypeForTypeOf(value);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  type  =  getNativeTypeForTypeOf(value);  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
715	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  type  =  getNativeTypeForTypeOf(value);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  type  =  getNativeTypeForTypeOf(value);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  type  =  getNativeTypeForTypeOf(value);  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
716	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(value);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(value);	  JSType    result    =    type.getRestrictedByTypeOfResult(value);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
717	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
718	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultsValue));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultsValue));	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
719	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
720	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  }  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	42	None	replace
721	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  }  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	42	None	replace
722	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  }  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	42	None	replace
723	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  type  ==  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  type  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||  type  ==  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  ';'  expected	130	None	replace
724	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(value,  resultEqualsValue);	  JSType    result    =    type.getRestrictedByTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
725	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value));  }	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value));    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
726	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
727	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	45	None	replace
728	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	45	None	replace
729	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
730	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    type.visit(new    RestrictByTypeOfResultVisitor(value),    value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
731	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	result  =  type.visit(new  RestrictByTypeOfResultVisitor(value),  value,  resultEqualsValue);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    type.visit(new    RestrictByTypeOfResultVisitor(value),    value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
732	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value,  resultEqualsValue);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  value,  resultEqualsValue);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    type.visit(new    RestrictByTypeOfResultVisitor(value),    value,    resultEqualsValue);    	non-compiled	[CE]  	44	None	replace
733	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
734	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.isUnknownType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  type.isUnknownType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	53	2	replace
735	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isUnknownType())  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.isUnknownType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  type.isUnknownType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	53	2	replace
736	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  type.isUnknownType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  ||  type.isUnknownType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	53	9	replace
737	[BUG]  [BUGGY]  if(type!=  null  ||  type.isUnknownType())  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  type.isUnknownType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  type.isUnknownType())  {	  if(resultEqualsValue    ==    null    ||    type.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	53	9	replace
738	[BUG]  [BUGGY]  if(resultEqualsValue!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    value),    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
739	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    value),    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
740	[BUG]  [BUGGY]  if(value  ==  null)  {  if(type!=  null)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(type!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(type!=  null)  {	  if(type    ==    null    ||    resultEqualsValue)    {    if(type!=    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
741	[BUG]  [BUGGY]  if(value!=  null)  {  if(type!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(type!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(type!=  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    if(type!=    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
742	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  }  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(type);    if(resultEqualsValue)    {    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	21	None	replace
743	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  }  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type);  if(resultEqualsValue)  {  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(type);    if(resultEqualsValue)    {    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	21	None	replace
744	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  if(resultEqualsValue)  {	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(type);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
745	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	resultEqualsValue  =  getNativeTypeForTypeOf(type);	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(type)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
746	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(type  >=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(type  >=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    if(type  >=  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
747	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  type!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  type!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    JSType  type  =  type!=  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
748	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(type  >>  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(type  >>  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    if(type  >>  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
749	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    JSType  type  =  type.getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	46	None	add
750	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  If(type!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  If(type!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    If(type!=  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
751	[BUG]  [BUGGY]  if(resultEqualsValue!=  null  ||  type  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue!=  null  ||  type  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  null  ||  type  ==  null)  {	  if(type!=    null    ||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	24	None	replace
752	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  resultEqualsValue  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  &&  resultEqualsValue  ==  null)  {	  if(type!=    null    ||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	24	None	replace
753	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type!=  null  ||  value  ==  null)  {	  if(type!=    null    ||    resultEqualsValue    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	24	9	replace
754	[BUG]  [BUGGY]  if(type!=  null  ||  value  ==  null)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  value  ==  null)  {	  if(type!=    null    ||    resultEqualsValue    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	24	9	replace
755	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
756	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
757	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValu  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValu  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValu	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	62	None	replace
758	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
759	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  resultEqualsValue  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultE  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  resultEqualsValue  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultE  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  resultEqualsValue  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultE	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	62	None	replace
760	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
761	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
762	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
763	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    type.visit(new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
764	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    type.visit(new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
765	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  incomparable  types:  boolean  and  <null>  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    type.visit(new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	40	None	replace
766	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
767	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  If(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null)  {  If(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null)  {  If(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    If(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	112	None	replace
768	[BUG]  [BUGGY]  if(type!=  null)  {  If(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  If(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  If(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    If(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	112	None	replace
769	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	111	None	replace
770	[BUG]  [BUGGY]  if(value!=  null)  {  if(type!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(type!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(type!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
771	[BUG]  [BUGGY]  if(value  ==  null)  {  if(type!=  null  ||  type.length()  ==  0)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(type!=  null  ||  type.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(type!=  null  ||  type.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
772	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    type.visit(    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
773	[BUG]  [BUGGY]  if(value  ==  null  ||  type.isSubtype(value))  {  [CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  type.isSubtype(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  type.isSubtype(value))  {	  if(resultEqualsValue    ==    null    ||    type.isSubtype(value))    {    	non-compiled	[CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;	140	None	replace
774	[BUG]  [BUGGY]  if(type  ==  null  ||  value.isSubtype(resultEqualsValue))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.isSubtype(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  value.isSubtype(resultEqualsValue))  {	  if(resultEqualsValue    ==    null    ||    type.isSubtype(value))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
775	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isSubtype(value))  {  [CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.isSubtype(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  type.isSubtype(value))  {	  if(resultEqualsValue    ==    null    ||    type.isSubtype(value))    {    	non-compiled	[CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;	140	None	replace
776	[BUG]  [BUGGY]  if(resultEqualsValue!=  null  ||  value.equals(value))  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue!=  null  ||  value.equals(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  null  ||  value.equals(value))  {	  if(value!=    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	74	None	replace
777	[BUG]  [BUGGY]  if(resultEqualsValue!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
778	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
779	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
780	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  if(type!=  null  ||  type.length()  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  if(type!=  null  ||  type.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    if(type!=  null  ||  type.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	67	None	add
781	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  if(type  >=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  if(type  >=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    if(type  >=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	67	None	add
782	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  type  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  type  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    JSType  type  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	67	None	add
783	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  if(type!=  null  ||  value.length()  >=  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  if(type!=  null  ||  value.length()  >=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    if(type!=  null  ||  value.length()  >=  0)  {	  	non-compiled	[CE]  ';'  expected	67	None	add
784	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  If(type!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  If(type!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    If(type!=  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	67	None	add
785	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
786	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  if(type  ==  null  ||  type.equals(resultEqualsValue))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  if(type  ==  null  ||  type.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.equals(resultEqualsValue))    {    if(type  ==  null  ||  type.equals(resultEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
787	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  If(type  ==  null  ||  value.equals(resultEqualsValue))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  If(type  ==  null  ||  value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.equals(resultEqualsValue))    {    If(type  ==  null  ||  value.equals(resultEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
788	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  if(type  ==  null  ||  value.equals(resultEqualsVALue))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  if(type  ==  null  ||  value.equals(resultEqualsVALue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.equals(resultEqualsValue))    {    if(type  ==  null  ||  value.equals(resultEqualsVALue))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
789	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  if(type  ==  null  ||  value.equals(resULtEqualsValue))  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  if(type  ==  null  ||  value.equals(resULtEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.equals(resultEqualsValue))    {    if(type  ==  null  ||  value.equals(resULtEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
790	[BUG]  [BUGGY]  if(value  >=  null  ||  value.length()  ==  0)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  >=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  >=  null  ||  value.length()  ==  0)  {	  if(value!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	102	None	replace
791	[BUG]  [BUGGY]  if(resultEqualsValue!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
792	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
793	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
794	[BUG]  [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	replace
795	[BUG]  [BUGGY]  if(type!=  null)  {  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	replace
796	[BUG]  [BUGGY]  if(value!=  null)  {  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	replace
797	[BUG]  [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
798	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
799	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
800	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  resultEqualsValue  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  resultEqualsValue  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  resultEqualsValue  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
801	[BUG]  [BUGGY]  if(type!=  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
802	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
803	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  if(type  ==  null  ||  value.length()  ==  0)  {  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value!=  null  ||  value.length()  ==  0)  {  }	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
804	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  if(value  >=  null  &&  value.length()  >  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  if(value  >=  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    if(value  >=  null  &&  value.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	142	None	add
805	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  If(value!=  null  &&  value.length()  >  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  If(value!=  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    If(value!=  null  &&  value.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	142	None	add
806	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  value  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  value  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    JSType  value  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	142	None	add
807	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    JSType  result  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	142	None	add
808	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  result  =  getNativeTypeForTypeOf(type);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  result  =  getNativeTypeForTypeOf(type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    JSType  result  =  getNativeTypeForTypeOf(type);	  	non-compiled	[CE]  ';'  expected	142	None	add
809	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    type;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
810	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    type;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
811	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    type;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
812	[BUG]  [BUGGY]  JSType  type  =  type  ==  null  ||  value.equals(resultEqualsValue)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type  ==  null  ||  value.equals(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type  ==  null  ||  value.equals(resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	110	None	replace
813	[BUG]  [BUGGY]  JSType  type  =  type  ==  null  ||  resultEqualsVALue)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type  ==  null  ||  resultEqualsVALue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type  ==  null  ||  resultEqualsVALue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	110	None	replace
814	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  this));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  this));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  this));	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    null));    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
815	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isUnknownType()  ||  resultEqualsValue!=  null)  {	  if(this.resultEqualsValue!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	100	None	replace
816	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(value  ==  null  ||  resultEqualsVALue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  if(value  ==  null  ||  resultEqualsVALue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    resultEqualsValue)    {    if(value  ==  null  ||  resultEqualsVALue)  {	  	non-compiled	[CE]  ';'  expected	49	None	add
817	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
818	[BUG]  [BUGGY]  JSErrorReporter  errorReporter  =  getNativeTypeForTypeOf(value);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSErrorReporter  errorReporter  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSErrorReporter  errorReporter  =  getNativeTypeForTypeOf(value);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
819	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value.toLowerCase());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value.toLowerCase());  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value.toLowerCase());	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
820	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.length()  ==  0)  {  if(resultEqualsValue)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	replace
821	[BUG]  [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE));  }	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
822	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value).visit(resultEqualsValue);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value).visit(resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value).visit(resultEqualsValue);	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value));    	non-compiled	[CE]  	122	None	replace
823	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
824	[BUG]  [BUGGY]  If(type  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  If(type  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	If(type  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    If(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	112	None	replace
825	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  If(type!=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  If(type!=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue)  {  If(type!=  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    If(type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	112	None	replace
826	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue  >=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue  >=  null)  {	  if(value    ==    null    ||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	25	None	replace
827	[BUG]  [BUGGY]  JSType  result  =  getNativeType(value);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeType(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeType(value);	  JSType    result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
828	[BUG]  [BUGGY]  JSType  result  =  getNativeType(type.restrictUndefined());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeType(type.restrictUndefined());  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeType(type.restrictUndefined());	  JSType    result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
829	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  if(type!=  null  ||  key.length()  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  if(type!=  null  ||  key.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    if(type!=  null  ||  key.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	67	None	add
830	[BUG]  [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  value.length()  ==  0)  {  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    value.length()    ==    0)    {    JSType  result  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	67	None	add
831	[BUG]  [BUGGY]  if(type.isAssignableFrom(resultEqualsValue)||  type.isSubtype(resultEqualsValue))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isAssignableFrom(resultEqualsValue)||  type.isSubtype(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isAssignableFrom(resultEqualsValue)||  type.isSubtype(resultEqualsValue))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
832	[BUG]  [BUGGY]  if(type.isAssignableFrom(resultEqualsValue)||  type.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isAssignableFrom(resultEqualsValue)||  type.isUnknownType())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isAssignableFrom(resultEqualsValue)||  type.isUnknownType())  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
833	[BUG]  [BUGGY]  if(type.isAssignableFrom(resultEqualsValue)||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isAssignableFrom(resultEqualsValue)||  type.isPrimitive())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isAssignableFrom(resultEqualsValue)||  type.isPrimitive())  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||    resultEqualsValue    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
834	[BUG]  [BUGGY]  if(type.isSubtype(value)||  type.isUnknownType()  ||  resultEqualsValue)  {  [CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isSubtype(value)||  type.isUnknownType()  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isSubtype(value)||  type.isUnknownType()  ||  resultEqualsValue)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	non-compiled	[CE]  method  isSubtype  in  class  JSType  cannot  be  applied  to  given  types;	124	None	replace
835	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type.isUnknownType()  ||  value!=  null)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	9	replace
836	[BUG]  [BUGGY]  if(type.isUnknownType()  ||  value!=  null)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type.isUnknownType()  ||  value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type.isUnknownType()  ||  value!=  null)  {	  if(type.isUnknownType()    ||    resultEqualsValue)    {    	compilable	  [FE]  AssertionFailedError  	124	9	replace
837	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  false)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(resultEqualsValue  ==  false)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(type)    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	109	8	replace
838	[BUG]  [BUGGY]  if(resultEqualsValue  ==  false)  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  false)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  false)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(type)    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	109	8	replace
839	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    null;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
840	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }  else  {  return  result;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }  else  {  return  result;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  null;  }  else  {  return  result;  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    null;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
841	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isAssignableFrom(value)||  resultEqualsValue!=  null)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  type.isAssignableFrom(value)||  resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  type.isAssignableFrom(value)||  resultEqualsValue!=  null)  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(type)||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
842	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals( "- "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  &&  value.equals( "- "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
843	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals( "- "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals( "- "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  &&  value.equals( "- "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
844	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals( "null "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  &&  value.equals( "null "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
845	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals( "null "))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals( "null "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  &&  value.equals( "null "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
846	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals( "undefined "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value!=  null  &&  value.equals( "undefined "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
847	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals( "undefined "))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals( "undefined "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  &&  value.equals( "undefined "))  {	  if(value!=    null    &&    value.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	147	3	replace
848	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	57	3	replace
849	[BUG]  [BUGGY]  if(value.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(type    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	57	3	replace
850	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(type).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue),    type);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
851	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByFalseTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByFalseTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
852	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue!=  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  incomparable  types:  boolean  and  JSType  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue!=  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue!=  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  incomparable  types:  boolean  and  JSType	138	None	replace
853	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  ||  resultEqualsValue  <  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	138	None	replace
854	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue  >=  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue  >=  getNativeType(CHECKED_UNKNOWN_TYPE))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue  >=  getNativeType(CHECKED_UNKNOWN_TYPE))  {	  if(value    ==    null)    {    if(value    ==    null    ||    resultEqualsValue    <    getNativeType(CHECKED_UNKNOWN_TYPE))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	138	None	replace
855	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value)||  resultEqualsValue;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value)||  resultEqualsValue;  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value)||  resultEqualsValue;	  JSType    resultEqualsValue    =    type.getRestrictedByTypeOfResult(value);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
856	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value),  resultEqualsValue);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  type.getRestrictedByTypeOfResult(value),  resultEqualsValue);	  JSType    resultEqualsValue    =    type.getRestrictedByTypeOfResult(value);    	non-compiled	[CE]  	90	None	replace
857	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value)&&  resultEqualsValue;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value)&&  resultEqualsValue;  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeForTypeOf(value)&&  resultEqualsValue;	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
858	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null)  {  if(type  {  null  ||  value!=  null)  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null)  {  if(type  {  null  ||  value!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value!=    null)    {    if(type  {  null  ||  value!=  null)  {	  	non-compiled	[CE]  ')'  expected	75	None	add
859	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value.toUpperCase());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value.toUpperCase());  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeForTypeOf(value.toUpperCase());	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
860	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  if(value  >>  null  &&  value.length()  >  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  if(value  >>  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    if(value  >>  null  &&  value.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	142	None	add
861	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  result  =  getNativeTypeForTypeOf(type,  value);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  JSType  result  =  getNativeTypeForTypeOf(type,  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.length()    >    0)    {    JSType  result  =  getNativeTypeForTypeOf(type,  value);	  	non-compiled	[CE]  ';'  expected	142	None	add
862	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value.equals(resultEqualsValue))  {	  if(resultEqualsValue    >    0)    {    	compilable	  [FE]  AssertionFailedError  	48	3	replace
863	[BUG]  [BUGGY]  if(value.equals(resultEqualsValue))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value.equals(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value.equals(resultEqualsValue))  {	  if(resultEqualsValue    >    0)    {    	compilable	  [FE]  AssertionFailedError  	48	3	replace
864	[BUG]  [BUGGY]  JSType  type  =  type  >=  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type  >=  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type  >=  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	110	None	replace
865	[BUG]  [BUGGY]  JSType  type  =  type  ==  null  ||  resultsEqualsValue)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  type  ==  null  ||  resultsEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  type  ==  null  ||  resultsEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	110	None	replace
866	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOf(type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOf(type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeTypeForTypeOf(type);	  JSType    resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
867	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(type  ==  null  ||  value!=  null  ||  value.length()  ==  0)  {	  if(value!=    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	102	8	replace
868	[BUG]  [BUGGY]  if(type  ==  null  ||  value!=  null  ||  value.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value!=  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  value!=  null  ||  value.length()  ==  0)  {	  if(value!=    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	102	8	replace
869	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(CHECKED_UNKNOWN_TYPE)!=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(CHECKED_UNKNOWN_TYPE)!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(CHECKED_UNKNOWN_TYPE)!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)!=    null)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
870	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(VALUE_EMBEDDED_TYPE)!=  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(VALUE_EMBEDDED_TYPE)!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeTypeForTypeOf(VALUE_EMBEDDED_TYPE)!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)!=    null)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
871	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);	  if(type!=    null)    {    JSType    result    =    type.visit(    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
872	[BUG]  [BUGGY]  if(value!=  null)  {  If(type!=  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  If(type!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  If(type!=  null)  {	  if(type!=    null)    {    If(type!=    null)    {    	non-compiled	[CE]  ';'  expected	86	None	replace
873	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.trim().length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	add	if(value  ==  null  ||  value.trim().length()  ==  0)  {	  if(value    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	65	3	replace
874	[BUG]  [BUGGY]  if(value  ==  null  ||  value.trim().length()  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.trim().length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.trim().length()  ==  0)  {	  if(value    ==    null    ||    value.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	65	3	replace
875	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue.equals(type))  {  [CE]  boolean  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue.equals(type))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue.equals(type))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	52	None	replace
876	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue.equals(value))  {  [CE]  boolean  cannot  be  dereferenced  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue.equals(value))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  ||  resultEqualsValue.equals(value))  {	  if(type    ==    null    ||    value.equals(resultEqualsValue))    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	52	None	replace
877	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  result);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  result);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  result);	  JSType    result    =    type.getRestrictedByTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
878	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue),  resultEqualsValue);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue),  resultEqualsValue);	  JSType    result    =    type.getRestrictedByTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  	35	None	replace
879	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  result);	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
880	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  value.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
881	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue  ==  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue  ==  null)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
882	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue  ==  false)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue  ==  false)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue  ==  false)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
883	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue)||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue)||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue)||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	111	None	replace
884	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue)&&!resultEqualsValue)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue)&&!resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue)&&!resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	111	None	replace
885	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue).visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue).visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue).visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  	60	None	replace
886	[BUG]  [BUGGY]  JsonType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JsonType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JsonType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
887	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  	60	None	replace
888	[BUG]  [BUGGY]  JsonType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JsonType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JsonType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    result    =    type.visit(new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
889	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
890	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value),    type,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
891	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  if(value  >>  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue)  {  if(value  >>  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    resultEqualsValue)    {    if(value  >>  null  ||  resultEqualsValue)  {	  	non-compiled	[CE]  ';'  expected	73	None	add
892	[BUG]  [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  outcomeEqualsValue);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  outcomeEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getRestrictedByTypeOfResult(type,  value,  resultEqualsValue,  outcomeEqualsValue);	  JSType    result    =    getRestrictedByTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
893	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
894	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  if(value!=  null  ||  value.length()  >=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  if(value!=  null  ||  value.length()  >=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    if(value!=  null  ||  value.length()  >=  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
895	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  if(value  >>  null  ||  value.length()  ==  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  if(value  >>  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    ||    value.length()    ==    0)    {    if(value  >>  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
896	[BUG]  [BUGGY]  resultEqualsValue  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  resultEqualsValue  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	resultEqualsValue  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
897	[BUG]  [BUGGY]  JSType  result  =  type.getNativeTypeForTypeOf(value);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getNativeTypeForTypeOf(value);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
898	[BUG]  [BUGGY]  JSType  result  =  type.getNativeTypeForTypeOf(value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.getNativeTypeForTypeOf(value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getNativeTypeForTypeOf(value,  resultEqualsValue);	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
899	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
900	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  if(value  ==  null  ||  value.length()  >=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  if(value  ==  null  ||  value.length()  >=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    value.length()    ==    0)    {    if(value  ==  null  ||  value.length()  >=  0)  {	  	non-compiled	[CE]  ';'  expected	64	None	add
901	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  if(value  {  null  ||  value.length()  ==  0)  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  if(value  {  null  ||  value.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value    ==    null    ||    value.length()    ==    0)    {    if(value  {  null  ||  value.length()  ==  0)  {	  	non-compiled	[CE]  ')'  expected	64	None	add
902	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  if(resultEqualsValue  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  if(resultEqualsValue  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  if(resultEqualsValue  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  	59	None	replace
903	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue!=  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue!=  null)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
904	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictedByTypeOfResultVisitor(value,  resultEqualsValue),  result);	  if(value!=    null)    {    JSType    result    =    type.visit(    new    RestrictedByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
905	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  JSType  type  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    JSType  type  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	46	None	add
906	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(type!=  null  ||  resultEqualsVALue)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue)  {  if(type!=  null  ||  resultEqualsVALue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    ||    resultEqualsValue)    {    if(type!=  null  ||  resultEqualsVALue)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
907	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue).visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue).visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue).visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  	61	None	replace
908	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue).visit(new  RestrictByTypeOfResultVisitor(type,  value));  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue).visit(new  RestrictByTypeOfResultVisitor(type,  value));  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue).visit(new  RestrictByTypeOfResultVisitor(type,  value));	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    type.visit(    new    RestrictByTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  	61	None	replace
909	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
910	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(resultEqualsValue)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
911	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  }  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  }	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(resultEqualsValue)    {    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	41	None	replace
912	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
913	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  else  {  return  result  ==  null?  getNativeType  [CE]  :  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  else  {  return  result  ==  null?  getNativeType  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTypeOfResultVisitor(type,  resultEqualsValue));  }  else  {  return  result  ==  null?  getNativeType	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  :  expected	151	None	replace
914	[BUG]  [BUGGY]  if(type!=  null  ||  resultEqualsValue!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  ||  resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=  null  ||  resultEqualsValue!=  null)  {	  if(type    ==    null    ||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	72	None	replace
915	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  ||  resultEqualsValue!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  ||  resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  ||  resultEqualsValue!=  null)  {	  if(type    ==    null    ||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	72	None	replace
916	[BUG]  [BUGGY]  if(resultEqualsValue!=  null  &&  type.isConstructor())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue!=  null  &&  type.isConstructor())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  null  &&  type.isConstructor())  {	  if(resultEqualsValue    ==    null    ||    type.isConstructor())    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	55	None	replace
917	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue),  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue),  resultEqualsValue);	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByUndefinedVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
918	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByUndefinedVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
919	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByUndefinedVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
920	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  value));  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  value));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByUndefinedVisitor(type,  value));  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByUndefinedVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
921	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue)  {  if(resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    if(type!=    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
922	[BUG]  [BUGGY]  if(resultEqualsValue!=  null  &&  value.length()  >  0)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue!=  null  &&  value.length()  >  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue!=  null  &&  value.length()  >  0)  {	  if(value!=    null    &&    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	145	None	replace
923	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  null);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  null);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  resultEqualsValue),  null);  }	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    resultEqualsValue),    null);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
924	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue)  {  JSType  result  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue)  {	  if(type    ==    null    ||    resultEqualsValue)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
925	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  type  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  if(value  ==  null  ||  resultEqualsValue.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
926	[BUG]  [BUGGY]  if(value  ==  null  ||  resultEqualsValue.isEmpty())  {  [CE]  boolean  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  resultEqualsValue.isEmpty())  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  resultEqualsValue.isEmpty())  {	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    type    =    type.getNativeType(CHECKED_UNKNOWN_TYPE);    if(value    ==    null    ||    resultEqualsValue.length()    ==    0)    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	62	None	replace
927	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue);	  if(type    ==    null    ||    value.length()    ==    0)    {    JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
928	[BUG]  [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  if(resultEqualsValue  ||  getNativeType(CHECKED_UNKNOWN_TYPE)  ==  false)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeType(CHECKED_UNKNOWN_TYPE)    ==    false)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
929	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value)?  getNativeType(CHECKED_UNKNOWN_TYPE):  type;  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value)?    getNativeType(CHECKED_UNKNOWN_TYPE):    type;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
930	[BUG]  [BUGGY]  if(value!=  null  ||  resultEqualsValue!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  ||  resultEqualsValue!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null  ||  resultEqualsValue!=  null)  {	  if(value    ==    null    ||    resultEqualsValue!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	99	None	replace
931	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  type  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(type!=    null)    {    JSType    type    =    type.visit(    new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
932	[BUG]  [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  type  =  getNativeTypeForTypeOf(value);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type!=  null  &&  resultEqualsValue)  {  JSType  type  =  getNativeTypeForTypeOf(value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type!=    null    &&    resultEqualsValue)    {    JSType  type  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  ';'  expected	127	None	add
933	[BUG]  [BUGGY]  if(value  ==  null  ||  getNativeTypeForTypeOf(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  getNativeTypeForTypeOf(CHECKED_UNKNOWN_TYPE)  ==  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  getNativeTypeForTypeOf(CHECKED_UNKNOWN_TYPE)  ==  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)    ==    null)    {    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	105	None	replace
934	[BUG]  [BUGGY]  if(value  ==  null  ||  getNativeTypeForTypeOf(CHECKED_UNKNOWN_TYPE)!=  null)  {  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  getNativeTypeForTypeOf(CHECKED_UNKNOWN_TYPE)!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  getNativeTypeForTypeOf(CHECKED_UNKNOWN_TYPE)!=  null)  {	  if(resultEqualsValue)    {    if(resultEqualsValue    ||    getNativeTypeForTypeOf(value)    ==    null)    {    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	105	None	replace
935	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultsValue);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultsValue);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultsValue);	  JSType    result    =    type.getRestrictedByTypeOfResult(value);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
936	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals( " "))  {  if(type  ==  null  ||  type.length()  ==  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.equals( " "))  {  if(type  ==  null  ||  type.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.equals( " "))  {  if(type  ==  null  ||  type.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    type.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	114	None	replace
937	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals( "- "))  {  if(type  ==  null  ||  type.length()  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null  ||  value.equals( "- "))  {  if(type  ==  null  ||  type.length()  ==  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null  ||  value.equals( "- "))  {  if(type  ==  null  ||  type.length()  ==  0)  {	  if(type    ==    null    ||    value.length()    ==    0)    {    if(type    ==    null    ||    type.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	114	None	replace
938	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(type,  value)&&  resultEqualsValue;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(type,  value)&&  resultEqualsValue;  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	JSType  resultEqualsValue  =  getNativeTypeForTypeOfResult(type,  value)&&  resultEqualsValue;	  JSType    resultEqualsValue    =    getNativeTypeForTypeOfResult(type,    value);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
939	[BUG]  [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  if(type  ==  null  ||  key.length()!=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.length()!=  0)  {  if(type  ==  null  ||  key.length()!=  0)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.length()!=    0)    {    if(type  ==  null  ||  key.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	103	None	add
940	[BUG]  [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null  ||  resultEqualsValue)  {  if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))  {	  if(resultEqualsValue)    {    if(RestrictByTypeOfResultVisitor.class.isAssignableFrom(resultEqualsValue))    {    	non-compiled	[CE]  ';'  expected	134	None	replace
941	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  type  =  null;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  type  =  null;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  type  =  null;  }	  if(type!=    null)    {    JSType    type!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
942	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  type  =  null;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  type  =  null;  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  type  =  null;  }	  if(type!=    null)    {    JSType    type!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
943	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  type  =  null;  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  type  =  null;  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  type  =  null;	  if(type!=    null)    {    JSType    type!=    null)    {    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	85	None	replace
944	[BUG]  [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  if(type  ==  null  ||  value.equals(ResultEqualsValue))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null  ||  value.equals(resultEqualsValue))  {  if(type  ==  null  ||  value.equals(ResultEqualsValue))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type    ==    null    ||    value.equals(resultEqualsValue))    {    if(type  ==  null  ||  value.equals(ResultEqualsValue))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
945	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    JSType  result  =  getNativeTypeForTypeOf(type);	  	non-compiled	[CE]  ';'  expected	144	None	add
946	[BUG]  [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type,  value);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type,  value);  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    resultEqualsValue)    {    JSType  result  =  getNativeTypeForTypeOf(type,  value);	  	non-compiled	[CE]  ';'  expected	144	None	add
947	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null  &&  type!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue  ==  null  &&  type!=  null)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue  ==  null  &&  type!=  null)  {	  if(type!=    null    &&    resultEqualsValue)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	128	None	replace
948	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals(... "   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals(... "   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.equals(   "   "))    {    if(value!=  null  &&  value.equals(... "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
949	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals(? "   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals(? "   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.equals(   "   "))    {    if(value!=  null  &&  value.equals(? "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
950	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals(. "   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null  &&  value.equals(   "   "))  {  if(value!=  null  &&  value.equals(. "   "))  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=    null    &&    value.equals(   "   "))    {    if(value!=  null  &&  value.equals(. "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	146	None	add
951	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    value),    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
952	[BUG]  [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  }  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value!=  null)  {  JSType  result  =  getNativeTypeForTypeOf(value).visit(new  RestrictByTrueTypeOfResultVisitor(type,  value),  resultEqualsValue);  }	  if(type!=    null)    {    JSType    result    =    getNativeTypeForTypeOf(value).visit(    new    RestrictByTrueTypeOfResultVisitor(type,    value),    resultEqualsValue);    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
953	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(CHECKED_UNKNOWN_TYPE);  if(resultEqualsValue)  {	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(type);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
954	[BUG]  [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type,  value);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type,  value);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(value  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(type,  value);  if(resultEqualsValue)  {	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(type);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
955	[BUG]  [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  if(resultEqualsValue)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {      [BUGGY]  if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  if(resultEqualsValue)  {  [BUGGY]      if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.3922322702763681	674	674	2	replace	if(type  ==  null)  {  JSType  result  =  getNativeTypeForTypeOf(value);  if(resultEqualsValue)  {	  if(value    ==    null)    {    JSType    result    =    getNativeTypeForTypeOf(type);    if(resultEqualsValue)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
