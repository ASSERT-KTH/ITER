bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
2	[BUG]  [BUGGY]  return  result  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  result	85	None	replace
3	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  result	85	None	replace
4	[BUG]  [BUGGY]  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  not  a  statement	85	None	replace
5	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(type,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(type,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOfResult(type,  resultEqualsValue);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
6	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  type));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  type));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue,    value));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	74	None	replace
7	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  type));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  type));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue,    value));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	74	None	replace
8	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  result));  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  result));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue,    value));    	non-compiled	[CE]  cannot  find  symbol  result	74	None	replace
9	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  value));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue,    value));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	74	None	replace
10	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  cannot  find  symbol  result	7	None	add
11	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  not  a  statement	7	None	add
12	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	7	None	add
13	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  unreachable  statement	7	None	add
14	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]            AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	7	None	add
15	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]              AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	7	None	add
16	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	7	None	add
17	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    this);    	non-compiled	[CE]  cannot  find  symbol  result	87	None	replace
18	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  this);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  this);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  this);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    this);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	87	None	replace
19	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [CE]  boolean  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    this);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	87	None	replace
20	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [CE]  boolean  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    this);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	87	None	replace
21	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  this);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  this);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  this);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    this);    	non-compiled	[CE]  ')'  expected	87	None	replace
22	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  qualifiedName);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  qualifiedName);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  qualifiedName);	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    value);    	non-compiled	[CE]  cannot  find  symbol  result	2	None	replace
23	[BUG]  [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    value);    	non-compiled	[CE]  cannot  find  symbol  result	2	None	replace
24	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    value);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
25	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    value));    	non-compiled	[CE]  ';'  expected	21	None	replace
26	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  resultEqualsValue),  result);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  resultEqualsValue),  result);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	106	None	replace
27	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	106	None	replace
28	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	106	None	replace
29	[BUG]  [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  resultEqualsValue    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	101	None	replace
30	[BUG]  [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);	  resultEqualsValue    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	101	None	replace
31	[BUG]  [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);	  resultEqualsValue    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	101	None	replace
32	[BUG]  [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  qualifiedName);  [CE]  cannot  find  symbol  qualifiedName  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  qualifiedName);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  qualifiedName);	  resultEqualsValue    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	101	None	replace
33	[BUG]  [BUGGY]  resultEqualsValue  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  resultEqualsValue    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
34	[BUG]  [BUGGY]  return  resultEqualsValue!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	12	None	replace
35	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	12	None	replace
36	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	12	None	replace
37	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	12	None	replace
38	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	12	None	replace
39	[BUG]  [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  type);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  type);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
40	[BUG]  [BUGGY]  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  type);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  type);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
41	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  result,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  result,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  result,  resultEqualsValue);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
42	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  type);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  type);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
43	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  value);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  value);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
44	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOf(value,    resultEqualsValue);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	118	None	replace
45	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOf(value,    resultEqualsValue);    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	118	None	replace
46	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	94	None	replace
47	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  RELATIVE_UNKNOWN_TYPE  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  cannot  find  symbol  RELATIVE_UNKNOWN_TYPE	94	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	add	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    	compilable	  [FE]  AssertionFailedError  	94	12	replace
49	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [FE]  AssertionFailedError  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    	compilable	  [FE]  AssertionFailedError  	94	12	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	add	JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    	compilable	  [FE]  AssertionFailedError  	94	12	replace
51	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [FE]  AssertionFailedError  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    	compilable	  [FE]  AssertionFailedError  	94	12	replace
52	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeOf(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeOf(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeOf(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
53	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type,  resultEqualsValue);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type,  resultEqualsValue);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(type,  resultEqualsValue);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	94	None	replace
54	[BUG]  [BUGGY]  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  cannot  find  symbol  result	94	None	replace
55	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  boolean  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    qualifiedName);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	15	None	replace
56	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue,  value));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue,    result));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	88	None	replace
57	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue,    result));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	88	None	replace
58	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  type));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  type));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue,    result));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	88	None	replace
59	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  boolean  resultEqualsValue));  [CE]  '.class'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  boolean  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  boolean  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue,    result));    	non-compiled	[CE]  '.class'  expected	88	None	replace
60	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));	  return    resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	89	None	replace
61	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));	  return    resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	89	None	replace
62	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  type,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  type,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	89	None	replace
63	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByFalseTypeOfResultVisitor(type,  value));  [CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByFalseTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByFalseTypeOfResultVisitor(type,  value));	  return    resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	89	None	replace
64	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));	  return    value.visit(new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	60	None	replace
65	[BUG]  [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));	  return    value.visit(new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	60	None	replace
66	[BUG]  [BUGGY]  return  result.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByFalseTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	91	None	replace
67	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByFalseTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	91	None	replace
68	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  }	  return    type.visit(new    RestrictByFalseTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	91	None	replace
69	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByFalseTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	91	None	replace
70	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByFalseTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	91	None	replace
71	[BUG]  [BUGGY]  return  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue),  result);	  return    type.visit(new    RestrictByFalseTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	91	None	replace
72	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  type  =  getNativeTypeForTypeOf(value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  type  =  getNativeTypeForTypeOf(value);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	84	None	replace
73	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	84	None	replace
74	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	84	None	replace
75	[BUG]  [BUGGY]  return  result  ==  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	90	None	replace
76	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	90	None	replace
77	[BUG]  [BUGGY]  return  result!=  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	90	None	replace
78	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	90	None	replace
79	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);	  return    type!=    null?    null    :    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	90	None	replace
80	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  null  :  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  null  :  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	90	None	replace
81	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	45	None	replace
82	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	45	None	replace
83	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	45	None	replace
84	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	45	None	replace
85	[BUG]  [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	69	None	replace
86	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  }	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	69	None	replace
87	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	69	None	replace
88	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
89	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	69	None	replace
90	[BUG]  [BUGGY]  return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  incompatible  types	108	None	replace
91	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  result	108	None	replace
92	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  result	108	None	replace
93	[BUG]  [BUGGY]  return  type!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  incompatible  types	108	None	replace
94	[BUG]  [BUGGY]  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  not  a  statement	108	None	replace
95	[BUG]  [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value);  [CE]  method  getRestrictedByTypeOfResult  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type,  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getRestrictedByTypeOfResult(type,  value);	  JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  method  getRestrictedByTypeOfResult  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	112	None	replace
96	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(type);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOfResult(type);	  JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
97	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  resultEqualsValue);  [CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  resultEqualsValue);	  JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	112	None	replace
98	[BUG]  [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type);  [CE]  method  getRestrictedByTypeOfResult  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getRestrictedByTypeOfResult(type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getRestrictedByTypeOfResult(type);	  JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  method  getRestrictedByTypeOfResult  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	112	None	replace
99	[BUG]  [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  if(type  ==  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  if(type  ==  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(type    ==    null)    {    return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  ';'  expected	114	None	replace
100	[BUG]  [BUGGY]  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null)    {    return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  not  a  statement	114	None	replace
101	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	46	None	replace
102	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	46	None	replace
103	[BUG]  [BUGGY]  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);	  if(resultEqualsValue)    {    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	116	None	replace
104	[BUG]  [BUGGY]  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  if(resultEqualsValue)    {    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	116	None	replace
105	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  [CE]  cannot  find  symbol  result  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));	  return    result!=    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	37	None	replace
106	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    result!=    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	37	None	replace
107	[BUG]  [BUGGY]  return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));	  return    type    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	20	None	replace
108	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    type    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	20	None	replace
109	[BUG]  [BUGGY]  return  type!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    type    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	20	None	replace
110	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  JSType    result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	26	None	replace
111	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  value);	  JSType    result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	26	None	replace
112	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeRegistry.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  JSType    result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	26	None	replace
113	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
114	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue,  value));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue,  value));	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	3	None	replace
115	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value));	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	3	None	replace
116	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
117	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	3	None	replace
118	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	120	None	replace
119	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	120	None	replace
120	[BUG]  [BUGGY]  return  result  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	120	None	replace
121	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValu  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValu  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValu	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue));    	non-compiled	[CE]  ')'  expected	120	None	replace
122	[BUG]  [BUGGY]  owner.handleTypeOfResult(type,  value,  resultEqualsValue);  [CE]  cannot  find  symbol  owner  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  owner.handleTypeOfResult(type,  value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	owner.handleTypeOfResult(type,  value,  resultEqualsValue);	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  owner	122	None	replace
123	[BUG]  [BUGGY]  resultEqualsValue.handleTypeOfResult(type,  value,  resultEqualsValue);  [CE]  boolean  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.handleTypeOfResult(type,  value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.handleTypeOfResult(type,  value,  resultEqualsValue);	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	122	None	replace
124	[BUG]  [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	122	None	replace
125	[BUG]  [BUGGY]  mandExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  [CE]  cannot  find  symbol  mandExceptionHandler  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  mandExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	mandExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  mandExceptionHandler	122	None	replace
126	[BUG]  [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	122	None	replace
127	[BUG]  [BUGGY]  type  =  type.handleTypeOfResult(value,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  type  =  type.handleTypeOfResult(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	type  =  type.handleTypeOfResult(value,  resultEqualsValue);	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
128	[BUG]  [BUGGY]  managedExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  [CE]  cannot  find  symbol  managedExceptionHandler  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  managedExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	managedExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  managedExceptionHandler	122	None	replace
129	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	119	None	replace
130	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	119	None	replace
131	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	119	None	replace
132	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  resultEqualsValue;  [CE]  cannot  find  symbol  result  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  resultEqualsValue;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  resultEqualsValue;	  result    =    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	31	None	replace
133	[BUG]  [BUGGY]  result  =  result!=  null?  getNativeType(UNKNOWN_TYPE):  resultEqualsValue;  [CE]  cannot  find  symbol  result  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result!=  null?  getNativeType(UNKNOWN_TYPE):  resultEqualsValue;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result!=  null?  getNativeType(UNKNOWN_TYPE):  resultEqualsValue;	  result    =    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	31	None	replace
134	[BUG]  [BUGGY]  result  =  result!=  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result!=  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result!=  null?  getNativeType(UNKNOWN_TYPE):  result;	  result    =    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	31	None	replace
135	[BUG]  [BUGGY]  result  =  type  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  result    =    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	31	None	replace
136	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  value,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  value,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	52	None	replace
137	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	52	None	replace
138	[BUG]  [BUGGY]  ResultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	52	None	replace
139	[BUG]  [BUGGY]  ResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	52	None	replace
140	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  result,  value));  [CE]  cannot  find  symbol  result  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  result,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  result,  value));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	52	None	replace
141	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  result));  [CE]  cannot  find  symbol  result  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  result));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	52	None	replace
142	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));	  return    result    ==    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	11	None	replace
143	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  return    result    ==    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	11	None	replace
144	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  type);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  type);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    value),    resultEqualsValue);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	17	None	replace
145	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  type);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  type);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    value),    resultEqualsValue);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	17	None	replace
146	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  type,  resultEqualsValue);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  type,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  type,  resultEqualsValue);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    value),    resultEqualsValue);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	17	None	replace
147	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  resultEqualsValue);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  resultEqualsValue);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    value),    resultEqualsValue);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	17	None	replace
148	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  type);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  type);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    value),    resultEqualsValue);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	17	None	replace
149	[BUG]  [BUGGY]  return  resultEqualsValue  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  return    resultEqualsValue    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	36	None	replace
150	[BUG]  [BUGGY]  return  resultEqualsValue  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);	  return    resultEqualsValue    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	36	None	replace
151	[BUG]  [BUGGY]  return  resultEqualsValue!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  incomparable  types:  boolean  and  <null>  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    resultEqualsValue    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	36	None	replace
152	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol  result	4	None	replace
153	[BUG]  [BUGGY]  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    }    else    {    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  result	100	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	add	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    }    else    {    return    result;    }    	compilable	  [FE]  AssertionFailedError  	100	12	replace
155	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [FE]  AssertionFailedError  [FE]                                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    }    else    {    return    result;    }    	compilable	  [FE]  AssertionFailedError  	100	12	replace
156	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  incompatible  types  [FE]                                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    }    else    {    return    result;    }    	non-compiled	[CE]  incompatible  types	100	None	replace
157	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue,  resultEqualsValue);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
158	[BUG]  [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
159	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue,  qualifiedName);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue,  qualifiedName);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue,  qualifiedName);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
160	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type,  resultEqualsValue);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type,  resultEqualsValue);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  ')'  expected	65	None	replace
161	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  }  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  }	  if(resultEqualsValue)    {    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	115	None	replace
162	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value),  resultEqualsValue);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value),  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  ';'  expected	48	None	replace
163	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  cannot  find  symbol  result	48	None	replace
164	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  cannot  find  symbol  result	48	None	replace
165	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type),  resultEqualsValue);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type),  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  ';'  expected	48	None	replace
166	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  ';'  expected	48	None	replace
167	[BUG]  [BUGGY]  return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  ';'  expected	48	None	replace
168	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value),  resultEqualsValue);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value),  resultEqualsValue);	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	78	None	replace
169	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  resultEqualsValue);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  resultEqualsValue);	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	78	None	replace
170	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue),  value);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue),  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue),  value);	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	78	None	replace
171	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  result);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  result);	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	78	None	replace
172	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value),  result);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value),  result);	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	78	None	replace
173	[BUG]  [BUGGY]  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	42	None	replace
174	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(NO_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	104	None	replace
175	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(NO_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	104	None	replace
176	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    result    ==    null?    getNativeType(NO_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	104	None	replace
177	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    result    ==    null?    getNativeType(NO_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	104	None	replace
178	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(NO_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	104	None	replace
179	[BUG]  [BUGGY]  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE,  resultEqualsValue);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE,  resultEqualsValue);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeType(CHECKED_UNKNOWN_TYPE,    resultEqualsValue);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	44	None	replace
180	[BUG]  [BUGGY]  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	38	None	replace
181	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  missing  return  statement	38	None	replace
182	[BUG]  [BUGGY]  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	38	None	replace
183	[BUG]  [BUGGY]  ResultVisitor.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  ResultVisitor  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultVisitor.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultVisitor.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    result));    	non-compiled	[CE]  cannot  find  symbol  ResultVisitor	55	None	replace
184	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  CHECKED_UNKNOWN_TYPE));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  CHECKED_UNKNOWN_TYPE));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  CHECKED_UNKNOWN_TYPE));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    result));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	55	None	replace
185	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    value));    	non-compiled	[CE]  ';'  expected	109	None	replace
186	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    value));    	non-compiled	[CE]  ';'  expected	109	None	replace
187	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(type);  [CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getNativeType(type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeType(type);	  resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	98	None	replace
188	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(type,  CHECKED_UNKNOWN_TYPE);  [CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getNativeType(type,  CHECKED_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeType(type,  CHECKED_UNKNOWN_TYPE);	  resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	98	None	replace
189	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE,  value);  [CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE,  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE,  value);	  resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	98	None	replace
190	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(TYPE);  [CE]  cannot  find  symbol  TYPE  [FE]                                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getNativeType(TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeType(TYPE);	  resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  TYPE	98	None	replace
191	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE,  type);  [CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE,  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE,  type);	  resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	98	None	replace
192	[BUG]  [BUGGY]  resultEqualsValue  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package  [FE]                                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.getNativeType(CHECKED_UNKNOWN_TYPE);	  resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  getNativeType(JSTypeNative)  is  not  public  in  JSType;  cannot  be  accessed  from  outside  package	98	None	replace
193	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(resultEqualsValue);  [CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getNativeType(resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeType(resultEqualsValue);	  resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	98	None	replace
194	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(CHKED_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  CHKED_UNKNOWN_TYPE  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(CHKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(CHKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  cannot  find  symbol  CHKED_UNKNOWN_TYPE	97	None	replace
195	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeOf(type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeOf(type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeOf(type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
196	[BUG]  [BUGGY]  return  value.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  value.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  value.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    value));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	76	None	replace
197	[BUG]  [BUGGY]  Result  resultEqualsValue  =  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  Result  resultEqualsValue  =  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	Result  resultEqualsValue  =  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    value));    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
198	[BUG]  [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  resultEqualsValue);	  result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  result	33	None	replace
199	[BUG]  [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  value);  [CE]  cannot  find  symbol  result  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  value);	  result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  result	33	None	replace
200	[BUG]  [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  type);  [CE]  cannot  find  symbol  result  [FE]                                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  getNativeType(CHECKED_UNKNOWN_TYPE,  type);	  result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  result	33	None	replace
201	[BUG]  [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE)+  1;  [CE]  cannot  find  symbol  result  [FE]                                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE)+  1;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  getNativeType(CHECKED_UNKNOWN_TYPE)+  1;	  result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  result	33	None	replace
202	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  resultEqualsValue);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  resultEqualsValue);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	14	None	replace
203	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue),  resultEqualsValue);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue),  resultEqualsValue);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	14	None	replace
204	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultequalsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	58	None	replace
205	[BUG]  [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultequalsValue));    	non-compiled	[CE]  cannot  find  symbol  result	58	None	replace
206	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue,  qualifiedName);  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue,  qualifiedName);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue,  qualifiedName);	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  result	1	None	replace
207	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  null  :  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  null  :  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	64	None	replace
208	[BUG]  [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(type,  value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByUndefinedVisitor(type,  value,  resultEqualsValue));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
209	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	64	None	replace
210	[BUG]  [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  type,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByUndefinedVisitor(value,  type,  resultEqualsValue));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
211	[BUG]  [BUGGY]  result  =  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	64	None	replace
212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	add	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	compilable	  [FE]  AssertionFailedError  	95	12	replace
213	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [FE]  AssertionFailedError  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	compilable	  [FE]  AssertionFailedError  	95	12	replace
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	add	JSType  result  =  getNativeType(UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	compilable	  [FE]  AssertionFailedError  	95	12	replace
215	[BUG]  [BUGGY]  JSType  result  =  getNativeType(UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [FE]  AssertionFailedError  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	compilable	  [FE]  AssertionFailedError  	95	12	replace
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	add	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	compilable	  [FE]  AssertionFailedError  	95	12	replace
217	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  result;  [FE]  AssertionFailedError  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	compilable	  [FE]  AssertionFailedError  	95	12	replace
218	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	95	None	replace
219	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  incompatible  types  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  incompatible  types	95	None	replace
220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	add	JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	compilable	  [FE]  AssertionFailedError  	95	12	replace
221	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [FE]  AssertionFailedError  [FE]                                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	compilable	  [FE]  AssertionFailedError  	95	12	replace
222	[BUG]  [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));	  result.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	126	None	replace
223	[BUG]  [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));	  result.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	126	None	replace
224	[BUG]  [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);	  result.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	126	None	replace
225	[BUG]  [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  outcome));  [CE]  cannot  find  symbol  outcome  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  outcome));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  outcome));	  result.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  outcome	126	None	replace
226	[BUG]  [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));	  result.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	126	None	replace
227	[BUG]  [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  type);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  type);	  result.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	126	None	replace
228	[BUG]  [BUGGY]  ResultVisitor  result  =  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultVisitor  result  =  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultVisitor  result  =  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  result.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	126	None	replace
229	[BUG]  [BUGGY]  return  resultEqualsValue!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  incomparable  types:  boolean  and  <null>  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	9	None	replace
230	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	63	None	replace
231	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  JSType    result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
232	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);	  JSType    result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
233	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  JSType    result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
234	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getInstance().visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeRegistry.getInstance().visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.getInstance().visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  JSType    result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
235	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  if(resultEqualsValue)    {    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    else    {    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  result	124	None	replace
236	[BUG]  [BUGGY]  result  =  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	39	None	replace
237	[BUG]  [BUGGY]  result  =  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	39	None	replace
238	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result));  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    value));    	non-compiled	[CE]  cannot  find  symbol  result	54	None	replace
239	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    value));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	54	None	replace
240	[BUG]  [BUGGY]  ResultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    value));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	54	None	replace
241	[BUG]  [BUGGY]  ResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  value));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    value));    	non-compiled	[CE]  ';'  expected	54	None	replace
242	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  result    =    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	47	None	replace
243	[BUG]  [BUGGY]  result  =  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	47	None	replace
244	[BUG]  [BUGGY]  result  =  value  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  value  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  value  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	47	None	replace
245	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  result    =    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	47	None	replace
246	[BUG]  [BUGGY]  result  =  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	47	None	replace
247	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  type));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  type));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	72	None	replace
248	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	72	None	replace
249	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  value));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	72	None	replace
250	[BUG]  [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  result));  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  result));	  resultEqualsValue    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	22	None	replace
251	[BUG]  [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));	  resultEqualsValue    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	22	None	replace
252	[BUG]  [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));	  resultEqualsValue    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	22	None	replace
253	[BUG]  [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  resultEqualsValue    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	92	None	replace
254	[BUG]  [BUGGY]  resultEqualsValue  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  resultEqualsValue    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	92	None	replace
255	[BUG]  [BUGGY]  resultEqualsValue!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  resultEqualsValue    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	92	None	replace
256	[BUG]  [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));	  resultEqualsValue    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	92	None	replace
257	[BUG]  [BUGGY]  resultEqualsValue  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  resultEqualsValue    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	92	None	replace
258	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	28	None	replace
259	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  value);	  result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	28	None	replace
260	[BUG]  [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	28	None	replace
261	[BUG]  [BUGGY]  result  =  typeRegistry.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  typeRegistry.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  typeRegistry.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	28	None	replace
262	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type,  value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type,  value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(type,  value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	111	None	replace
263	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  type);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  type);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(value,  type);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	111	None	replace
264	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  type,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  type,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(value,  type,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	111	None	replace
265	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  value,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  value,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(value,  value,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	111	None	replace
266	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(value,  value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	111	None	replace
267	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(value,  value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(value,  value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeTypeForTypeOf(value,  value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	111	None	replace
268	[BUG]  [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	6	None	replace
269	[BUG]  [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  cannot  find  symbol  result  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);	  result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	6	None	replace
270	[BUG]  [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  qualifiedName);  [CE]  cannot  find  symbol  result  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  qualifiedName);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  qualifiedName);	  result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	6	None	replace
271	[BUG]  [BUGGY]  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  if(resultEqualsValue)    {    return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	25	None	replace
272	[BUG]  [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(type,  value);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(type,  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(type,  value);	  resultEqualsValue    =    getRestrictedByTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
273	[BUG]  [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(type,  value,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(type,  value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(type,  value,  resultEqualsValue);	  resultEqualsValue    =    getRestrictedByTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
274	[BUG]  [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(value,  type);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(value,  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(value,  type);	  resultEqualsValue    =    getRestrictedByTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
275	[BUG]  [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(value,  type,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(value,  type,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(value,  type,  resultEqualsValue);	  resultEqualsValue    =    getRestrictedByTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
276	[BUG]  [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(value,  resultEqualsValue,  type);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(value,  resultEqualsValue,  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(value,  resultEqualsValue,  type);	  resultEqualsValue    =    getRestrictedByTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
277	[BUG]  [BUGGY]  ResultEqualsValue  =  getRestrictedByTypeOfResultVisitor(type,  value,  resultEqualsValue);  [CE]  cannot  find  symbol  ResultEqualsValue  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultEqualsValue  =  getRestrictedByTypeOfResultVisitor(type,  value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultEqualsValue  =  getRestrictedByTypeOfResultVisitor(type,  value,  resultEqualsValue);	  resultEqualsValue    =    getRestrictedByTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  ResultEqualsValue	102	None	replace
278	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  variable  resultEqualsValue  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  variable  resultEqualsValue  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	56	None	replace
279	[BUG]  [BUGGY]  JSType  result  =  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  missing  return  statement	41	None	replace
280	[BUG]  [BUGGY]  JSType  result  =  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  missing  return  statement	41	None	replace
281	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value,  resultEqualsValue);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value,  resultEqualsValue);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    value);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	13	None	replace
282	[BUG]  [BUGGY]  return  typeRegistry.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  typeRegistry.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  typeRegistry.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
283	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
284	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol  result	68	None	replace
285	[BUG]  [BUGGY]  result.visit(new  RestrictByUndefinedVisitor(type,  value));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result.visit(new  RestrictByUndefinedVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByUndefinedVisitor(type,  value));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
286	[BUG]  [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(type,  value));  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByUndefinedVisitor(type,  value));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
287	[BUG]  [BUGGY]  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	123	None	replace
288	[BUG]  [BUGGY]  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	123	None	replace
289	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);  }  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);  }	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	123	None	replace
290	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  }  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  }	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	123	None	replace
291	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	123	None	replace
292	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value),  resultEqualsValue);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value),  resultEqualsValue);	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(type,    value));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	75	None	replace
293	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result));  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(type,    value));    	non-compiled	[CE]  cannot  find  symbol  result	75	None	replace
294	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  type));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  type));	  resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	24	None	replace
295	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	24	None	replace
296	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	24	None	replace
297	[BUG]  [BUGGY]  ResultVisitor  resultEqualsValue  =  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultVisitor  resultEqualsValue  =  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultVisitor  resultEqualsValue  =  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	24	None	replace
298	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  result));  [CE]  cannot  find  symbol  result  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  result));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	61	None	replace
299	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	71	None	replace
300	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	71	None	replace
301	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue),  result);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue),  result);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	71	None	replace
302	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result,  value));  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result,  value));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	73	None	replace
303	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	73	None	replace
304	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	73	None	replace
305	[BUG]  [BUGGY]  return  resultEqualsValue  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  incomparable  types:  boolean  and  <null>  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	10	None	replace
306	[BUG]  [BUGGY]  result  =  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	23	None	replace
307	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }	  return    result.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	23	None	replace
308	[BUG]  [BUGGY]  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));	  return    result.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	23	None	replace
309	[BUG]  [BUGGY]  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    result.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	23	None	replace
310	[BUG]  [BUGGY]  result.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));	  return    result.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	23	None	replace
311	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOfResult(value);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  type  =  getNativeTypeForTypeOfResult(value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  type  =  getNativeTypeForTypeOfResult(value);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	82	None	replace
312	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(value);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOfResult(value);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
313	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  result),  resultEqualsValue));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  result),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  result),  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsVALue));    	non-compiled	[CE]  ';'  expected	103	None	replace
314	[BUG]  [BUGGY]  resultEqualsValue  =  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    resultEqualsValue    ==    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	35	None	replace
315	[BUG]  [BUGGY]  return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    resultEqualsValue    ==    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	35	None	replace
316	[BUG]  [BUGGY]  return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [CE]  incomparable  types:  boolean  and  <null>  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));	  return    resultEqualsValue    ==    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	35	None	replace
317	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [CE]  cannot  find  symbol  result  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol  result	57	None	replace
318	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value),  resultEqualsValue));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value),  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(type,    value));    	non-compiled	[CE]  ';'  expected	53	None	replace
319	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	27	None	replace
320	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  RELATIVE_UNKNOWN_TYPE  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    else    {    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  RELATIVE_UNKNOWN_TYPE	99	None	replace
321	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type);  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(type);	  JSType    result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	29	None	replace
322	[BUG]  [BUGGY]  JSType  result  =  getNativeType(type);  [CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(type);	  JSType    result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	29	None	replace
323	[BUG]  [BUGGY]  JSType  result  =  getNativeType(type,  CHECKED_UNKNOWN_TYPE);  [CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(type,  CHECKED_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(type,  CHECKED_UNKNOWN_TYPE);	  JSType    result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	29	None	replace
324	[BUG]  [BUGGY]  JSType  result  =  getNativeType(type,  resultEqualsValue);  [CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(type,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(type,  resultEqualsValue);	  JSType    result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	29	None	replace
325	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  RESULT_UNKNOWN_TYPE  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RESULT_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  cannot  find  symbol  RESULT_UNKNOWN_TYPE	96	None	replace
326	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RESULT_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	96	None	replace
327	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  RESULT_UNKNOWN_TYPE  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result!=  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RESULT_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  cannot  find  symbol  RESULT_UNKNOWN_TYPE	96	None	replace
328	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  resultEqualsValue;  [CE]  cannot  find  symbol  RESULT_UNKNOWN_TYPE  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  resultEqualsValue;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  resultEqualsValue;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RESULT_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  cannot  find  symbol  RESULT_UNKNOWN_TYPE	96	None	replace
329	[BUG]  [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RESULT_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  cannot  find  symbol  result	96	None	replace
330	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  [CE]  incompatible  types  [FE]                                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RESULT_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  incompatible  types	96	None	replace
331	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  result	16	None	replace
332	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	16	None	replace
333	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);  [CE]  boolean  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	16	None	replace
334	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);  [CE]  cannot  find  symbol  result  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  result	16	None	replace
335	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  resultEqualsValue);	  JSType    result    =    type.getRestrictedByTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
336	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(value,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(value,  resultEqualsValue);	  JSType    result    =    type.getRestrictedByTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
337	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  value);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue,  value);	  JSType    result    =    type.getRestrictedByTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
338	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	49	None	replace
339	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	49	None	replace
340	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	49	None	replace
341	[BUG]  [BUGGY]  JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value));  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value));    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	43	None	replace
342	[BUG]  [BUGGY]  JSType  type  =  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  type  =  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  type  =  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value));    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	43	None	replace
343	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	43	None	replace
344	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(type,  value));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByUndefinedVisitor(type,  value));	  return    resultEqualsValue.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
345	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
346	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(type,  value));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(type,  value));	  return    resultEqualsValue.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
347	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type),  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type),  resultEqualsValue);	  return    resultEqualsValue.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
348	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);	  JSType    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	5	None	replace
349	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));	  JSType    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	5	None	replace
350	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);	  JSType    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	5	None	replace
351	[BUG]  [BUGGY]  return  this.type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  cannot  find  symbol  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  this.type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  this.type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  return    this.type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  type	59	None	replace
352	[BUG]  [BUGGY]  return  this.type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  cannot  find  symbol  result  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  this.type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  this.type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);	  return    this.type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	59	None	replace
353	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeOfResult(type,  resultEqualsValue,  value));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  aughtExceptionHandler.handleTypeOfResult(type,  resultEqualsValue,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	aughtExceptionHandler.handleTypeOfResult(type,  resultEqualsValue,  value));	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	121	None	replace
354	[BUG]  [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue));  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue));  }	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	121	None	replace
355	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeOfResult(value,  type,  resultEqualsValue));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  aughtExceptionHandler.handleTypeOfResult(value,  type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	aughtExceptionHandler.handleTypeOfResult(value,  type,  resultEqualsValue));	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	121	None	replace
356	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue),  result);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue),  result);	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	121	None	replace
357	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(type,  value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByUndefinedVisitor(type,  value,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
358	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  type);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  type);	  resultEqualsValue.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
359	[BUG]  [BUGGY]  resultEqualsValue,  new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue,  new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue,  new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	70	None	replace
360	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  resultEqualsValue;  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  resultEqualsValue;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  resultEqualsValue;	  result    =    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	30	None	replace
361	[BUG]  [BUGGY]  result  =  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  result    =    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	30	None	replace
362	[BUG]  [BUGGY]  result  =  type  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  result    =    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	30	None	replace
363	[BUG]  [BUGGY]  result  =  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  resultEqualsValue;  [CE]  cannot  find  symbol  result  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  resultEqualsValue;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result!=  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  resultEqualsValue;	  result    =    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	30	None	replace
364	[BUG]  [BUGGY]  Result  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  Result  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	Result  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
365	[BUG]  [BUGGY]  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	83	None	replace
366	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    type));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	77	None	replace
367	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    type));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	77	None	replace
368	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    type));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	77	None	replace
369	[BUG]  [BUGGY]  JSType  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue));  [CE]  variable  resultEqualsValue  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    type));    	non-compiled	[CE]  variable  resultEqualsValue  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	77	None	replace
370	[BUG]  [BUGGY]  final  RestrictByOneTypeOfResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  final  RestrictByOneTypeOfResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	final  RestrictByOneTypeOfResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    type));    	non-compiled	[CE]  ';'  expected	77	None	replace
371	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  result));  [CE]  cannot  find  symbol  result  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  result));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    type));    	non-compiled	[CE]  cannot  find  symbol  result	77	None	replace
372	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  outcomeEqualsValue));  [CE]  cannot  find  symbol  outcomeEqualsValue  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  outcomeEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  outcomeEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultsValue));    	non-compiled	[CE]  cannot  find  symbol  outcomeEqualsValue	117	None	replace
373	[BUG]  [BUGGY]  JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	40	None	replace
374	[BUG]  [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
375	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue),  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue),  resultEqualsValue);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
376	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue),  result);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue),  result);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
377	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  type));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  type));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
378	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue),  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	110	None	replace
379	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
380	[BUG]  [BUGGY]  result  =  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    result    =    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	81	None	replace
381	[BUG]  [BUGGY]  result  =  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    result    =    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	81	None	replace
382	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(value);	  JSType    result    =    type.getRestrictedByTypeOfResult(resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
383	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(resultEqualsValue);	  JSType    result    =    type.getRestrictedByTypeOfResult(resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
384	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  missing  return  statement	80	None	replace
385	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result,  value));  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result,  value));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	50	None	replace
386	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	50	None	replace
387	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result),  resultEqualsValue));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  result),  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	50	None	replace
388	[BUG]  [BUGGY]  ResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);	  if(resultEqualsValue)    {    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
389	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(resultEqualsValue)    {    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	116	None	replace
390	[BUG]  [BUGGY]  final  JSType  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  variable  resultEqualsValue  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  final  JSType  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	final  JSType  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  if(resultEqualsValue)    {    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  resultEqualsValue  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	116	None	replace
391	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(resultEqualsValue)    {    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	116	None	replace
392	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);	  JSType    result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
393	[BUG]  [BUGGY]  resultEqualsValue  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  resultEqualsValue    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
394	[BUG]  [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result));	  resultEqualsValue    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	22	None	replace
395	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue),  result);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue),  result);	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	52	None	replace
396	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue,  result));  [CE]  cannot  find  symbol  result  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue,  result));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	52	None	replace
397	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByFalseTypeOfResultVisitor(value,  type));  [CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByFalseTypeOfResultVisitor(value,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByFalseTypeOfResultVisitor(value,  type));	  return    type.visit(new    RestrictByFalseTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	91	None	replace
398	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type!=  null?  null  :  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByFalseTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	91	None	replace
399	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(value);  [CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getNativeType(value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeType(value);	  resultEqualsValue    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	98	None	replace
400	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  type));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  type));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue,    result));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	88	None	replace
401	[BUG]  [BUGGY]  return  type!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result!=    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	37	None	replace
402	[BUG]  [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);	  resultEqualsValue    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	101	None	replace
403	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);	  result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	28	None	replace
404	[BUG]  [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResult(type,  value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  method  getRestrictedByTypeOfResult  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResult(type,  value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getRestrictedByTypeOfResult(type,  value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getRestrictedByTypeOfResult  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	97	None	replace
405	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  cannot  find  symbol  result	97	None	replace
406	[BUG]  [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  resultEqualsValue    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	92	None	replace
407	[BUG]  [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  resultEqualsValue    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	92	None	replace
408	[BUG]  [BUGGY]  ResultVisitor  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultVisitor  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultVisitor  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  resultEqualsValue    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	92	None	replace
409	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  this.type));  [CE]  cannot  find  symbol  type  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  this.type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  this.type));	  return    this.type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  type	59	None	replace
410	[BUG]  [BUGGY]  return  this.resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  resultEqualsValue  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  this.resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  this.resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    this.type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  resultEqualsValue	59	None	replace
411	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	57	None	replace
412	[BUG]  [BUGGY]  resultEqualsValue)  {  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue)  {  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue)  {  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(resultEqualsValue)    {    return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  not  a  statement	25	None	replace
413	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultE  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultE  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultE	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue));    	non-compiled	[CE]  ')'  expected	119	None	replace
414	[BUG]  [BUGGY]  if(type  ==  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValu  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(type  ==  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValu  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(type  ==  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValu	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue));    	non-compiled	[CE]  ')'  expected	119	None	replace
415	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue));    	non-compiled	[CE]  ')'  expected	119	None	replace
416	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  result  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  result  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  result	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue));    	non-compiled	[CE]  ')'  expected	119	None	replace
417	[BUG]  [BUGGY]  return  result!=  null  &&  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null  &&  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null  &&  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	23	None	replace
418	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	23	None	replace
419	[BUG]  [BUGGY]  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value));	  return    result.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	23	None	replace
420	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
421	[BUG]  [BUGGY]  return  type  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	11	None	replace
422	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));	  return    result    ==    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	11	None	replace
423	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	49	None	replace
424	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	49	None	replace
425	[BUG]  [BUGGY]  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    resultEqualsValue    ==    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	35	None	replace
426	[BUG]  [BUGGY]  return  resultEqualsValue!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    resultEqualsValue    ==    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	35	None	replace
427	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  RESULT_UNKNOWN_TYPE  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RESULT_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  cannot  find  symbol  RESULT_UNKNOWN_TYPE	96	None	replace
428	[BUG]  [BUGGY]  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  }	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RESULT_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  not  a  statement	96	None	replace
429	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	106	None	replace
430	[BUG]  [BUGGY]  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result!=    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	19	None	replace
431	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getRestrictedByTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeRegistry.getRestrictedByTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.getRestrictedByTypeOfResultVisitor(value,  resultEqualsValue));	  JSType    result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	26	None	replace
432	[BUG]  [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  not  a  statement	108	None	replace
433	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  result	108	None	replace
434	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeOfResult(value,  value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  aughtExceptionHandler.handleTypeOfResult(value,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	aughtExceptionHandler.handleTypeOfResult(value,  value,  resultEqualsValue));	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	121	None	replace
435	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  type));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  type));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue,    value));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	74	None	replace
436	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(value);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.getRestrictedByTypeOfResult(value);	  JSType    result    =    type.getRestrictedByTypeOfResult(resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
437	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  resultEqualsValue);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  resultEqualsValue);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    value),    resultEqualsValue);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	17	None	replace
438	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    value),    resultEqualsValue);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	17	None	replace
439	[BUG]  [BUGGY]  return  this.restrictNullVisitor.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  this.restrictNullVisitor.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  this.restrictNullVisitor.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    value.visit(new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	60	None	replace
440	[BUG]  [BUGGY]  ResultVisitor  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(type,  value);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultVisitor  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(type,  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultVisitor  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(type,  value);	  resultEqualsValue    =    getRestrictedByTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
441	[BUG]  [BUGGY]  JSType  result  =  typeregistry.getRestrictedByTypeOfResult(value,  resultEqualsValue);  [CE]  cannot  find  symbol  typeregistry  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeregistry.getRestrictedByTypeOfResult(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeregistry.getRestrictedByTypeOfResult(value,  resultEqualsValue);	  JSType    result    =    type.getRestrictedByTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  typeregistry	32	None	replace
442	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	120	None	replace
443	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultE  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultE  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultE	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue));    	non-compiled	[CE]  ')'  expected	120	None	replace
444	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue  ==  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue  ==  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	122	None	replace
445	[BUG]  [BUGGY]  if(resultEqualsValue!=  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue!=  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue!=  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	122	None	replace
446	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue  ==  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue  ==  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	122	None	replace
447	[BUG]  [BUGGY]  if(resultEqualsValue!=  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue!=  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue!=  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	122	None	replace
448	[BUG]  [BUGGY]  if(type!=  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(type!=  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(type!=  null)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	122	None	replace
449	[BUG]  [BUGGY]  if(resultEqualsValue!=  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue!=  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue!=  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	39	None	replace
450	[BUG]  [BUGGY]  if(resultEqualsValue  ==  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue  ==  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue  ==  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	39	None	replace
451	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultE  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultE  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultE	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  ')'  expected	83	None	replace
452	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type!=  null?  null  :  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	69	None	replace
453	[BUG]  [BUGGY]  return  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	69	None	replace
454	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  result));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  result));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	69	None	replace
455	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue,  resultEqualsValue);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue,  resultEqualsValue);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	14	None	replace
456	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue,  qualifiedName);  [CE]  cannot  find  symbol  qualifiedName  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue,  qualifiedName);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue,  qualifiedName);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	14	None	replace
457	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(value,  type);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(value,  type);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeTypeForTypeOf(value,  type);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	111	None	replace
458	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(type,  value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  getNativeTypeForTypeOf(type,  value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeTypeForTypeOf(type,  value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	111	None	replace
459	[BUG]  [BUGGY]  ResultVisitor  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultVisitor  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultVisitor  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
460	[BUG]  [BUGGY]  result  =  typeregistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  typeregistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  typeregistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	62	None	replace
461	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  result);	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	63	None	replace
462	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	63	None	replace
463	[BUG]  [BUGGY]  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value),  resultEqualsValue);  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  value),  resultEqualsValue);	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	123	None	replace
464	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	123	None	replace
465	[BUG]  [BUGGY]  return  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	123	None	replace
466	[BUG]  [BUGGY]  ResultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  ResultEqualsValue  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  if(resultEqualsValue)    {    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  cannot  find  symbol  ResultEqualsValue	115	None	replace
467	[BUG]  [BUGGY]  ResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  ResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	ResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  if(resultEqualsValue)    {    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  ';'  expected	115	None	replace
468	[BUG]  [BUGGY]  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    else    {    return    result;    }    	non-compiled	[CE]  not  a  statement	99	None	replace
469	[BUG]  [BUGGY]  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    else    {    return    result;    }    	non-compiled	[CE]  not  a  statement	99	None	replace
470	[BUG]  [BUGGY]  result  =  value  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  value  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  value  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  result    =    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	30	None	replace
471	[BUG]  [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);	  result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	6	None	replace
472	[BUG]  [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol  result	4	None	replace
473	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [CE]  cannot  find  symbol  result  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol  result	4	None	replace
474	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	73	None	replace
475	[BUG]  [BUGGY]  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  not  a  statement	94	None	replace
476	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type,  value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type,  value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(type,  value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	94	None	replace
477	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	47	None	replace
478	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	56	None	replace
479	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type),  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type),  resultEqualsValue);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
480	[BUG]  [BUGGY]  JSType  result  =  type!=  null?  getNativeType(UNKNOWN_TYPE):  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type!=  null?  getNativeType(UNKNOWN_TYPE):  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type!=  null?  getNativeType(UNKNOWN_TYPE):  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null)    {    return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  missing  return  statement	114	None	replace
481	[BUG]  [BUGGY]  RestrictByOneTypeOfResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  RestrictByOneTypeOfResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	RestrictByOneTypeOfResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  value));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  ';'  expected	51	None	replace
482	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  unreachable  statement	7	None	add
483	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  result  =  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  result  =  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    result  =  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  cannot  find  symbol  result	7	None	add
484	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  getNativeTypeForTypeOfResult(value);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	7	None	add
485	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
486	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByTypeOfResultVisitor(type,  value));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByTypeOfResultVisitor(type,  value));	  return    resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	89	None	replace
487	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	89	None	replace
488	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	89	None	replace
489	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE,  resultEqualsValue);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE,  resultEqualsValue);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	16	None	replace
490	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  CHECKED_UNKNOWN_TYPE);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  CHECKED_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  CHECKED_UNKNOWN_TYPE);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	16	None	replace
491	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByUndefinedResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByUndefinedResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByUndefinedResultVisitor(value,  resultEqualsValue),  resultEqualsValue));	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	3	None	replace
492	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  result,  value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  result,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  result,  value,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	71	None	replace
493	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
494	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value);  }  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value);  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value);  }	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	82	None	replace
495	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  type));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    value));    	non-compiled	[CE]  ';'  expected	109	None	replace
496	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	45	None	replace
497	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  type);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  type);	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	50	None	replace
498	[BUG]  [BUGGY]  return  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    type));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	77	None	replace
499	[BUG]  [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	33	None	replace
500	[BUG]  [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE).resultEqualsValue;  [CE]  cannot  find  symbol  result  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE).resultEqualsValue;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  getNativeType(CHECKED_UNKNOWN_TYPE).resultEqualsValue;	  result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  result	33	None	replace
501	[BUG]  [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  type),  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  type),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByUndefinedVisitor(value,  type),  resultEqualsValue);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
502	[BUG]  [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  value),  type);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  value),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByUndefinedVisitor(value,  value),  type);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
503	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  ';'  expected	48	None	replace
504	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  result));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  result));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
505	[BUG]  [BUGGY]  return  typeregistry.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  typeregistry.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  typeregistry.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
506	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  value));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  value));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
507	[BUG]  [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByUndefinedVisitor(value,  value,  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
508	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type,  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
509	[BUG]  [BUGGY]  return  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
510	[BUG]  [BUGGY]  return  type.visit(resultEqualsValue,  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(resultEqualsValue,  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(resultEqualsValue,  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    value);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	13	None	replace
511	[BUG]  [BUGGY]  return  type.visit(resultEqualsValue,  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(resultEqualsValue,  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(resultEqualsValue,  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    value);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	13	None	replace
512	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);	  return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	10	None	replace
513	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  this);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  this);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type),  this);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    this);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	87	None	replace
514	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    this);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	87	None	replace
515	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this,  result);  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this,  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this,  result);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    this);    	non-compiled	[CE]  cannot  find  symbol  result	87	None	replace
516	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultsEqualsValue));  [CE]  cannot  find  symbol  resultsEqualsValue  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultsEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultsEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultsValue));    	non-compiled	[CE]  cannot  find  symbol  resultsEqualsValue	117	None	replace
517	[BUG]  [BUGGY]  JSType  result  =  getNativeType(UNKNOWN_TYPE);  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(UNKNOWN_TYPE);	  JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  missing  return  statement	112	None	replace
518	[BUG]  [BUGGY]  JSType  result  =  getNativeType(TYPE);  [CE]  cannot  find  symbol  TYPE  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(TYPE);	  JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  cannot  find  symbol  TYPE	112	None	replace
519	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  result));  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  result));	  resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	24	None	replace
520	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    qualifiedName);    	non-compiled	[CE]  cannot  find  symbol  result	15	None	replace
521	[BUG]  [BUGGY]  return  new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  new  RestrictByUndefinedVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  new  RestrictByUndefinedVisitor(type,  resultEqualsValue));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	64	None	replace
522	[BUG]  [BUGGY]  return  types.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  types.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  types.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
523	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  outcomeEqualsValue));  [CE]  cannot  find  symbol  outcomeEqualsValue  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  outcomeEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  outcomeEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue,    result));    	non-compiled	[CE]  cannot  find  symbol  outcomeEqualsValue	88	None	replace
524	[BUG]  [BUGGY]  if(type!=  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(type!=  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(type!=  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  missing  return  statement	39	None	replace
525	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  cannot  find  symbol  result	48	None	replace
526	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	23	None	replace
527	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	23	None	replace
528	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	23	None	replace
529	[BUG]  [BUGGY]  return  result!=  null  &&  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result!=  null  &&  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null  &&  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	23	None	replace
530	[BUG]  [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));	  resultEqualsValue    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	22	None	replace
531	[BUG]  [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }	  result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	28	None	replace
532	[BUG]  [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }	  result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	28	None	replace
533	[BUG]  [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  return  null;  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  return  null;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  return  null;  }	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	122	None	replace
534	[BUG]  [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  visitRestrictedByTypeOfResult(type,  value,  resultEqualsValue);  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  visitRestrictedByTypeOfResult(type,  value,  resultEqualsValue);  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  visitRestrictedByTypeOfResult(type,  value,  resultEqualsValue);  }	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	122	None	replace
535	[BUG]  [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  IllegalStateException( " ");  }	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	122	None	replace
536	[BUG]  [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  }  else  {  throw  new  UnsupportedOperationException( " ");  }	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	122	None	replace
537	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
538	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue)?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue)?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue)?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
539	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue)?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue)?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue)?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	42	None	replace
540	[BUG]  [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  }	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	3	None	replace
541	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue).visit(resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue).visit(resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue).visit(resultEqualsValue);	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
542	[BUG]  [BUGGY]  return  this.restrictNullVisitor.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  this.restrictNullVisitor.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  this.restrictNullVisitor.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));	  return    value.visit(new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	60	None	replace
543	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  }  [CE]  boolean  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  }	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	78	None	replace
544	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  boolean  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	78	None	replace
545	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  }  else  {  return  new  RestrictByOneTypeOfResultVisitor(type  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  }  else  {  return  new  RestrictByOneTypeOfResultVisitor(type  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  }  else  {  return  new  RestrictByOneTypeOfResultVisitor(type	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    type);    	non-compiled	[CE]  ')'  expected	78	None	replace
546	[BUG]  [BUGGY]  JSType  result  =  getNativeType(RELATIVE_UNKNOWN_TYPE);  [CE]  cannot  find  symbol  RELATIVE_UNKNOWN_TYPE  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeType(RELATIVE_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(RELATIVE_UNKNOWN_TYPE);	  JSType    result    =    getNativeTypeForTypeOf(value);    	non-compiled	[CE]  cannot  find  symbol  RELATIVE_UNKNOWN_TYPE	112	None	replace
547	[BUG]  [BUGGY]  result  =  typeRegistry.getNativeType(UNKNOWN_TYPE).visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  typeRegistry.getNativeType(UNKNOWN_TYPE).visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  typeRegistry.getNativeType(UNKNOWN_TYPE).visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    value);    	non-compiled	[CE]  cannot  find  symbol  result	2	None	replace
548	[BUG]  [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  }  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  }	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  result	1	None	replace
549	[BUG]  [BUGGY]  return  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	63	None	replace
550	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  resultEqualsValue);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue),  resultEqualsValue);	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	63	None	replace
551	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	16	None	replace
552	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result,  CHECKED_UNKNOWN_TYPE);  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result,  CHECKED_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result,  CHECKED_UNKNOWN_TYPE);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  result	16	None	replace
553	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOf(value);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]    AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOf(value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	7	None	add
554	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	7	None	add
555	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]        AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	7	None	add
556	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	7	None	add
557	[BUG]  [BUGGY]  result  =  this.resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  this.resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  this.resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	62	None	replace
558	[BUG]  [BUGGY]  if(resultEqualsValue)  {  result  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  result  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  result  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	  result    =    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	62	None	replace
559	[BUG]  [BUGGY]  if(resultEqualsValue)  {  result  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  result  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  result  =  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }	  result    =    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	62	None	replace
560	[BUG]  [BUGGY]  return  this.type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  this.type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  this.type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));	  return    this.type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	59	None	replace
561	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(resultEqualsValue)    {    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	116	None	replace
562	[BUG]  [BUGGY]  if(resultEqualsValue)  {  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }	  if(resultEqualsValue)    {    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    else    {    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  result	124	None	replace
563	[BUG]  [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  }  else  {  return  result;  }  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  }  else  {  return  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  }  else  {  return  result;  }	  if(resultEqualsValue)    {    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    else    {    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  result	124	None	replace
564	[BUG]  [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  }  else  {  return  result;  }  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  }  else  {  return  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  }  else  {  return  result;  }	  if(resultEqualsValue)    {    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    else    {    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  result	124	None	replace
565	[BUG]  [BUGGY]  return  type  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    type    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	20	None	replace
566	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  null  :  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
567	[BUG]  [BUGGY]  return  this.resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  this.resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  this.resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    type));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	77	None	replace
568	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    type));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	77	None	replace
569	[BUG]  [BUGGY]  if(resultEqualsValue)  {  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	  if(resultEqualsValue)    {    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  cannot  find  symbol  result	125	None	replace
570	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getNativeTypeForTypeOfResult(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeRegistry.getNativeTypeForTypeOfResult(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.getNativeTypeForTypeOfResult(value,  resultEqualsValue));	  if(resultEqualsValue)    {    result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  ';'  expected	125	None	replace
571	[BUG]  [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue));    	non-compiled	[CE]  	121	None	replace
572	[BUG]  [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue));  }  else  {  return  getNativeTypeForTypeOfResult(type,  value,  resultEqualsValue)  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue));  }  else  {  return  getNativeTypeForTypeOfResult(type,  value,  resultEqualsValue)  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue));  }  else  {  return  getNativeTypeForTypeOfResult(type,  value,  resultEqualsValue)	  aughtExceptionHandler.handleTypeOfResult(type,    value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	121	None	replace
573	[BUG]  [BUGGY]  resultEqualsValue  =  resultEqualsValue?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  resultEqualsValue?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  resultEqualsValue?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  cannot  find  symbol  result	97	None	replace
574	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value,  resultEqualsValue),  result);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value,  resultEqualsValue),  result);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value,  resultEqualsValue),  result);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	107	None	replace
575	[BUG]  [BUGGY]  result  =  resultEqualsValue  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  resultEqualsValue  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  resultEqualsValue  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	  result    =    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	30	None	replace
576	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value),  this);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value),  this);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value),  this);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    this);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	87	None	replace
577	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  }  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  }	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(type,    value));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	53	None	replace
578	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqual  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqual  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqual	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  ')'  expected	83	None	replace
579	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  result  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  result  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  result	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value,    resultEqualsValue);    	non-compiled	[CE]  ')'  expected	83	None	replace
580	[BUG]  [BUGGY]  return  this.result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  this.result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  this.result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	57	None	replace
581	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(type,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	46	None	replace
582	[BUG]  [BUGGY]  resultEqualsValue,  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue,  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue,  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	70	None	replace
583	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE,  result  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE,  result  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE,  result	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeType(CHECKED_UNKNOWN_TYPE,    resultEqualsValue);    	non-compiled	[CE]  ')'  expected	44	None	replace
584	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNK  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNK  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNK	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeType(CHECKED_UNKNOWN_TYPE,    resultEqualsValue);    	non-compiled	[CE]  ')'  expected	44	None	replace
585	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeType(CHECKED_UNKNOWN_TYPE,    resultEqualsValue);    	non-compiled	[CE]  ')'  expected	44	None	replace
586	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value);  [CE]  cannot  find  symbol  result  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  result	108	None	replace
587	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  result	108	None	replace
588	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    }    else    {    return    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	100	None	replace
589	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  type);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    result;    }    else    {    return    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	100	None	replace
590	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  }  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  }	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	52	None	replace
591	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	52	None	replace
592	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  }  else  {  return  new  RestrictByOneTypeOfResultVisitor(type,  value  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  }  else  {  return  new  RestrictByOneTypeOfResultVisitor(type,  value  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  }  else  {  return  new  RestrictByOneTypeOfResultVisitor(type,  value	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type,    resultEqualsValue));    	non-compiled	[CE]  ')'  expected	52	None	replace
593	[BUG]  [BUGGY]  final  RestrictByOneTypeOfResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  final  RestrictByOneTypeOfResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	final  RestrictByOneTypeOfResultVisitor  resultEqualsValue  =  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	52	None	replace
594	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  }  else  {  return  new  RestrictByOneTypeOfResultVisitor(type  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  }  else  {  return  new  RestrictByOneTypeOfResultVisitor(type  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  }  else  {  return  new  RestrictByOneTypeOfResultVisitor(type	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type,    resultEqualsValue));    	non-compiled	[CE]  ')'  expected	52	None	replace
595	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value);    return    result    ==    null?    getNativeType(RELATIVE_UNKNOWN_TYPE):    result;    }    else    {    return    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	99	None	replace
596	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));	  return    result    ==    null?    getNativeType(NO_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	104	None	replace
597	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	add	return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null)    {    return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	compilable	  [FE]  AssertionFailedError  	114	2	replace
598	[BUG]  [BUGGY]  return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  if(type    ==    null)    {    return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	compilable	  [FE]  AssertionFailedError  	114	2	replace
599	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type,  value);  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(type,  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(type,  value);	  JSType    result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	29	None	replace
600	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(CHECKED_UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	45	None	replace
601	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    type    =    getNativeTypeForTypeOfResult(value);    	non-compiled	[CE]  ')'  expected	82	None	replace
602	[BUG]  [BUGGY]  return  resultEqualsValue,  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue,  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue,  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  ';'  expected	66	None	replace
603	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(resultEqualsValue,  result));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(resultEqualsValue,  result));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(resultEqualsValue,  result));	  return    resultEqualsValue.visit(new    RestrictByUndefinedVisitor(value,    type));    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
604	[BUG]  [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE),  resultEqualsValue);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE),  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  getNativeType(CHECKED_UNKNOWN_TYPE),  resultEqualsValue);	  result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	33	None	replace
605	[BUG]  [BUGGY]  result  =  getNativeType(CHKED_UNKNOWN_TYPE);  [CE]  cannot  find  symbol  result  [FE]                                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  getNativeType(CHKED_UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  getNativeType(CHKED_UNKNOWN_TYPE);	  result    =    getNativeType(CHECKED_UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  result	33	None	replace
606	[BUG]  [BUGGY]  resultEqualsValue  =  createRestrictedByTypeOfResultVisitor(value,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  =  createRestrictedByTypeOfResultVisitor(value,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  createRestrictedByTypeOfResultVisitor(value,  resultEqualsValue);	  resultEqualsValue    =    getRestrictedByTypeOfResultVisitor(value,    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
607	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  type,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  type,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  type,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	89	None	replace
608	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.createRestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeRegistry.createRestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.createRestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  JSType    result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	79	None	replace
609	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.getNativeType(UNKNOWN_TYPE);  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  typeRegistry.getNativeType(UNKNOWN_TYPE);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.getNativeType(UNKNOWN_TYPE);	  JSType    result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  missing  return  statement	79	None	replace
610	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  }  else  {  return  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValu  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  }  else  {  return  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValu  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  }  else  {  return  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValu	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  ')'  expected	51	None	replace
611	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));	  JSType    result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	26	None	replace
612	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(type,  value,  resultEqualsValue));	  JSType    result    =    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	26	None	replace
613	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  }  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  }	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	50	None	replace
614	[BUG]  [BUGGY]  result  =  value  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  value  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  value  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  result    =    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	31	None	replace
615	[BUG]  [BUGGY]  result  =  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	  result    =    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	31	None	replace
616	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue),  value);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue),  value);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  resultEqualsValue),  value);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	14	None	replace
617	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result,  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result,  resultEqualsValue);  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result,  resultEqualsValue);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    resultEqualsValue);    	non-compiled	[CE]  cannot  find  symbol  result	14	None	replace
618	[BUG]  [BUGGY]  return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  incomparable  types:  boolean  and  <null>  [FE]                      AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));	  return    resultEqualsValue    ==    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	35	None	replace
619	[BUG]  [BUGGY]  return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  incomparable  types:  boolean  and  <null>  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  return    resultEqualsValue    ==    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	35	None	replace
620	[BUG]  [BUGGY]  return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  [CE]  incomparable  types:  boolean  and  <null>  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));	  return    resultEqualsValue    ==    null?    null    :    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	35	None	replace
621	[BUG]  [BUGGY]  result  =  typeRegistry.getInstance().visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  typeRegistry.getInstance().visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  typeRegistry.getInstance().visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	6	None	replace
622	[BUG]  [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	6	None	replace
623	[BUG]  [BUGGY]  result  =  typeRegistry.get(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  result  =  typeRegistry.get(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  typeRegistry.get(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    typeRegistry.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	6	None	replace
624	[BUG]  [BUGGY]  return  type!=  null  &&  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  boolean  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  type!=  null  &&  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type!=  null  &&  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  boolean  cannot  be  dereferenced	61	None	replace
625	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  }  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  }	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	56	None	replace
626	[BUG]  [BUGGY]  return  this.resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  this.resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  this.resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));	  return    resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    type));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	56	None	replace
627	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  type,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  type,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  type,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	111	None	replace
628	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  type);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  type);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  type);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	111	None	replace
629	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  value,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  value,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  value,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }	  if(resultEqualsValue)    {    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue);    return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    result;    }    	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	111	None	replace
630	[BUG]  [BUGGY]  if(resultEqualsValue)  {  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  }  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  }	  result.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	126	None	replace
631	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }	  resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	24	None	replace
632	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	24	None	replace
633	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  getRestrictedByTypeOfResultVisitor  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  getRestrictedByTypeOfResultVisitor  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  getRestrictedByTypeOfResultVisitor	  resultEqualsValue.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	24	None	replace
634	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	69	None	replace
635	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(NO_TYPE):  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue),    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	69	None	replace
636	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  getNativeType(UNKNOWN_TYPE)));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  getNativeType(UNKNOWN_TYPE)));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  getNativeType(UNKNOWN_TYPE)));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    result));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	55	None	replace
637	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  getNativeType(CHECKED_UNKNOWN_TYPE)));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  getNativeType(CHECKED_UNKNOWN_TYPE)));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  getNativeType(CHECKED_UNKNOWN_TYPE)));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    result));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	55	None	replace
638	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  thisType));  [CE]  cannot  find  symbol  thisType  [FE]                                  AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  thisType));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  thisType));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    result));    	non-compiled	[CE]  cannot  find  symbol  thisType	55	None	replace
639	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqual  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqual  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqual	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue));    	non-compiled	[CE]  ')'  expected	120	None	replace
640	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultE  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultE  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultE	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType    result    =    getNativeTypeForTypeOf(value,    resultEqualsValue));    	non-compiled	[CE]  ')'  expected	120	None	replace
641	[BUG]  [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));	  resultEqualsValue    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	92	None	replace
642	[BUG]  [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }      [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]      new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  resultEqualsValue    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	92	None	replace
