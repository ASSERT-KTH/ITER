bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	4	None	replace
2	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	4	None	replace
3	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue));	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	4	None	replace
4	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	4	None	replace
5	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  missing  return  statement  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  missing  return  statement	4	None	replace
6	[BUG]  [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	4	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	add	return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	compilable	  [FE]  AssertionFailedError  	11	2	replace
8	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	compilable	  [FE]  AssertionFailedError  	11	2	replace
9	[BUG]  [BUGGY]  return  result!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	11	None	replace
10	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  cannot  find  symbol  result  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	11	None	replace
11	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	11	None	replace
12	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  cannot  find  symbol  result  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	11	None	replace
13	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  value);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
14	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
15	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  qualifiedName);  [CE]  cannot  find  symbol  qualifiedName  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  qualifiedName);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  qualifiedName);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol  qualifiedName	2	None	replace
16	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  CHECKED_UNKNOWN_TYPE);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
17	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value),  resultEqualsValue);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	2	None	replace
18	[BUG]  [BUGGY]  return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	14	None	replace
19	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	14	None	replace
20	[BUG]  [BUGGY]  return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    type!=    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	14	None	replace
21	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  value));  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  value));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  value));	  return    type!=    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	14	None	replace
22	[BUG]  [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  if(resultEqualsValue)    {    return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  incompatible  types	3	None	replace
23	[BUG]  [BUGGY]  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	9	None	replace
24	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	9	None	replace
25	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  if(resultEqualsValue)  {  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  }	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	9	None	replace
26	[BUG]  [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	9	None	replace
27	[BUG]  [BUGGY]  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  result);	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	9	None	replace
28	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	9	None	replace
29	[BUG]  [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  missing  return  statement  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);	      	non-compiled	[CE]  missing  return  statement	8	None	replace
30	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  result  =  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;	      	non-compiled	[CE]  cannot  find  symbol  result	8	None	replace
31	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [CE]  cannot  find  symbol  result  [FE]                          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;	      	non-compiled	[CE]  cannot  find  symbol  result	8	None	replace
32	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(value,  resultEqualsValue);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
33	[BUG]  [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  cannot  find  symbol  result  [FE]                              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  result  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  getNativeType(CHECKED_UNKNOWN_TYPE);	      	non-compiled	[CE]  cannot  find  symbol  result	8	None	replace
34	[BUG]  [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(resultEqualsValue);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  JSType  result  =  type.getRestrictedByTypeOfResult(resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  type.getRestrictedByTypeOfResult(resultEqualsValue);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
35	[BUG]  [BUGGY]  return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue  ==  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	6	None	replace
36	[BUG]  [BUGGY]  return  resultEqualsValue  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  incomparable  types:  boolean  and  <null>  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  resultEqualsValue  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	6	None	replace
37	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result!=  null?  null  :  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	6	None	replace
38	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  not  a  statement	10	None	add
39	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  cannot  find  symbol  result	10	None	add
40	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	10	None	add
41	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  unreachable  statement	10	None	add
42	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	10	None	add
43	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value));  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value));	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	10	None	add
44	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE,  resultEqualsValue);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE,  resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  getNativeType(CHECKED_UNKNOWN_TYPE,  resultEqualsValue);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	10	None	add
45	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	13	None	replace
46	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	13	None	replace
47	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	13	None	replace
48	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	13	None	replace
49	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	13	None	replace
50	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	5	None	replace
51	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	5	None	replace
52	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type,  resultEqualsValue));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	5	None	replace
53	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	5	None	replace
54	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	5	None	replace
55	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  result));  [CE]  cannot  find  symbol  result  [FE]                          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  result));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  result));	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	5	None	replace
56	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    result));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	7	None	replace
57	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  type));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    result));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	7	None	replace
58	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultequalsValue));  [CE]  cannot  find  symbol  resultequalsValue  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultequalsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultequalsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    result));    	non-compiled	[CE]  cannot  find  symbol  resultequalsValue	7	None	replace
59	[BUG]  [BUGGY]  return  this.type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  type  [FE]                          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  this.type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  this.type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    result));    	non-compiled	[CE]  cannot  find  symbol  type	7	None	replace
60	[BUG]  [BUGGY]  return  value.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  value.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  value.visit(new  RestrictByOneTypeOfResultVisitor(type,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    result));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	7	None	replace
61	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  boolean  cannot  be  dereferenced	1	None	replace
62	[BUG]  [BUGGY]  result  =  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  result  =  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	1	None	replace
63	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	1	None	replace
64	[BUG]  [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
65	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
66	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  type));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
67	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  result);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  result);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  result);	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
68	[BUG]  [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  type));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result.visit(new  RestrictByUndefinedVisitor(value,  type));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByUndefinedVisitor(value,  type));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
69	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue),  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	12	None	replace
70	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
71	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	16	None	replace
72	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  value,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	16	None	replace
73	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	16	None	replace
74	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  value));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  value));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	16	None	replace
75	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(type,  value));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    value));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	15	None	replace
76	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    value));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	15	None	replace
77	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  type));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  type));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  type));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(resultEqualsValue,    value));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	15	None	replace
78	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  boolean  cannot  be  dereferenced  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  boolean  cannot  be  dereferenced	5	None	replace
79	[BUG]  [BUGGY]  JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  typeRegistry.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
80	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  unreachable  statement	10	None	add
81	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  result  =  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  result  =  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    result  =  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  	non-compiled	[CE]  cannot  find  symbol  result	10	None	add
82	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  getNativeTypeForTypeOfResult(value);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	10	None	add
83	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	10	None	add
84	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOf(value);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOf(value);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  getNativeTypeForTypeOf(value);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	10	None	add
85	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  result  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
86	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  value));	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	1	None	replace
87	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  this);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  method  visit  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
88	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue,  result));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	16	None	replace
89	[BUG]  [BUGGY]  return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  type));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  type));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  resultEqualsValue.visit(new  RestrictByTrueTypeOfResultVisitor(value,  type));	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	9	None	replace
90	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type!=  null?  null  :  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	9	None	replace
91	[BUG]  [BUGGY]  return  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByFalseTypeOfResultVisitor(value,  resultEqualsValue));	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByFalseTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	9	None	replace
92	[BUG]  [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  not  a  statement	14	None	replace
93	[BUG]  [BUGGY]  return  value  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  value  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  value  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	14	None	replace
94	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;  }  [CE]  cannot  find  symbol  RELATIVE_UNKNOWN_TYPE  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;  }  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;  }	      	non-compiled	[CE]  cannot  find  symbol  RELATIVE_UNKNOWN_TYPE	8	None	replace
95	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }  [CE]  missing  return  statement  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }	      	non-compiled	[CE]  missing  return  statement	8	None	replace
96	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  }  [CE]  cannot  find  symbol  RESULT_UNKNOWN_TYPE  [FE]                          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  }  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RESULT_UNKNOWN_TYPE):  result;  }	      	non-compiled	[CE]  cannot  find  symbol  RESULT_UNKNOWN_TYPE	8	None	replace
97	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  [CE]  missing  return  statement  [FE]                            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }	      	non-compiled	[CE]  missing  return  statement	8	None	replace
98	[BUG]  [BUGGY]  resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [CE]  incompatible  types  [FE]                              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getNativeType(CHECKED_UNKNOWN_TYPE);	      	non-compiled	[CE]  incompatible  types	8	None	replace
99	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }  [CE]  cannot  find  symbol  RELATIVE_UNKNOWN_TYPE  [FE]                                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(RELATIVE_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }	      	non-compiled	[CE]  cannot  find  symbol  RELATIVE_UNKNOWN_TYPE	8	None	replace
100	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }  [CE]  cannot  find  symbol  result  [FE]                                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null?  getNativeType(CHECKED_UNKNOWN_TYPE):  result;  }  else  {  return  result;  }	      	non-compiled	[CE]  cannot  find  symbol  result	8	None	replace
101	[BUG]  [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  cannot  find  symbol  result  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);	  if(resultEqualsValue)    {    return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
102	[BUG]  [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(value,  resultEqualsValue);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(value,  resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue  =  getRestrictedByTypeOfResultVisitor(value,  resultEqualsValue);	  if(resultEqualsValue)    {    return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
103	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsVALue));  [CE]  cannot  find  symbol  resultEqualsVALue  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsVALue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsVALue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    result));    	non-compiled	[CE]  cannot  find  symbol  resultEqualsVALue	7	None	replace
104	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(NO_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	13	None	replace
105	[BUG]  [BUGGY]  return  value!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  value!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  value!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	  return    type!=    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	14	None	replace
106	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	16	None	replace
107	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value,  resultEqualsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(type,    value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	16	None	replace
108	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [CE]  cannot  find  symbol  result  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue);	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	13	None	replace
109	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(type,  value));	  return    result    ==    null?    getNativeType(UNKNOWN_TYPE):    new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ';'  expected	13	None	replace
110	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue,  resultEqualsValue));	  return    type.visit(new    RestrictByUndefinedVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
111	[BUG]  [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }  [CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  result;  }	      	non-compiled	[CE]  method  getNativeTypeForTypeOf  in  class  ChainableReverseAbstractInterpreter  cannot  be  applied  to  given  types;	8	None	replace
112	[BUG]  [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  [CE]  missing  return  statement  [FE]                        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  JSType  result  =  getNativeTypeForTypeOf(value);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	JSType  result  =  getNativeTypeForTypeOf(value);	      	non-compiled	[CE]  missing  return  statement	8	None	replace
113	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  type);	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue),    result);    	non-compiled	[CE]  cannot  find  symbol  result	2	None	replace
114	[BUG]  [BUGGY]  if(type  ==  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  if(type  ==  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(type  ==  null)  {  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	  return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  missing  return  statement	11	None	replace
115	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  boolean  cannot  be  dereferenced  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  boolean  cannot  be  dereferenced	5	None	replace
116	[BUG]  [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  boolean  cannot  be  dereferenced  [FE]                  AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  resultEqualsValue.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  boolean  cannot  be  dereferenced	5	None	replace
117	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultsValue));  [CE]  cannot  find  symbol  resultsValue  [FE]                    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultsValue));	  return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    result));    	non-compiled	[CE]  cannot  find  symbol  resultsValue	7	None	replace
118	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  [CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)  [FE]    AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  getNativeTypeForTypeOf(value,  resultEqualsValue);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getRestrictedByTypeOfResult(JSType,String,boolean)	10	None	add
119	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  type  =  getNativeTypeForTypeOfResult(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	10	None	add
120	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return    type!=    null?    null    :    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    JSType  result  =  getNativeTypeForTypeOf(value,  resultEqualsValue));	  	non-compiled	[CE]  ';'  expected	10	None	add
121	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue));	  if(resultEqualsValue)    {    return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  ';'  expected	3	None	replace
122	[BUG]  [BUGGY]  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	aughtExceptionHandler.handleTypeOfResult(type,  value,  resultEqualsValue);	  if(resultEqualsValue)    {    return    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	3	None	replace
123	[BUG]  [BUGGY]  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue),  resultEqualsValue);	  return    type.visit(new    RestrictByTrueTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	9	None	replace
124	[BUG]  [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  else  {  return  result;  }	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	4	None	replace
125	[BUG]  [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	  result    =    type.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  cannot  find  symbol  result	4	None	replace
126	[BUG]  [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }    [BUGGY]  result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]    new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	  return    result.visit(new    RestrictByOneTypeOfResultVisitor(value,    resultEqualsValue));    	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	1	None	replace
