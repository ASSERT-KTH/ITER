bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]    AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  cannot  find  symbol  result	1	None	replace
2	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [CE]  cannot  find  symbol  result  [FE]      AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue),  result);	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  cannot  find  symbol  result	1	None	replace
3	[BUG]  [BUGGY]  if(resultEqualsValue)  {  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CE]  missing  return  statement  [FE]        AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  if(resultEqualsValue)  {  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	if(resultEqualsValue)  {  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  missing  return  statement	1	None	replace
4	[BUG]  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	result  =  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  cannot  find  symbol  result	1	None	replace
5	[BUG]  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  boolean  cannot  be  dereferenced  [FE]            AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	resultEqualsValue.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  boolean  cannot  be  dereferenced	1	None	replace
6	[BUG]  [BUGGY]  return  result  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  return  result  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  cannot  find  symbol  result	1	None	replace
7	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  result));  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  result));  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  result));	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  cannot  find  symbol  result	1	None	replace
8	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]                  AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]    [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	  	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  missing  return  statement	1	None	replace
9	[BUG]  [BUGGY]  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated  [FE]    AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByTrueTypeOfResultVisitor(value,  resultEqualsValue));	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  ChainableReverseAbstractInterpreter.RestrictByTrueTypeOfResultVisitor  is  abstract;  cannot  be  instantiated	1	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	add	return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	compilable	  [FE]  AssertionFailedError  	1	11	replace
11	[BUG]  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type!=  null?  null  :  type.visit(new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	compilable	  [FE]  AssertionFailedError  	1	11	replace
12	[BUG]  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByUndefinedVisitor(value,  resultEqualsValue));	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
13	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  result  ==  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  ';'  expected	1	None	replace
14	[BUG]  [BUGGY]  return  type!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  return  type!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type!=  null?  getNativeType(UNKNOWN_TYPE):  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  ';'  expected	1	None	replace
15	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(resultEqualsValue,  value));	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	1	None	replace
16	[BUG]  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError  [CONTEXT]  JSType  getRestrictedByTypeOfResult(JSType  type,  String  value,  boolean  resultEqualsValue)  {  if  (type  ==  null)  {  if  (resultEqualsValue)  {  JSType  result  =  getNativeTypeForTypeOf(value);  return  result  ==  null  ?  getNativeType(CHECKED_UNKNOWN_TYPE)  :  result;  }  else  {  return  null;  }  }  [BUGGY]  return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));  [BUGGY]  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  }  [CLASS]  ChainableReverseAbstractInterpreter  1  2  RestrictByTypeOfResultVisitor  RestrictByTrueTypeOfResultVisitor  RestrictByFalseTypeOfResultVisitor  RestrictByOneTypeOfResultVisitor  [METHOD]  getRestrictedByTypeOfResult  [RETURN_TYPE]  JSType  JSType  type  String  value  boolean  resultEqualsValue  [VARIABLES]  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  result  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  	projects/Closure7/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java	0.4082482904638631	682	683	2	replace	return  type.visit(new  RestrictByOneTypeOfResultVisitor(type,  value,  resultEqualsValue));	return  type.visit(  new  RestrictByOneTypeOfResultVisitor(value,  resultEqualsValue));  	non-compiled	[CE]  constructor  RestrictByOneTypeOfResultVisitor  in  class  ChainableReverseAbstractInterpreter.RestrictByOneTypeOfResultVisitor  cannot  be  applied  to  given  types;	1	None	replace
