bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  field  =(UnsupportedDurationField)cCache.get(type);  [CE]  [FE]        AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);    [BUGGY]  field  =(UnsupportedDurationField)cCache.get(type);  [BUGGY]    }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	field  =(UnsupportedDurationField)cCache.get(type);	  field    =    cCache;    	non-compiled	[CE]  	7	None	replace
2	[BUG]  [BUGGY]  field  =  cCache.get(iType);  [CE]  [FE]          AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);    [BUGGY]  field  =  cCache.get(iType);  [BUGGY]    }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	field  =  cCache.get(iType);	  field    =    cCache.get(type);    	non-compiled	[CE]  	2	None	replace
3	[BUG]  [BUGGY]  UnsupportedDurationField  field  =  cCache.get(iType);  [CE]  [FE]        AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);    [BUGGY]  UnsupportedDurationField  field  =  cCache.get(iType);  [BUGGY]    field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	UnsupportedDurationField  field  =  cCache.get(iType);	      UnsupportedDurationField    field    =    cCache.get(type);    	non-compiled	[CE]  	4	None	replace
4	[BUG]  [BUGGY]  iType  =  type.getSuperclass();  [CE]  [FE]            AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);    [BUGGY]  iType  =  type.getSuperclass();  [BUGGY]    }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	iType  =  type.getSuperclass();	      	non-compiled	[CE]  	3	None	replace
5	[BUG]  [BUGGY]  field  =  new  HashMap  <  DurationFieldType,  UnsupportedDurationField>(4);  [CE]  [FE]        AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);    [BUGGY]  field  =  new  HashMap  <  DurationFieldType,  UnsupportedDurationField>(4);  [BUGGY]    }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	field  =  new  HashMap  <  DurationFieldType,  UnsupportedDurationField>(4);	  field    =    new    HashMap    <    DurationFieldType,    UnsupportedDurationField>(7);    	non-compiled	[CE]  	1	None	replace
6	[BUG]  [BUGGY]  field  =  new  HashMap  <  DurationFieldType,  UnsupportedDurationField>(2);  [CE]  [FE]          AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);    [BUGGY]  field  =  new  HashMap  <  DurationFieldType,  UnsupportedDurationField>(2);  [BUGGY]    }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	field  =  new  HashMap  <  DurationFieldType,  UnsupportedDurationField>(2);	  field    =    new    HashMap    <    DurationFieldType,    UnsupportedDurationField>(7);    	non-compiled	[CE]  	1	None	replace
7	[BUG]  [BUGGY]  if(field!=  null)  {  cCache.put(type,  field);  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);    [BUGGY]  if(field!=  null)  {  cCache.put(type,  field);  }  [BUGGY]    field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	if(field!=  null)  {  cCache.put(type,  field);  }	      cCache.put(type,    field);    	non-compiled	[CE]  	5	None	replace
8	[BUG]  [BUGGY]  field  =  new  HashMap  <  DurationFieldType,  UnsupportedDurationField>(8);  [CE]  [FE]        AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);    [BUGGY]  field  =  new  HashMap  <  DurationFieldType,  UnsupportedDurationField>(8);  [BUGGY]    }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	field  =  new  HashMap  <  DurationFieldType,  UnsupportedDurationField>(8);	  field    =    cCache;    	non-compiled	[CE]  	7	None	replace
9	[BUG]  [BUGGY]  if(field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);    [BUGGY]  if(field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  [BUGGY]    }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	if(field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }	      	non-compiled	[CE]  	3	None	replace
10	[BUG]  [BUGGY]  if(field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  else  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);    [BUGGY]  if(field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  else  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  [BUGGY]    }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	if(field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  else  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }	      	non-compiled	[CE]  	3	None	replace
11	[BUG]  [BUGGY]  if(type  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  [CE]  [FE]            AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);    [BUGGY]  if(type  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  [BUGGY]    }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	if(type  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }	      	non-compiled	[CE]  	3	None	replace
12	[BUG]  [BUGGY]  if(field  ==  null)  {  cCache.put(type,  field);  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);    [BUGGY]  if(field  ==  null)  {  cCache.put(type,  field);  }  [BUGGY]    field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	if(field  ==  null)  {  cCache.put(type,  field);  }	      cCache.put(type,    field);    	non-compiled	[CE]  	5	None	replace
