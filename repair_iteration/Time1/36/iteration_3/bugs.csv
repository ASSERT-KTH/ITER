bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  cast(cCache,  field);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);      [BUGGY]  cast(cCache,  field);  [BUGGY]      field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	cast(cCache,  field);	  if(field    ==    null)    {    cCache.put(type,    field);    }    	non-compiled	[CE]  	12	None	replace
2	[BUG]  [BUGGY]  [Delete]  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);      [BUGGY]  [Delete]  [BUGGY]      field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	[Delete]	  if(field    ==    null)    {    cCache.put(type,    field);    }    	non-compiled	[CE]  	12	None	replace
3	[BUG]  [BUGGY]  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);      [BUGGY]  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  [BUGGY]      }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);	  if(field    ==    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    	non-compiled	[CE]  	9	None	replace
4	[BUG]  [BUGGY]  field  =  new  UnsupportedDurationField(type,  cCache.get(type));  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);      [BUGGY]  field  =  new  UnsupportedDurationField(type,  cCache.get(type));  [BUGGY]      }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	field  =  new  UnsupportedDurationField(type,  cCache.get(type));	  if(field    ==    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    	non-compiled	[CE]  	9	None	replace
5	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);      [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]      }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	aughtExceptionHandler.handleMissingException( " ");	  if(type    ==    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    	non-compiled	[CE]  	11	None	replace
6	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedDuration(field,  type);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);      [BUGGY]  aughtExceptionHandler.handleUnsupportedDuration(field,  type);  [BUGGY]      }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	aughtExceptionHandler.handleUnsupportedDuration(field,  type);	  if(field    ==    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    else    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    	non-compiled	[CE]  	10	None	replace
7	[BUG]  [BUGGY]  iType  =  field.getSuperclass();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);      [BUGGY]  iType  =  field.getSuperclass();  [BUGGY]      }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	iType  =  field.getSuperclass();	  iType    =    type.getSuperclass();    	non-compiled	[CE]  	4	None	replace
8	[BUG]  [BUGGY]  field  =(UnsupportedDurationField)cCache.get(iType);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);      [BUGGY]  field  =(UnsupportedDurationField)cCache.get(iType);  [BUGGY]      }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	field  =(UnsupportedDurationField)cCache.get(iType);	  field    =(UnsupportedDurationField)cCache.get(type);    	non-compiled	[CE]  	1	None	replace
9	[BUG]  [BUGGY]  cast(cCache,  type);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);      [BUGGY]  cast(cCache,  type);  [BUGGY]      field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	cast(cCache,  type);	  if(field    ==    null)    {    cCache.put(type,    field);    }    	non-compiled	[CE]  	12	None	replace
10	[BUG]  [BUGGY]  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);      [BUGGY]  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field;  [BUGGY]      }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field;	  if(field    ==    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    	non-compiled	[CE]  	9	None	replace
11	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedDurationField(cCache,  field);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);      [BUGGY]  aughtExceptionHandler.handleUnsupportedDurationField(cCache,  field);  [BUGGY]      field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	aughtExceptionHandler.handleUnsupportedDurationField(cCache,  field);	  if(field!=    null)    {    cCache.put(type,    field);    }    	non-compiled	[CE]  	7	None	replace
12	[BUG]  [BUGGY]  cast(field,  cCache.get(type));  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);      [BUGGY]  cast(field,  cCache.get(type));  [BUGGY]      }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	cast(field,  cCache.get(type));	  if(field    ==    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    else    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    	non-compiled	[CE]  	10	None	replace
13	[BUG]  [BUGGY]  cast(field,  cCache);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);      [BUGGY]  cast(field,  cCache);  [BUGGY]      }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	51	51	1	replace	cast(field,  cCache);	  if(field    ==    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    	non-compiled	[CE]  	9	None	replace
