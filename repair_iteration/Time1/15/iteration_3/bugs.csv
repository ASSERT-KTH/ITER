bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  compare  =  iFieldIndex.compareTo(loopUnitField);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  int  compare  =  iFieldIndex.compareTo(loopUnitField);  [BUGGY]      if  (compare  <  0)  {  throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	int  compare  =  iFieldIndex.compareTo(loopUnitField);	  int    compare    =    loopUnitField.compareTo(lastUnitField);    	non-compiled	[CE]  	5	None	replace
2	[BUG]  [BUGGY]  int[]  values  =  loopUnitField.getValues(compare);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  int[]  values  =  loopUnitField.getValues(compare);  [BUGGY]      throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	int[]  values  =  loopUnitField.getValues(compare);	  int[]    values    =    loopUnitField.getValues();    	non-compiled	[CE]  	11	None	replace
3	[BUG]  [BUGGY]  if(compare  <  0  ||(compare  ==  0  &&  loopUnitField.getDurationType()  ==  null))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  if(compare  <  0  ||(compare  ==  0  &&  loopUnitField.getDurationType()  ==  null))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	if(compare  <  0  ||(compare  ==  0  &&  loopUnitField.getDurationType()  ==  null))  {	  if(compare    <    0    ||(compare    ==    0    &&    loopUnitField.getRangeDurationType()    ==    null))    {    	non-compiled	[CE]  	13	None	replace
4	[BUG]  [BUGGY]  int[]  types  =  loopUnitField.getTypes(iValues);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  int[]  types  =  loopUnitField.getTypes(iValues);  [BUGGY]      if  (compare  <  0)  {  throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	int[]  types  =  loopUnitField.getTypes(iValues);	  int[]    types    =    loopUnitField.getTypes(iChronology);    	non-compiled	[CE]  	7	None	replace
5	[BUG]  [BUGGY]  int[]  types  =  loopUnitField.getTypes(compare);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  int[]  types  =  loopUnitField.getTypes(compare);  [BUGGY]      if  (compare  <  0)  {  throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	int[]  types  =  loopUnitField.getTypes(compare);	  int[]    types    =    loopUnitField.getTypes(iChronology);    	non-compiled	[CE]  	7	None	replace
6	[BUG]  [BUGGY]  if(compare  <  0  ||(compare  >=  0  &&  loopUnitField.getDurationType()!=  null))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  if(compare  <  0  ||(compare  >=  0  &&  loopUnitField.getDurationType()!=  null))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	if(compare  <  0  ||(compare  >=  0  &&  loopUnitField.getDurationType()!=  null))  {	  if(compare    <    0    ||(compare    >=    0    &&    loopUnitField.getDurationType()    ==    null))    {    	non-compiled	[CE]  	8	None	replace
7	[BUG]  [BUGGY]  int  compare  =  loopUnitField.compareTo(i);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  int  compare  =  loopUnitField.compareTo(i);  [BUGGY]      if  (compare  <  0)  {  throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	int  compare  =  loopUnitField.compareTo(i);	  int    compare    =    iField.compareTo(loopUnitField);    	non-compiled	[CE]  	6	None	replace
8	[BUG]  [BUGGY]  if  (compare  <  0  ||  compare  ==  types[i  -  1].getName())  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  if  (compare  <  0  ||  compare  ==  types[i  -  1].getName())  {  [BUGGY]      throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	if  (compare  <  0  ||  compare  ==  types[i  -  1].getName())  {	  if    (compare    <    0    ||    compare    >=    types[i    -    1].getName())    {    	non-compiled	[CE]  	1	None	replace
9	[BUG]  [BUGGY]  int[]  types  =  loopUnitField.getTypes(iChronology,  compare);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  int[]  types  =  loopUnitField.getTypes(iChronology,  compare);  [BUGGY]      if  (compare  <  0)  {  throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	int[]  types  =  loopUnitField.getTypes(iChronology,  compare);	  int[]    types    =    loopUnitField.getTypes(iChronology);    	non-compiled	[CE]  	7	None	replace
10	[BUG]  [BUGGY]  if(compare  <  0  ||(compare!=  0  &&  loopUnitField.getRangeDurationType()  ==  null))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  if(compare  <  0  ||(compare!=  0  &&  loopUnitField.getRangeDurationType()  ==  null))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	if(compare  <  0  ||(compare!=  0  &&  loopUnitField.getRangeDurationType()  ==  null))  {	  if(compare    <    0    ||(compare    >=    0    &&    loopUnitField.getDurationType()    ==    null))    {    	non-compiled	[CE]  	8	None	replace
11	[BUG]  [BUGGY]  if(compare  <  0  ||(compare!=  0  &&  loopUnitField.getRangeDurationType()!=  null))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  if(compare  <  0  ||(compare!=  0  &&  loopUnitField.getRangeDurationType()!=  null))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	if(compare  <  0  ||(compare!=  0  &&  loopUnitField.getRangeDurationType()!=  null))  {	  if(compare    <    0    ||(compare!=    0    &&    loopUnitField.getDurationType()!=    null))    {    	non-compiled	[CE]  	12	None	replace
12	[BUG]  [BUGGY]  int  compare  =  lastUnitField.compareTo(loopUnitField,  values);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  int  compare  =  lastUnitField.compareTo(loopUnitField,  values);  [BUGGY]      if  (compare  <  0)  {  throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	int  compare  =  lastUnitField.compareTo(loopUnitField,  values);	  int    compare    =    loopUnitField.compareTo(lastUnitField);    	non-compiled	[CE]  	5	None	replace
13	[BUG]  [BUGGY]  int  compare  =  this.lastUnitField.compareTo(loopUnitField);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  int  compare  =  this.lastUnitField.compareTo(loopUnitField);  [BUGGY]      if  (compare  <  0)  {  throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	int  compare  =  this.lastUnitField.compareTo(loopUnitField);	  int    compare    =    loopUnitField.compareTo(lastUnitField);    	non-compiled	[CE]  	5	None	replace
14	[BUG]  [BUGGY]  if(compare  <  =  0  ||(compare  >=  types[i  -  1].getName()))  {  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (types[i]  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  null:  index       "  +  i);  }  }  DurationField  lastUnitField  =  null;  for  (int  i  =  0;  i  <  types.length;  i++)  {  DateTimeFieldType  loopType  =  types[i];  DurationField  loopUnitField  =  loopType.getDurationType().getField(iChronology);  if  (i  >  0)  {  int  compare  =  lastUnitField.compareTo(loopUnitField);      [BUGGY]  if(compare  <  =  0  ||(compare  >=  types[i  -  1].getName()))  {  [BUGGY]      throw  new  IllegalArgumentException(     "Types  array  must  be  in  order  largest-smallest:       "  +  types[i  -  1].getName()  +       "  <       "  +  loopType.getName());  }  else  if  (compare  ==  0)  {  if  (types[i  -  1].getRangeDurationType()  ==  null)  {  if  (loopType.getRangeDurationType()  ==  null)  {  throw  new  IllegalArgumentException(     "Types  array  must  not  contain  duplicate:       "  +  types[i  -  1].getName()  +       "  and       "  +  loopType.getName());  }  }  else  {  if  (loopType.getRangeDurationType()  ==  null)  {  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.4472135954999579	218	218	1	replace	if(compare  <  =  0  ||(compare  >=  types[i  -  1].getName()))  {	  if(compare    <    =    0)    {    	non-compiled	[CE]  	14	None	replace
