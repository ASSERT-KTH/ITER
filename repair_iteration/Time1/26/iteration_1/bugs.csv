bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  chronology  =  DateTimeUtils.getChronology(types).withUTC();  [CE]  [FE]    AssertionFailedError  [CONTEXT]  public  Partial(DateTimeFieldType[]  types,  int[]  values,  Chronology  chronology)  {  super();  [BUGGY]  chronology  =  DateTimeUtils.getChronology(types).withUTC();  [BUGGY]  iChronology  =  chronology;  if  (types  ==  null)  {  throw  new  IllegalArgumentException( "Types  array  must  not  be  null ");  }  if  (values  ==  null)  {  throw  new  IllegalArgumentException( "Values  array  must  not  be  null ");  }  if  (values.length  !=  types.length)  {  throw  new  IllegalArgumentException( "Values  array  must  be  the  same  length  as  the  types  array ");  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.31622776601683794	191	191	1	replace	chronology  =  DateTimeUtils.getChronology(types).withUTC();	chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  	non-compiled	[CE]  	51	None	replace
2	[BUG]  [BUGGY]    [CE]  [FE]      AssertionFailedError  [CONTEXT]  public  Partial(DateTimeFieldType[]  types,  int[]  values,  Chronology  chronology)  {  super();  [BUGGY]    [BUGGY]  iChronology  =  chronology;  if  (types  ==  null)  {  throw  new  IllegalArgumentException( "Types  array  must  not  be  null ");  }  if  (values  ==  null)  {  throw  new  IllegalArgumentException( "Values  array  must  not  be  null ");  }  if  (values.length  !=  types.length)  {  throw  new  IllegalArgumentException( "Values  array  must  be  the  same  length  as  the  types  array ");  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.31622776601683794	191	191	1	replace	  	chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  	non-compiled	[CE]  	51	None	replace
3	[BUG]  [BUGGY]    iPartial  =  DateTimeUtils.getChronology(chronology).withUTC();  [CE]  [FE]    AssertionFailedError  [CONTEXT]  public  Partial(DateTimeFieldType[]  types,  int[]  values,  Chronology  chronology)  {  super();  [BUGGY]    iPartial  =  DateTimeUtils.getChronology(chronology).withUTC();  [BUGGY]  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iChronology  =  chronology;  if  (types  ==  null)  {  throw  new  IllegalArgumentException( "Types  array  must  not  be  null ");  }  if  (values  ==  null)  {  throw  new  IllegalArgumentException( "Values  array  must  not  be  null ");  }  if  (values.length  !=  types.length)  {  throw  new  IllegalArgumentException( "Values  array  must  be  the  same  length  as  the  types  array ");  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.31622776601683794	191	191	1	replace	    iPartial  =  DateTimeUtils.getChronology(chronology).withUTC();		non-compiled	[CE]  	52	None	add
4	[BUG]  [BUGGY]    iPartial  =  DateTimeUtils.getChronology(types,  values);  [CE]  [FE]      AssertionFailedError  [CONTEXT]  public  Partial(DateTimeFieldType[]  types,  int[]  values,  Chronology  chronology)  {  super();  [BUGGY]    iPartial  =  DateTimeUtils.getChronology(types,  values);  [BUGGY]  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iChronology  =  chronology;  if  (types  ==  null)  {  throw  new  IllegalArgumentException( "Types  array  must  not  be  null ");  }  if  (values  ==  null)  {  throw  new  IllegalArgumentException( "Values  array  must  not  be  null ");  }  if  (values.length  !=  types.length)  {  throw  new  IllegalArgumentException( "Values  array  must  be  the  same  length  as  the  types  array ");  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.31622776601683794	191	191	1	replace	    iPartial  =  DateTimeUtils.getChronology(types,  values);		non-compiled	[CE]  	52	None	add
5	[BUG]  [BUGGY]    iPartial  =  DateTimeUtils.getChronology(chronology);  [CE]  [FE]        AssertionFailedError  [CONTEXT]  public  Partial(DateTimeFieldType[]  types,  int[]  values,  Chronology  chronology)  {  super();  [BUGGY]    iPartial  =  DateTimeUtils.getChronology(chronology);  [BUGGY]  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iChronology  =  chronology;  if  (types  ==  null)  {  throw  new  IllegalArgumentException( "Types  array  must  not  be  null ");  }  if  (values  ==  null)  {  throw  new  IllegalArgumentException( "Values  array  must  not  be  null ");  }  if  (values.length  !=  types.length)  {  throw  new  IllegalArgumentException( "Values  array  must  be  the  same  length  as  the  types  array ");  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.31622776601683794	191	191	1	replace	    iPartial  =  DateTimeUtils.getChronology(chronology);		non-compiled	[CE]  	52	None	add
6	[BUG]  [BUGGY]  Chronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  [CE]  [FE]    AssertionFailedError  [CONTEXT]  public  Partial(DateTimeFieldType[]  types,  int[]  values,  Chronology  chronology)  {  super();  [BUGGY]  Chronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  [BUGGY]  iChronology  =  chronology;  if  (types  ==  null)  {  throw  new  IllegalArgumentException( "Types  array  must  not  be  null ");  }  if  (values  ==  null)  {  throw  new  IllegalArgumentException( "Values  array  must  not  be  null ");  }  if  (values.length  !=  types.length)  {  throw  new  IllegalArgumentException( "Values  array  must  be  the  same  length  as  the  types  array ");  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.31622776601683794	191	191	1	replace	Chronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();	chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  	non-compiled	[CE]  	51	None	replace
