bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  UnsupportedDurationField  cCache  =  new  HashMap  <  DurationFieldType,  UnsupportedDurationField>(1);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {      [BUGGY]  UnsupportedDurationField  cCache  =  new  HashMap  <  DurationFieldType,  UnsupportedDurationField>(1);  [BUGGY]      field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	53	53	1	replace	UnsupportedDurationField  cCache  =  new  HashMap  <  DurationFieldType,  UnsupportedDurationField>(1);	  UnsupportedDurationField    cCache    =    new    HashMap    <    DurationFieldType,    UnsupportedDurationField>(8);    	non-compiled	[CE]  	7	None	replace
2	[BUG]  [BUGGY]  iType  =  field.getSuperclass();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {      [BUGGY]  iType  =  field.getSuperclass();  [BUGGY]      }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	53	53	1	replace	iType  =  field.getSuperclass();	  iType    =    type.getSuperclass();    	non-compiled	[CE]  	1	None	replace
3	[BUG]  [BUGGY]  cast(cCache,  field);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {      [BUGGY]  cast(cCache,  field);  [BUGGY]      field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	53	53	1	replace	cast(cCache,  field);	  if(field!=    null)    {    cCache.put(type,    field);    }    else    {    return    new    HashMap    <    DurationFieldType,    UnsupportedDurationField>(7);    }    	non-compiled	[CE]  	10	None	replace
4	[BUG]  [BUGGY]  FieldUtils.checkState(field.getType()  ==  type,  cCache);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {      [BUGGY]  FieldUtils.checkState(field.getType()  ==  type,  cCache);  [BUGGY]      }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	53	53	1	replace	FieldUtils.checkState(field.getType()  ==  type,  cCache);	  FieldUtils.checkState(field.getType()    ==    type);    	non-compiled	[CE]  	9	None	replace
5	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedDurationField(type,  field);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {      [BUGGY]  aughtExceptionHandler.handleUnsupportedDurationField(type,  field);  [BUGGY]      field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	53	53	1	replace	aughtExceptionHandler.handleUnsupportedDurationField(type,  field);	  if(field!=    null)    {    cCache.put(type,    field);    }    else    {    return    new    HashMap    <    DurationFieldType,    UnsupportedDurationField>(7);    }    	non-compiled	[CE]  	10	None	replace
6	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {      [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]      field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	53	53	1	replace	aughtExceptionHandler.handleMissingException( " ");	  if(field!=    null)    {    cCache.put(type,    field);    }    else    {    return    new    HashMap    <    DurationFieldType,    UnsupportedDurationField>(7);    }    	non-compiled	[CE]  	10	None	replace
7	[BUG]  [BUGGY]  cCache.put(type,  field  +  7);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {      [BUGGY]  cCache.put(type,  field  +  7);  [BUGGY]      field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	53	53	1	replace	cCache.put(type,  field  +  7);	  cCache.put(type,    field    +    1);    	non-compiled	[CE]  	3	None	replace
8	[BUG]  [BUGGY]  UnsupportedDurationField  cCache  =(UnsupportedDurationField)cCache.get(field  +  1);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {      [BUGGY]  UnsupportedDurationField  cCache  =(UnsupportedDurationField)cCache.get(field  +  1);  [BUGGY]      field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	53	53	1	replace	UnsupportedDurationField  cCache  =(UnsupportedDurationField)cCache.get(field  +  1);	  UnsupportedDurationField    cCache    =(UnsupportedDurationField)cCache.get(field);    	non-compiled	[CE]  	8	None	replace
9	[BUG]  [BUGGY]  UnsupportedDurationField  cCache  =(UnsupportedDurationFieldType)cCache.get(field  +  1);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {      [BUGGY]  UnsupportedDurationField  cCache  =(UnsupportedDurationFieldType)cCache.get(field  +  1);  [BUGGY]      field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	53	53	1	replace	UnsupportedDurationField  cCache  =(UnsupportedDurationFieldType)cCache.get(field  +  1);	  UnsupportedDurationField    cCache    =(UnsupportedDurationFieldType)cCache.get(field);    	non-compiled	[CE]  	6	None	replace
10	[BUG]  [BUGGY]  [Delete]  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {      [BUGGY]  [Delete]  [BUGGY]      field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	53	53	1	replace	[Delete]	  if(field!=    null)    {    cCache.put(type,    field);    }    else    {    return    new    HashMap    <    DurationFieldType,    UnsupportedDurationField>(7);    }    	non-compiled	[CE]  	10	None	replace
