bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  FieldUtils.safeMultiply(field,  type,  cCache);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  FieldUtils.safeMultiply(field,  type,  cCache);  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	FieldUtils.safeMultiply(field,  type,  cCache);	  FieldUtils.safeMultiply(field,    iType,    cCache);    	non-compiled	[CE]  	14	None	replace
2	[BUG]  [BUGGY]  iType  =  field.getImplicitType();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  iType  =  field.getImplicitType();  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getImplicitType();	  iType    =    field.getImplicitPrototype();    	non-compiled	[CE]  	4	None	replace
3	[BUG]  [BUGGY]  iType  =  field.getImmediateParentType(type);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  iType  =  field.getImmediateParentType(type);  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getImmediateParentType(type);	  iType    =    field.getImmediateParentType();    	non-compiled	[CE]  	8	None	replace
4	[BUG]  [BUGGY]  iType  =  field.getType(1);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  iType  =  field.getType(1);  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getType(1);	  iType    =    field.getType(type);    	non-compiled	[CE]  	13	None	replace
5	[BUG]  [BUGGY]  FieldUtils.safeMultiply(field,  type,  iType);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  FieldUtils.safeMultiply(field,  type,  iType);  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	FieldUtils.safeMultiply(field,  type,  iType);	  FieldUtils.safeMultiply(field,    iType,    type);    	non-compiled	[CE]  	3	None	replace
6	[BUG]  [BUGGY]  iType  =  field.getInstance(type,  false);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  iType  =  field.getInstance(type,  false);  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getInstance(type,  false);	  iType    =    field.getInstance(type);    	non-compiled	[CE]  	7	None	replace
7	[BUG]  [BUGGY]  FieldUtils.safeAdd(field,  iType);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  FieldUtils.safeAdd(field,  iType);  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	FieldUtils.safeAdd(field,  iType);	  FieldUtils.safeMultiply(field,    type);    	non-compiled	[CE]  	2	None	replace
8	[BUG]  [BUGGY]  iType  =  field.getUnsupportedDurationField(0);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  iType  =  field.getUnsupportedDurationField(0);  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getUnsupportedDurationField(0);	  iType    =    field.getUnsupportedDurationField(type);    	non-compiled	[CE]  	11	None	replace
9	[BUG]  [BUGGY]  iType  =  field.getImplicitDeclaration();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  iType  =  field.getImplicitDeclaration();  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getImplicitDeclaration();	  iType    =    field.getImplicitPrototype();    	non-compiled	[CE]  	4	None	replace
10	[BUG]  [BUGGY]  FieldUtils.safeMultiply(field,  cCache);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  FieldUtils.safeMultiply(field,  cCache);  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	FieldUtils.safeMultiply(field,  cCache);	  FieldUtils.safeMultiply(field,    iType,    cCache);    	non-compiled	[CE]  	14	None	replace
11	[BUG]  [BUGGY]  iType  =  field.getDeclaredType(type);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  iType  =  field.getDeclaredType(type);  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getDeclaredType(type);	  iType    =    field.getDeclaredType();    	non-compiled	[CE]  	1	None	replace
12	[BUG]  [BUGGY]  iType  =  field.getField(this);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  iType  =  field.getField(this);  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getField(this);	  iType    =    field.getField(type);    	non-compiled	[CE]  	6	None	replace
13	[BUG]  [BUGGY]  iType  =  field.getImplicitReturnType();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  iType  =  field.getImplicitReturnType();  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getImplicitReturnType();	  iType    =    field.getImplicitPrototype();    	non-compiled	[CE]  	4	None	replace
14	[BUG]  [BUGGY]  FieldUtils.safeMultiply(field,  cCache,  iType);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);      [BUGGY]  FieldUtils.safeMultiply(field,  cCache,  iType);  [BUGGY]      cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	FieldUtils.safeMultiply(field,  cCache,  iType);	  FieldUtils.safeMultiply(field,    iType,    cCache);    	non-compiled	[CE]  	14	None	replace
