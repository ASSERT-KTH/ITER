bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  iType  =  field.getDeclaredType();  [CE]  [FE]        AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  iType  =  field.getDeclaredType();  [BUGGY]    cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getDeclaredType();	      iType    =    field.getType();    	non-compiled	[CE]  	5	None	replace
2	[BUG]  [BUGGY]  FieldUtils.safeMultiply(field,  type);  [CE]  [FE]        AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  FieldUtils.safeMultiply(field,  type);  [BUGGY]    cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	FieldUtils.safeMultiply(field,  type);	      FieldUtils.safeMultiply(field,    iType);    	non-compiled	[CE]  	1	None	replace
3	[BUG]  [BUGGY]  FieldUtils.safeMultiply(field,  iType,  type);  [CE]  [FE]          AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  FieldUtils.safeMultiply(field,  iType,  type);  [BUGGY]    cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	FieldUtils.safeMultiply(field,  iType,  type);	      FieldUtils.safeMultiply(field,    iType);    	non-compiled	[CE]  	1	None	replace
4	[BUG]  [BUGGY]  iType  =  field.getImplicitPrototype();  [CE]  [FE]        AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  iType  =  field.getImplicitPrototype();  [BUGGY]    cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getImplicitPrototype();	      iType    =    type.getImplicitPrototype();    	non-compiled	[CE]  	7	None	replace
5	[BUG]  [BUGGY]  FieldUtils.safeMultiply(field,  0L);  [CE]  [FE]          AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  FieldUtils.safeMultiply(field,  0L);  [BUGGY]    cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	FieldUtils.safeMultiply(field,  0L);	      FieldUtils.safeMultiply(field,    0);    	non-compiled	[CE]  	6	None	replace
6	[BUG]  [BUGGY]  iType  =  field.getField(type);  [CE]  [FE]          AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  iType  =  field.getField(type);  [BUGGY]    cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getField(type);	      iType    =    field.getField(iType);    	non-compiled	[CE]  	8	None	replace
7	[BUG]  [BUGGY]  iType  =  field.getInstance(type);  [CE]  [FE]            AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  iType  =  field.getInstance(type);  [BUGGY]    cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getInstance(type);	      iType    =    field.getField(iType);    	non-compiled	[CE]  	8	None	replace
8	[BUG]  [BUGGY]  iType  =  field.getImmediateParentType();  [CE]  [FE]            AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  iType  =  field.getImmediateParentType();  [BUGGY]    cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getImmediateParentType();	      iType    =    type.getImmediateParentType();    	non-compiled	[CE]  	3	None	replace
9	[BUG]  [BUGGY]  iType  =  field.getSuperclass();  [CE]  [FE]          AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  iType  =  field.getSuperclass();  [BUGGY]    cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getSuperclass();	      iType    =    type.getSuperclass();    	non-compiled	[CE]  	2	None	replace
10	[BUG]  [BUGGY]  cCache.put(field,  field);  [CE]  [FE]        AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  cCache.put(field,  field);  [BUGGY]    }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	cCache.put(field,  field);	  cCache.put(field,    type);    	non-compiled	[CE]  	4	None	replace
11	[BUG]  [BUGGY]  iType  =  field.getUnsupportedDurationField(type);  [CE]  [FE]          AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  iType  =  field.getUnsupportedDurationField(type);  [BUGGY]    cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getUnsupportedDurationField(type);	      iType    =    field.getField(iType);    	non-compiled	[CE]  	8	None	replace
12	[BUG]  [BUGGY]  iType  =  type.getImmediateParentType(field);  [CE]  [FE]            AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  iType  =  type.getImmediateParentType(field);  [BUGGY]    cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  type.getImmediateParentType(field);	      iType    =    type.getImmediateParentType();    	non-compiled	[CE]  	3	None	replace
13	[BUG]  [BUGGY]  iType  =  field.getType(type);  [CE]  [FE]        AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  iType  =  field.getType(type);  [BUGGY]    cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	iType  =  field.getType(type);	      iType    =    field.getType();    	non-compiled	[CE]  	5	None	replace
14	[BUG]  [BUGGY]  FieldUtils.safeMultiply(field,  iType,  cCache);  [CE]  [FE]        AssertionFailedError    [CONTEXT]    public  static  synchronized  UnsupportedDurationField  getInstance(DurationFieldType  type)  {  UnsupportedDurationField  field;  if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);    [BUGGY]  FieldUtils.safeMultiply(field,  iType,  cCache);  [BUGGY]    cCache.put(type,  field);  }  return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	57	57	1	replace	FieldUtils.safeMultiply(field,  iType,  cCache);	      FieldUtils.safeMultiply(field,    iType);    	non-compiled	[CE]  	1	None	replace
