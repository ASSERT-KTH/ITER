bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  FieldUtils.safeMultiply(field,  type);  [CE]  [FE]          AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  FieldUtils.safeMultiply(field,  type);  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	FieldUtils.safeMultiply(field,  type);	      FieldUtils.safeMultiply(field,    iType);    	non-compiled	[CE]  	9	None	replace
2	[BUG]  [BUGGY]  FieldUtils.safeMultiply(field,  iType,  type);  [CE]  [FE]            AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  FieldUtils.safeMultiply(field,  iType,  type);  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	FieldUtils.safeMultiply(field,  iType,  type);	      FieldUtils.safeMultiply(field,    iType);    	non-compiled	[CE]  	9	None	replace
3	[BUG]  [BUGGY]  iType  =(iType  ==  null)?  null  :  iType.getRawClass();  [CE]  [FE]        AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  iType  =(iType  ==  null)?  null  :  iType.getRawClass();  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	iType  =(iType  ==  null)?  null  :  iType.getRawClass();	      iType    =(iType    ==    null)?    null    :    iType.getValue();    	non-compiled	[CE]  	1	None	replace
4	[BUG]  [BUGGY]  return  field  ==  null?  field  :  new  UnsupportedDurationField(field);  [CE]  [FE]        AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  return  field  ==  null?  field  :  new  UnsupportedDurationField(field);  [BUGGY]    }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	return  field  ==  null?  field  :  new  UnsupportedDurationField(field);	  return    field!=    null?    field    :    new    UnsupportedDurationField(field);    	non-compiled	[CE]  	6	None	replace
5	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  [FE]          AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	aughtExceptionHandler.handleMissingException( " ");	      if(field!=    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	12	None	replace
6	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnsupportedDurationException( " ");  [CE]  [FE]            AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  aughtExceptionHandler.throwAsUnsupportedDurationException( " ");  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	aughtExceptionHandler.throwAsUnsupportedDurationException( " ");	      if(field!=    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	12	None	replace
7	[BUG]  [BUGGY]  FieldUtils.validate(cCache,  field);  [CE]  [FE]            AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  FieldUtils.validate(cCache,  field);  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	FieldUtils.validate(cCache,  field);	      FieldUtils.validate(field,    cCache);    	non-compiled	[CE]  	10	None	replace
8	[BUG]  [BUGGY]  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  [CE]  [FE]        AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);	      if(field!=    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    	non-compiled	[CE]  	11	None	replace
9	[BUG]  [BUGGY]  field  =  new  UnsupportedDurationField(type,  cCache.get(type));  [CE]  [FE]          AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  field  =  new  UnsupportedDurationField(type,  cCache.get(type));  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  new  UnsupportedDurationField(type,  cCache.get(type));	      if(field!=    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    	non-compiled	[CE]  	11	None	replace
10	[BUG]  [BUGGY]  return  field  ==  null?  field  :  new  UnsupportedDurationField(field.getType());  [CE]  [FE]          AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  return  field  ==  null?  field  :  new  UnsupportedDurationField(field.getType());  [BUGGY]    }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	return  field  ==  null?  field  :  new  UnsupportedDurationField(field.getType());	  return    field!=    null?    field    :    new    UnsupportedDurationField(field.getType());    	non-compiled	[CE]  	7	None	replace
11	[BUG]  [BUGGY]  return  field  ==  null?  field  :  UnsupportedDurationField.UNSUPPORTED;  [CE]  [FE]        AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  return  field  ==  null?  field  :  UnsupportedDurationField.UNSUPPORTED;  [BUGGY]    }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	return  field  ==  null?  field  :  UnsupportedDurationField.UNSUPPORTED;	  return    field!=    null?    field    :    UnsupportedDurationField.UNSUPPORTED;    	non-compiled	[CE]  	14	None	replace
12	[BUG]  [BUGGY]  return  field  ==  null?  field  :  new  UnsupportedDurationField(type);  [CE]  [FE]          AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  return  field  ==  null?  field  :  new  UnsupportedDurationField(type);  [BUGGY]    }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	return  field  ==  null?  field  :  new  UnsupportedDurationField(type);	  return    field!=    null?    field    :    new    UnsupportedDurationField(type);    	non-compiled	[CE]  	15	None	replace
13	[BUG]  [BUGGY]  return  field  ==  null?  field  :  new  UnsupportedDurationField(type,  iType);  [CE]  [FE]            AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  return  field  ==  null?  field  :  new  UnsupportedDurationField(type,  iType);  [BUGGY]    }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	return  field  ==  null?  field  :  new  UnsupportedDurationField(type,  iType);	  return    field!=    null?    field    :    new    UnsupportedDurationField(type);    	non-compiled	[CE]  	15	None	replace
14	[BUG]  [BUGGY]  field  =  new  UnsupportedDurationField(type);  [CE]  [FE]            AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  field  =  new  UnsupportedDurationField(type);  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  new  UnsupportedDurationField(type);	      if(field!=    null)    {    if(field.getType()    ==    Token.FUNCTION)    {    field    =    new    UnsupportedDurationField(type);    }    	non-compiled	[CE]  	13	None	replace
15	[BUG]  [BUGGY]  aughtExceptionHandler.handle(getInstance(type,  field));  [CE]  [FE]          AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  aughtExceptionHandler.handle(getInstance(type,  field));  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	aughtExceptionHandler.handle(getInstance(type,  field));	      if(field!=    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	12	None	replace
16	[BUG]  [BUGGY]  iType  =(iType  ==  null)?  null  :  iType.getRawType();  [CE]  [FE]        AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  iType  =(iType  ==  null)?  null  :  iType.getRawType();  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	iType  =(iType  ==  null)?  null  :  iType.getRawType();	      iType    =(iType    ==    null)?    null    :    iType.getValue();    	non-compiled	[CE]  	1	None	replace
17	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedDurationField(field,  type);  [CE]  [FE]            AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  aughtExceptionHandler.handleUnsupportedDurationField(field,  type);  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	aughtExceptionHandler.handleUnsupportedDurationField(field,  type);	      if(field!=    null)    {    if(field.getType()    ==    Token.FUNCTION)    {    field    =    new    UnsupportedDurationField(type);    }    	non-compiled	[CE]  	13	None	replace
18	[BUG]  [BUGGY]  FieldUtils.validate(field,  type);  [CE]  [FE]            AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  FieldUtils.validate(field,  type);  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	FieldUtils.validate(field,  type);	      FieldUtils.validate(field,    cCache);    	non-compiled	[CE]  	10	None	replace
19	[BUG]  [BUGGY]  iType  =(iType  ==  null)?  null  :  iType.getInstanceType();  [CE]  [FE]            AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  iType  =(iType  ==  null)?  null  :  iType.getInstanceType();  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	iType  =(iType  ==  null)?  null  :  iType.getInstanceType();	      iType    =(iType    ==    null)?    null    :    iType.getSuperclass();    	non-compiled	[CE]  	3	None	replace
20	[BUG]  [BUGGY]  FieldUtils.safeAdd(field,  cCache);  [CE]  [FE]        AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  FieldUtils.safeAdd(field,  cCache);  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	FieldUtils.safeAdd(field,  cCache);	      FieldUtils.safeMultiply(field,    cCache);    	non-compiled	[CE]  	8	None	replace
21	[BUG]  [BUGGY]  [Delete]  [CE]  [FE]        AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  [Delete]  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	[Delete]	      if(field!=    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    	non-compiled	[CE]  	11	None	replace
22	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedDuration(field,  type);  [CE]  [FE]          AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  aughtExceptionHandler.handleUnsupportedDuration(field,  type);  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	aughtExceptionHandler.handleUnsupportedDuration(field,  type);	      if(field!=    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    	non-compiled	[CE]  	11	None	replace
23	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedDurationField(type,  field);  [CE]  [FE]          AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  aughtExceptionHandler.handleUnsupportedDurationField(type,  field);  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	aughtExceptionHandler.handleUnsupportedDurationField(type,  field);	      if(field!=    null)    {    field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	12	None	replace
24	[BUG]  [BUGGY]  field  =  FieldUtils.safeMultiply(field,  cCache);  [CE]  [FE]        AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  field  =  FieldUtils.safeMultiply(field,  cCache);  [BUGGY]    return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  FieldUtils.safeMultiply(field,  cCache);	      FieldUtils.safeMultiply(field,    cCache);    	non-compiled	[CE]  	8	None	replace
25	[BUG]  [BUGGY]  return  field  ==  null?  null  :  field.getUnsupportedDurationField();  [CE]  [FE]        AssertionFailedError    [CONTEXT]    if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }    [BUGGY]  return  field  ==  null?  null  :  field.getUnsupportedDurationField();  [BUGGY]    }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	return  field  ==  null?  null  :  field.getUnsupportedDurationField();	  return    field    ==    null?    null    :    field;    	non-compiled	[CE]  	4	None	replace
