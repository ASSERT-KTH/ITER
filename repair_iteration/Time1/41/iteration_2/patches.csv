bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  FieldUtils.validate(field,  iType);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  FieldUtils.validate(field,  iType);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	FieldUtils.validate(field,  iType);	  FieldUtils.validate(field,    type);    	non-compiled	[CE]  	18	None	replace
2	[BUG]  [BUGGY]  FieldUtils.validate(iType,  field);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  FieldUtils.validate(iType,  field);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	FieldUtils.validate(iType,  field);	  FieldUtils.validate(field,    type);    	non-compiled	[CE]  	18	None	replace
3	[BUG]  [BUGGY]  field  =  new  UnsupportedDurationField(iType,  cCache.get(type));  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  field  =  new  UnsupportedDurationField(iType,  cCache.get(type));  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  new  UnsupportedDurationField(iType,  cCache.get(type));	  field    =    new    UnsupportedDurationField(type,    cCache.get(type));    	non-compiled	[CE]  	9	None	replace
4	[BUG]  [BUGGY]  field  =  new  UnsupportedDurationField(type,  cCache.get(iType));  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  field  =  new  UnsupportedDurationField(type,  cCache.get(iType));  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  new  UnsupportedDurationField(type,  cCache.get(iType));	  field    =    new    UnsupportedDurationField(type,    cCache.get(type));    	non-compiled	[CE]  	9	None	replace
5	[BUG]  [BUGGY]  aughtExceptionHandler.handle(getInstance(field,  type));  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  aughtExceptionHandler.handle(getInstance(field,  type));  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	aughtExceptionHandler.handle(getInstance(field,  type));	  aughtExceptionHandler.handle(getInstance(type,    field));    	non-compiled	[CE]  	15	None	replace
6	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedDurationField(field,  iType);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  aughtExceptionHandler.handleUnsupportedDurationField(field,  iType);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	aughtExceptionHandler.handleUnsupportedDurationField(field,  iType);	  aughtExceptionHandler.handleUnsupportedDurationField(field,    type);    	non-compiled	[CE]  	17	None	replace
7	[BUG]  [BUGGY]  FieldUtils.safeMultiply(field,  type,  iType);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  FieldUtils.safeMultiply(field,  type,  iType);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	FieldUtils.safeMultiply(field,  type,  iType);	  FieldUtils.safeMultiply(field,    iType,    type);    	non-compiled	[CE]  	2	None	replace
8	[BUG]  [BUGGY]  field  =  new  DurationField(iType);  cCache.put(iType,  field);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  field  =  new  DurationField(iType);  cCache.put(iType,  field);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  new  DurationField(iType);  cCache.put(iType,  field);	  field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    	non-compiled	[CE]  	8	None	replace
9	[BUG]  [BUGGY]  FieldUtils.validate(cCache,  field,  iType);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  FieldUtils.validate(cCache,  field,  iType);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	FieldUtils.validate(cCache,  field,  iType);	  FieldUtils.validate(cCache,    field);    	non-compiled	[CE]  	7	None	replace
10	[BUG]  [BUGGY]  field  =  FieldUtils.safeMultiply(field,  type);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  field  =  FieldUtils.safeMultiply(field,  type);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  FieldUtils.safeMultiply(field,  type);	  field    =    FieldUtils.safeMultiply(field,    cCache);    	non-compiled	[CE]  	24	None	replace
11	[BUG]  [BUGGY]  return  field  ==  null?  field  :  new  UnsupportedDurationField(iType,  type);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  return  field  ==  null?  field  :  new  UnsupportedDurationField(iType,  type);  [BUGGY]      }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	return  field  ==  null?  field  :  new  UnsupportedDurationField(iType,  type);	  return    field    ==    null?    field    :    new    UnsupportedDurationField(type,    iType);    	non-compiled	[CE]  	13	None	replace
12	[BUG]  [BUGGY]  FieldUtils.safeAdd(field,  iType);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  FieldUtils.safeAdd(field,  iType);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	FieldUtils.safeAdd(field,  iType);	  FieldUtils.safeMultiply(field,    type);    	non-compiled	[CE]  	1	None	replace
13	[BUG]  [BUGGY]  iType  =(iType  ==  null)?  null  :  iType.getRawType(0);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  iType  =(iType  ==  null)?  null  :  iType.getRawType(0);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	iType  =(iType  ==  null)?  null  :  iType.getRawType(0);	  iType    =(iType    ==    null)?    null    :    iType.getRawType();    	non-compiled	[CE]  	16	None	replace
14	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedDuration(field,  iType);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  aughtExceptionHandler.handleUnsupportedDuration(field,  iType);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	aughtExceptionHandler.handleUnsupportedDuration(field,  iType);	  aughtExceptionHandler.handleUnsupportedDuration(field,    type);    	non-compiled	[CE]  	22	None	replace
15	[BUG]  [BUGGY]  field  =  new  DurationField(type);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  field  =  new  DurationField(type);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  new  DurationField(type);	  field    =    new    UnsupportedDurationField(type);    	non-compiled	[CE]  	14	None	replace
16	[BUG]  [BUGGY]  field  =  new  DurationField(iType);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  field  =  new  DurationField(iType);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  new  DurationField(iType);	  field    =    new    UnsupportedDurationField(type);    	non-compiled	[CE]  	14	None	replace
17	[BUG]  [BUGGY]  FieldUtils.setDurationField(field,  cCache);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  FieldUtils.setDurationField(field,  cCache);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	FieldUtils.setDurationField(field,  cCache);	  FieldUtils.validate(cCache,    field);    	non-compiled	[CE]  	7	None	replace
18	[BUG]  [BUGGY]  return  field  ==  null?  field  :  new  UnsupportedDurationField(iType,  field);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  return  field  ==  null?  field  :  new  UnsupportedDurationField(iType,  field);  [BUGGY]      }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	return  field  ==  null?  field  :  new  UnsupportedDurationField(iType,  field);	  return    field    ==    null?    field    :    new    UnsupportedDurationField(type,    iType);    	non-compiled	[CE]  	13	None	replace
19	[BUG]  [BUGGY]  if(field!=  null)  {  field  =  new  DurationField(type);  cCache.put(type,  field);  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  if(field!=  null)  {  field  =  new  DurationField(type);  cCache.put(type,  field);  }  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	if(field!=  null)  {  field  =  new  DurationField(type);  cCache.put(type,  field);  }	  [Delete]    	non-compiled	[CE]  	21	None	replace
20	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnsupportedDurationException(field);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  aughtExceptionHandler.throwAsUnsupportedDurationException(field);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	aughtExceptionHandler.throwAsUnsupportedDurationException(field);	  aughtExceptionHandler.throwAsUnsupportedDurationException(   "   ");    	non-compiled	[CE]  	6	None	replace
21	[BUG]  [BUGGY]  field  =  new  DurationField(iType);  cCache.put(type,  field);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  field  =  new  DurationField(iType);  cCache.put(type,  field);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  new  DurationField(iType);  cCache.put(type,  field);	  field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    	non-compiled	[CE]  	8	None	replace
22	[BUG]  [BUGGY]  field  =  new  DurationField(type);  cCache.put(type,  field);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  field  =  new  DurationField(type);  cCache.put(type,  field);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  new  DurationField(type);  cCache.put(type,  field);	  field    =    new    UnsupportedDurationField(type);    cCache.put(type,    field);    	non-compiled	[CE]  	8	None	replace
23	[BUG]  [BUGGY]  if(field!=  null)  {  aughtExceptionHandler.handleUnsupportedDurationField(type,  field);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  if(field!=  null)  {  aughtExceptionHandler.handleUnsupportedDurationField(type,  field);  }  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	if(field!=  null)  {  aughtExceptionHandler.handleUnsupportedDurationField(type,  field);  }	  aughtExceptionHandler.handleUnsupportedDurationField(type,    field);    	non-compiled	[CE]  	23	None	replace
24	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedDuration(field,  cCache);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  aughtExceptionHandler.handleUnsupportedDuration(field,  cCache);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	aughtExceptionHandler.handleUnsupportedDuration(field,  cCache);	  aughtExceptionHandler.handleUnsupportedDuration(field,    type);    	non-compiled	[CE]  	22	None	replace
25	[BUG]  [BUGGY]  iType  =(iType  ==  null)?  null  :  iType.getInstanceType(0);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  iType  =(iType  ==  null)?  null  :  iType.getInstanceType(0);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	iType  =(iType  ==  null)?  null  :  iType.getInstanceType(0);	  iType    =(iType    ==    null)?    null    :    iType.getInstanceType();    	non-compiled	[CE]  	19	None	replace
26	[BUG]  [BUGGY]  field  =  FieldUtils.safeMultiply(field,  iType);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  field  =  FieldUtils.safeMultiply(field,  iType);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  FieldUtils.safeMultiply(field,  iType);	  FieldUtils.safeMultiply(field,    type);    	non-compiled	[CE]  	1	None	replace
27	[BUG]  [BUGGY]  if(field!=  null)  {  aughtExceptionHandler.handleUnsupportedDuration(field,  type);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  if(field!=  null)  {  aughtExceptionHandler.handleUnsupportedDuration(field,  type);  }  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	if(field!=  null)  {  aughtExceptionHandler.handleUnsupportedDuration(field,  type);  }	  aughtExceptionHandler.handleUnsupportedDuration(field,    type);    	non-compiled	[CE]  	22	None	replace
28	[BUG]  [BUGGY]  if(field!=  null)  {  aughtExceptionHandler.handle(getInstance(type,  field));  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  if(field!=  null)  {  aughtExceptionHandler.handle(getInstance(type,  field));  }  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	if(field!=  null)  {  aughtExceptionHandler.handle(getInstance(type,  field));  }	  aughtExceptionHandler.handle(getInstance(type,    field));    	non-compiled	[CE]  	15	None	replace
29	[BUG]  [BUGGY]  if(field!=  null)  {  aughtExceptionHandler.handleUnsupportedDurationField(field,  type);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  if(field!=  null)  {  aughtExceptionHandler.handleUnsupportedDurationField(field,  type);  }  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	if(field!=  null)  {  aughtExceptionHandler.handleUnsupportedDurationField(field,  type);  }	  aughtExceptionHandler.handleUnsupportedDurationField(field,    type);    	non-compiled	[CE]  	17	None	replace
30	[BUG]  [BUGGY]  field  =  new  UnsupportedDurationField(type,  cCache.get(type),  cCache);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  field  =  new  UnsupportedDurationField(type,  cCache.get(type),  cCache);  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	field  =  new  UnsupportedDurationField(type,  cCache.get(type),  cCache);	  field    =    new    UnsupportedDurationField(type,    cCache.get(type));    	non-compiled	[CE]  	9	None	replace
31	[BUG]  [BUGGY]  iType  =(iType  ==  null)?  null  :  iType.getConstructor();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  iType  =(iType  ==  null)?  null  :  iType.getConstructor();  [BUGGY]      return  field;  }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	iType  =(iType  ==  null)?  null  :  iType.getConstructor();	  iType    =(iType    ==    null)?    null    :    iType.getInstanceType();    	non-compiled	[CE]  	19	None	replace
32	[BUG]  [BUGGY]  return  iType  ==  null?  field  :  new  UnsupportedDurationField(type,  field);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      if  (cCache  ==  null)  {  cCache  =  new  HashMap<DurationFieldType,  UnsupportedDurationField>(7);  field  =  null;  }  else  {  field  =  cCache.get(type);  }  if  (field  ==  null)  {  field  =  new  UnsupportedDurationField(type);  cCache.put(type,  field);  }      [BUGGY]  return  iType  ==  null?  field  :  new  UnsupportedDurationField(type,  field);  [BUGGY]      }  [CLASS]  UnsupportedDurationField  [METHOD]  getInstance  [RETURN_TYPE]  UnsupportedDurationField  DurationFieldType  type  [VARIABLES]  boolean  UnsupportedDurationField  field  HashMap  cCache  long  serialVersionUID  DurationFieldType  iType  type  	projects/Time1/src/main/java/org/joda/time/field/UnsupportedDurationField.java	0.22360679774997896	59	59	1	replace	return  iType  ==  null?  field  :  new  UnsupportedDurationField(type,  field);	  return    field    ==    null?    field    :    new    UnsupportedDurationField(type,    iType);    	non-compiled	[CE]  	13	None	replace
