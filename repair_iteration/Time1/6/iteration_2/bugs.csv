bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();    [BUGGY]  iChronology  =  chronology.withUTC(this);  [BUGGY]      [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology  =  chronology.withUTC(this);	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  iChronology.validate(this,  values,  iValues);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();    [BUGGY]  iChronology.validate(this,  values,  iValues);  [BUGGY]      [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology.validate(this,  values,  iValues);	  iChronology.validate(this,    values);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology,  values);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();    [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology,  values);  [BUGGY]    }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology  =  DateTimeUtils.getChronology(chronology,  values);	      iChronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  iChronology.validate(this,  iTypes);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();    [BUGGY]  iChronology.validate(this,  iTypes);  [BUGGY]    }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology.validate(this,  iTypes);	      iChronology.validate(this,    iValues);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology).withUTC();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();    [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology).withUTC();  [BUGGY]    }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology  =  DateTimeUtils.getChronology(chronology).withUTC();	      iChronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
