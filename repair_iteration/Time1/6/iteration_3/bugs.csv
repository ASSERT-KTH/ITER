bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();      [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  1;  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  1;	  iChronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology,  iValues);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();      [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology,  iValues);  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology  =  DateTimeUtils.getChronology(chronology,  iValues);	  iChronology    =    DateTimeUtils.getChronology(chronology,    values);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology,  values,  iValues);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();      [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology,  values,  iValues);  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology  =  DateTimeUtils.getChronology(chronology,  values,  iValues);	  iChronology    =    DateTimeUtils.getChronology(chronology,    values);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  iChronology.validate(this,  values,  iValues,  chronology);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();      [BUGGY]  iChronology.validate(this,  values,  iValues,  chronology);  [BUGGY]        [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology.validate(this,  values,  iValues,  chronology);	  iChronology.validate(this,    values,    iValues);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  iChronology.validate(this,  values,  iValues,  lastUnitField);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();      [BUGGY]  iChronology.validate(this,  values,  iValues,  lastUnitField);  [BUGGY]        [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology.validate(this,  values,  iValues,  lastUnitField);	  iChronology.validate(this,    values,    iValues);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this,  values);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();      [BUGGY]  iChronology  =  chronology.withUTC(this,  values);  [BUGGY]        [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology  =  chronology.withUTC(this,  values);	  iChronology    =    chronology.withUTC(this);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this,  iValues);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();      [BUGGY]  iChronology  =  chronology.withUTC(this,  iValues);  [BUGGY]        [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology  =  chronology.withUTC(this,  iValues);	  iChronology    =    chronology.withUTC(this);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  iChronology.validate(this,  values,  iTypes);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();      [BUGGY]  iChronology.validate(this,  values,  iTypes);  [BUGGY]        [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology.validate(this,  values,  iTypes);	  iChronology.validate(this,    values,    iValues);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology,  this.iValues);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  }  }  }  lastUnitField  =  loopUnitField;  }  iTypes  =  (DateTimeFieldType[])  types.clone();  chronology.validate(this,  values);  iValues  =  (int[])  values.clone();      [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology,  this.iValues);  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  Chronology)  DateTimeFieldType[]  types  int[]  values  Chronology  chronology  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  DateTimeFieldType  loopType  int[]  iValues  values  Chronology  chrono  chronology  iChronology  DurationField  lastRangeField  lastUnitField  loopRangeField  loopUnitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time1/src/main/java/org/joda/time/Partial.java	0.5773502691896258	251	251	1	replace	iChronology  =  DateTimeUtils.getChronology(chronology,  this.iValues);	  iChronology    =    DateTimeUtils.getChronology(chronology,    values);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
