bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	6	None	add
2	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	6	None	add
3	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]        ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  ||  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	6	None	add
4	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  ')'  expected  [FE]          ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  ')'  expected	6	None	add
5	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]            ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	6	None	add
6	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
7	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
8	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  {  [CE]  ')'  expected  [FE]      ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  ')'  expected	7	None	replace
9	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
10	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [FE]  UnsupportedOperationException  [FE]        ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
11	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]          ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <  Object>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <  Object>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	7	None	replace
12	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
13	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
14	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]      ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	16	None	replace
15	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
16	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [FE]  UnsupportedOperationException  [FE]        ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
17	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	16	1	replace
18	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	16	1	replace
19	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  owner  [FE]            ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  owner	16	None	replace
20	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	14	1	replace
21	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	14	1	replace
22	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	14	None	replace
23	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	14	1	replace
24	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [FE]  ClassCastException  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	14	1	replace
25	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  TypeVariable  <?>)  {  [CE]  inconvertible  types  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  inconvertible  types	14	None	replace
26	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	15	None	add
27	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]      ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	15	None	add
28	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]        ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	15	None	add
29	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]          ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	15	None	add
30	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]            ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	15	None	add
31	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	3	1	replace
32	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	3	1	replace
33	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	3	1	replace
34	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	3	1	replace
35	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
36	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
37	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
38	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
39	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  ClassCastException  	11	1	replace
40	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [FE]  ClassCastException  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  ClassCastException  	11	1	replace
41	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {	  	non-compiled	[CE]  missing  return  statement	10	None	add
42	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	10	None	add
43	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class?)  {  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class?)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class?)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
44	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	10	None	add
45	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [CE]  ')'  expected  [FE]            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {	  	non-compiled	[CE]  ')'  expected	10	None	add
46	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	compilable	  [FE]  UnsupportedOperationException  	9	1	replace
47	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	compilable	  [FE]  UnsupportedOperationException  	9	1	replace
48	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	compilable	  [FE]  UnsupportedOperationException  	9	1	replace
49	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	compilable	  [FE]  UnsupportedOperationException  	9	1	replace
50	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	9	None	replace
51	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	4	None	add
52	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	4	None	add
53	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	4	None	add
54	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	4	None	add
55	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
56	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
57	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType,  rawParentClass)  {  [CE]  [FE]            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType,  rawParentClass)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  	17	None	replace
58	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]              UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  BooleanArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	17	None	replace
59	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType  <?>)  {  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
60	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	2	None	add
61	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	2	None	add
62	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]        ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  ')'  expected	2	None	add
63	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]          ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	2	None	add
64	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >=?>)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >=?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
65	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	8	None	add
66	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  ')'  expected  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  ')'  expected	8	None	add
67	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  TypeToEvaluate  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  TypeToEvaluate	8	None	add
68	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	8	None	add
69	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	8	None	add
70	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	1	None	replace
71	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>)    {    	compilable	  [FE]  ClassCastException  	1	1	replace
72	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [FE]  ClassCastException  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>)    {    	compilable	  [FE]  ClassCastException  	1	1	replace
73	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	1	None	replace
74	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	1	1	replace
75	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	1	1	replace
76	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	1	None	replace
77	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters.length  >  0)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                  UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters.length  >  0)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters.length  >  0)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	1	None	replace
78	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass);	      	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	12	None	replace
79	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);	      	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	12	None	replace
80	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  parentType,  rawParentClass);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  parentType,  rawParentClass);	      	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	12	None	replace
81	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  rawParentClass);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  rawParentClass);	      	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	12	None	replace
82	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  actualTypeParameters,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  actualTypeParameters,  rawParentClass);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType,  actualTypeParameters,  rawParentClass);	      	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	12	None	replace
83	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  actualTypeParameters,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                              UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  actualTypeParameters,  owner);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType,  actualTypeParameters,  owner);	      	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	12	None	replace
84	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);	      	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	12	None	replace
85	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Collection  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
86	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Collection  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
87	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Collection  <?>,  rawParentClass)  {  [CE]  [FE]              UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Collection  <?>,  rawParentClass)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Collection  <?>,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Collection    <?>)    {    	non-compiled	[CE]  	18	None	replace
88	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Collection  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
89	[BUG]  [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Collection  <?>)  {  [CE]  inconvertible  types  [FE]                  UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Collection  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(rawParentClass  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Collection    <?>)    {    	non-compiled	[CE]  inconvertible  types	18	None	replace
90	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	13	None	add
91	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	13	None	add
92	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	13	None	add
93	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	13	None	add
94	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  TypeToEvaluate  [FE]            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  TypeToEvaluate	13	None	add
95	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  typeVariable  <?>)  {  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  typeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  typeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
96	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	5	1	replace
97	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	5	1	replace
98	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass);	      	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	12	None	replace
99	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass);	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
100	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass);	      	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	12	None	replace
101	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass);	      	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	12	None	replace
102	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  ClassCastException  	11	1	replace
103	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [FE]  ClassCastException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  ClassCastException  	11	1	replace
104	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
105	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
106	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
107	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instancesof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instancesof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instancesof  TypeVariable  <?>)  {	  	non-compiled	[CE]  ')'  expected	13	None	add
108	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  >=?>)  {  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  >=?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
109	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
110	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
111	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  BooleanArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	17	None	replace
112	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  'else'  without  'if'  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  'else'  without  'if'	6	None	add
113	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  not  a  statement  [FE]      ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  not  a  statement	6	None	add
114	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]        ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	6	None	add
115	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable)  {  [CE]  ')'  expected  [FE]          ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable)  {	  	non-compiled	[CE]  ')'  expected	6	None	add
116	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typetoEvaluate  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  typetoEvaluate  [FE]            ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typetoEvaluate  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typetoEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  cannot  find  symbol  typetoEvaluate	6	None	add
117	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
118	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
119	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
120	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [FE]  UnsupportedOperationException  [FE]      ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
121	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  'else'  without  'if'	8	None	add
122	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  not  a  statement	8	None	add
123	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  GenericArrayType)  {  [CE]  ')'  expected  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  GenericArrayType)  {	  	non-compiled	[CE]  ')'  expected	8	None	add
124	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	compilable	  [FE]  UnsupportedOperationException  	9	1	replace
125	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	compilable	  [FE]  UnsupportedOperationException  	9	1	replace
126	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {	  	non-compiled	[CE]  'else'  without  'if'	10	None	add
127	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {	  	non-compiled	[CE]  missing  return  statement	10	None	add
128	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	3	1	replace
129	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	3	1	replace
130	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >=?>)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >=?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >=?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
131	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  'else'  without  'if'  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	15	None	add
132	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  'else'  without  'if'  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	2	None	add
133	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  not  a  statement  [FE]      ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  not  a  statement	2	None	add
134	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]        ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	2	None	add
135	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]          ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable  <?>)  {	  	non-compiled	[CE]  ')'  expected	2	None	add
136	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
137	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Collection  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
138	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  Collection  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	18	None	replace
139	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	4	None	add
140	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  not  a  statement	4	None	add
141	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  >=?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
142	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	1	None	replace
143	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	15	None	add
144	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	4	None	add
145	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  not  a  statement	13	None	add
146	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	13	None	add
147	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
148	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
149	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass)  {  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>)    {    	non-compiled	[CE]  	1	None	replace
150	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	6	None	add
151	[BUG]  [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType);  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType);	      	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	12	None	replace
152	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters.getActualTypeArguments(),  parentType,  rawParentClass);	      	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	12	None	replace
153	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeParameters(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeParameters(),  parentType,  rawParentClass);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeParameters(),  parentType,  rawParentClass);	      	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	12	None	replace
154	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  rawParentClass,  parentType);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  rawParentClass,  parentType);  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  rawParentClass,  parentType);	      	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	12	None	replace
155	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	2	None	add
156	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	compilable	  [FE]  UnsupportedOperationException  	9	1	replace
157	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);    [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]    GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	compilable	  [FE]  UnsupportedOperationException  	9	1	replace
