bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
2	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  true)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  true)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  true)  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
3	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=  false)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=  false)  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
4	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  {  false)  {  [CE]  ')'  expected  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  {  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  {  false)  {	  	non-compiled	[CE]  ')'  expected	9	None	add
5	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [CE]  'else'  without  'if'  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
6	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {	  	non-compiled	[CE]  missing  return  statement	39	None	add
7	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [CE]  missing  return  statement  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {	  	non-compiled	[CE]  missing  return  statement	39	None	add
8	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]        ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	39	None	add
9	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [CE]  missing  return  statement  [FE]          ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {	  	non-compiled	[CE]  missing  return  statement	39	None	add
10	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]            ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	39	None	add
11	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class?)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class?)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class?)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
12	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	106	1	replace
13	[BUG]  [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	106	1	replace
14	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable)  {  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instancesof    TypeVariable)    {    	non-compiled	[CE]  ')'  expected	115	None	replace
15	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  TypeVariable)  {  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instancesof    TypeVariable)    {    	non-compiled	[CE]  ')'  expected	115	None	replace
16	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  TypeArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
17	[BUG]  [BUGGY]  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(actualTypeParameters    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	93	None	replace
18	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  rawType  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(rawType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(rawType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(actualTypeParameters    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  rawType	93	None	replace
19	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	26	1	replace
20	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType)  {  [FE]  UnsupportedOperationException  [FE]        ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	26	1	replace
21	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	137	None	replace
22	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
23	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
24	[BUG]  [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  owner);  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  owner);	  Type[]    rawParentClass    =    actualTypeParameters.toArray(rawType);    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	151	None	replace
25	[BUG]  [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  parentType);  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  parentType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  parentType);	  Type[]    rawParentClass    =    actualTypeParameters.toArray(rawType);    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	151	None	replace
26	[BUG]  [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(typeToEvaluate);  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(typeToEvaluate);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawParentClass  =  actualTypeParameters.toArray(typeToEvaluate);	  Type[]    rawParentClass    =    actualTypeParameters.toArray(rawType);    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	151	None	replace
27	[BUG]  [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  typeToEvaluate);  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  typeToEvaluate);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  typeToEvaluate);	  Type[]    rawParentClass    =    actualTypeParameters.toArray(rawType);    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	151	None	replace
28	[BUG]  [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  fieldTypeVariable);  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  fieldTypeVariable);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  fieldTypeVariable);	  Type[]    rawParentClass    =    actualTypeParameters.toArray(rawType);    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	151	None	replace
29	[BUG]  [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  true);  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  true);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawParentClass  =  actualTypeParameters.toArray(rawType,  true);	  Type[]    rawParentClass    =    actualTypeParameters.toArray(rawType);    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	151	None	replace
30	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(parentType    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	146	1	replace
31	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(parentType    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	146	1	replace
32	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  BooleanArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typesToEvaluate    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	111	None	replace
33	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  BooleanArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typesToEvaluate    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
34	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	129	1	replace
35	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	129	1	replace
36	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  owner  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  TypeVariable  <?>)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  owner	129	None	replace
37	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	46	None	add
38	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	46	None	add
39	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	46	None	add
40	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  ')'  expected  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  ')'  expected	46	None	add
41	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	46	None	add
42	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  TypeToEvaluate  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  TypeToEvaluate	46	None	add
43	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]                UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	46	None	add
44	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  null)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  null)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	72	None	replace
45	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  true)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  true)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    	compilable	  [FE]  UnsupportedOperationException  	72	1	replace
46	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  true)  {  [FE]  UnsupportedOperationException  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  true)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  true)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    	compilable	  [FE]  UnsupportedOperationException  	72	1	replace
47	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    	compilable	  [FE]  ClassCastException  	72	1	replace
48	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false  ||  typeToEvaluate  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    	compilable	  [FE]  ClassCastException  	72	1	replace
49	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    	compilable	  [FE]  ClassCastException  	72	1	replace
50	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    	compilable	  [FE]  ClassCastException  	72	1	replace
51	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  >=  false)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  >=  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  >=  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	72	None	replace
52	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typesToEvaluate    instanceof    GenericArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	69	None	replace
53	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  parentType  instanceof  Class  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	142	None	replace
54	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	142	None	replace
55	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  actualTypeParameters  instanceof  Class  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  actualTypeParameters  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  actualTypeParameters  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	142	None	replace
56	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  rawParentClass  instanceof  Class  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  rawParentClass  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	142	None	replace
57	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  GenericArrayType)  {  [CE]  inconvertible  types  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  inconvertible  types	49	None	replace
58	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	49	None	replace
59	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    	compilable	  [FE]  UnsupportedOperationException  	49	1	replace
60	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    	compilable	  [FE]  UnsupportedOperationException  	49	1	replace
61	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	20	None	add
62	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	20	None	add
63	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	20	None	add
64	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	20	None	add
65	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	20	None	add
66	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  typeVariable  <?>)  {  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  typeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  typeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
67	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]                UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	20	None	add
68	[BUG]  [BUGGY]  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]              ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }    else    if(actualTypeParameters    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	29	None	replace
69	[BUG]  [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(rawParentClass  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }    else    if(actualTypeParameters    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  inconvertible  types	29	None	replace
70	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  rawType  [FE]                  ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(rawType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(rawType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }    else    if(actualTypeParameters    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  rawType	29	None	replace
71	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	33	None	add
72	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	33	None	add
73	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  SortedArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  SortedArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  SortedArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
74	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  TypeArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  TypeArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  TypeArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
75	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]            ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	33	None	add
76	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]              ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	33	None	add
77	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	34	None	replace
78	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	105	1	replace
79	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Class)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	105	1	replace
80	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	105	None	replace
81	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Class)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	105	None	replace
82	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  >=?>)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  >=?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  >=?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    >=?>)    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
83	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==?>)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    >=?>)    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
84	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  ==?>)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  ==?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  ==?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    >=?>)    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
85	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=?>)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    >=?>)    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
86	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable!=?>)  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable!=?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable!=?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    >=?>)    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
87	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  owner);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    owner);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	83	None	replace
88	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  actualTypeParameters,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  actualTypeParameters,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(owner,  actualTypeParameters,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    owner);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	83	None	replace
89	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  rawTypeParameters,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  rawTypeParameters,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(owner,  rawTypeParameters,  owner);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    owner);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	83	None	replace
90	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType,  actualTypeParameters,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType,  actualTypeParameters,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(castedType,  actualTypeParameters,  owner);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    owner);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	83	None	replace
91	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(owner,  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    owner);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	83	None	replace
92	[BUG]  [BUGGY]  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	91	None	replace
93	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  TypeArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
94	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	152	None	replace
95	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(owner.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	152	None	replace
96	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	152	None	replace
97	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(objParameters.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(objParameters.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(objParameters.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	152	None	replace
98	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentTypeParameters  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  currentTypeParameters  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentTypeParameters  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentTypeParameters  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    owner    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  currentTypeParameters	19	None	replace
99	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  castedType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  castedType  [FE]                  ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  castedType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  castedType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    owner    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  castedType	19	None	replace
100	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	32	None	replace
101	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  TypeVariable  <?>)  {  [CE]  inconvertible  types  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  inconvertible  types	32	None	replace
102	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  owner  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  owner	32	None	replace
103	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	97	1	replace
104	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	97	1	replace
105	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType  <?>)  {  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
106	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType  <?>)  {  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
107	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  BooleanArrayType  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  BooleanArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  BooleanArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	59	None	replace
108	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType  <?>)  {  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  TypeArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
109	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType  <?>)  {  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
110	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
111	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	86	None	replace
112	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
113	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Collection  <?>,  rawParentClass)  {  [CE]  [FE]                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Collection  <?>,  rawParentClass)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Collection  <?>,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Collection    <?>)    {    	non-compiled	[CE]  	86	None	replace
114	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Collection  <?>)  {	  }    else    if(rawParentClass    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
115	[BUG]  [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Collection  <?>)  {  [CE]  inconvertible  types  [FE]                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(rawParentClass  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Collection  <?>)  {	  }    else    if(rawParentClass    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Collection    <?>)    {    	non-compiled	[CE]  inconvertible  types	89	None	replace
116	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  parentType  instanceof  TypeVariable  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	76	None	replace
117	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  actualTypeParameters  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	76	None	replace
118	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	76	None	replace
119	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  rawParentClass  instanceof  TypeVariable  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  rawParentClass  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  rawParentClass  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	76	None	replace
120	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  TypeVariable  <?>,  rawParentClass)  {  [CE]  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  TypeVariable  <?>,  rawParentClass)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  TypeVariable  <?>,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  	76	None	replace
121	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Class)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Class)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	103	None	replace
122	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	103	1	replace
123	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [FE]  UnsupportedOperationException  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	103	1	replace
124	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	127	1	replace
125	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	127	1	replace
126	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  TypeArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }    else    if(typeToEvaluate    instanceof    TypeVariable    ||    typeToEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
127	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	139	1	replace
128	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	139	1	replace
129	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	155	1	replace
130	[BUG]  [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	155	1	replace
131	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  if(typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	155	1	replace
132	[BUG]  [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType)  {  [FE]  UnsupportedOperationException  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  if(typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	155	1	replace
133	[BUG]  [BUGGY]  }  if(typeToEvaluate  instanceof  TypeArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  TypeArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  if(typeToEvaluate  instanceof  TypeArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
134	[BUG]  [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]              ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	155	None	replace
135	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeParameters(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeParameters(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeParameters(),  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass,    parentType);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	154	None	replace
136	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeParameters(),  rawParentClass,  parentType);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeParameters(),  rawParentClass,  parentType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeParameters(),  rawParentClass,  parentType);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass,    parentType);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	154	None	replace
137	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType,  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType,  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(castedType,  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass,    parentType);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	154	None	replace
138	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  ClassCastException  	150	1	replace
139	[BUG]  [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  ClassCastException  	150	1	replace
140	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeParameters(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeParameters(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeParameters(),  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType.getActualTypeParameters(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	153	None	replace
141	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeParameters(),  rawParentClass,  parentType);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeParameters(),  rawParentClass,  parentType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeParameters(),  rawParentClass,  parentType);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType.getActualTypeParameters(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	153	None	replace
142	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeParameters(),  parentType,  rawParentClass,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeParameters(),  parentType,  rawParentClass,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeParameters(),  parentType,  rawParentClass,  owner);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType.getActualTypeParameters(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	153	None	replace
143	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner.getActualTypeParameters(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner.getActualTypeParameters(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(owner.getActualTypeParameters(),  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType.getActualTypeParameters(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	153	None	replace
144	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeParameters(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeParameters(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeParameters(),  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType.getActualTypeParameters(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	153	None	replace
145	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
146	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Class  <?>)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
147	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  owner  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  owner	13	None	replace
148	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    	compilable	  [FE]  UnsupportedOperationException  	157	1	replace
149	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    	compilable	  [FE]  UnsupportedOperationException  	157	1	replace
150	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  owner  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  GenericArrayType)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  owner	157	None	replace
151	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters.length  >  1)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters.length  >  1)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters.length  >  1)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    &&    actualTypeParameters.length    >    0)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	77	None	replace
152	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  actualTypeParameters.length  >  0)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  actualTypeParameters.length  >  0)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  actualTypeParameters.length  >  0)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    &&    actualTypeParameters.length    >    0)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	77	None	replace
153	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters.length  >  2)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters.length  >  2)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters.length  >  2)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    &&    actualTypeParameters.length    >    0)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	77	None	replace
154	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  rawParentClass.length  >  0)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  rawParentClass.length  >  0)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  rawParentClass.length  >  0)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    &&    actualTypeParameters.length    >    0)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	77	None	replace
155	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  parentType.length  >  0)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  parentType.length  >  0)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  parentType.length  >  0)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    &&    actualTypeParameters.length    >    0)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	77	None	replace
156	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	23	None	add
157	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	23	None	add
158	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]        ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	23	None	add
159	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]          ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	23	None	add
160	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(owner  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  owner  [FE]            ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(owner  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(owner  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  owner	23	None	add
161	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]              ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable  <?>)  {	  	non-compiled	[CE]  ')'  expected	23	None	add
162	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	18	1	replace
163	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	18	1	replace
164	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	31	None	add
165	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	31	None	add
166	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	31	None	add
167	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	31	None	add
168	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	31	None	add
169	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  SortedArrayType  <?>)  {  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  SortedArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  SortedArrayType  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
170	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]                UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	31	None	add
171	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass,  owner);	  Type[]    actualTypeParameters    =    extractRealTypes(typeToEvaluate.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	79	None	replace
172	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass,  typeToEvaluate);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass,  typeToEvaluate);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass,  typeToEvaluate);	  Type[]    actualTypeParameters    =    extractRealTypes(typeToEvaluate.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	79	None	replace
173	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getOwnerType(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getOwnerType(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getOwnerType(),  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(typeToEvaluate.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	79	None	replace
174	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  typeToEvaluate,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  typeToEvaluate,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  typeToEvaluate,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(typeToEvaluate.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	79	None	replace
175	[BUG]  [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(rawParentClass  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }    else    if(actualTypeParameters    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    	non-compiled	[CE]  inconvertible  types	53	None	replace
176	[BUG]  [BUGGY]  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }    else    if(actualTypeParameters    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	53	None	replace
177	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  rawType  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(rawType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(rawType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }    else    if(actualTypeParameters    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  rawType	53	None	replace
178	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {	  	non-compiled	[CE]  missing  return  statement	74	None	add
179	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {	  	non-compiled	[CE]  missing  return  statement	74	None	add
180	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  >=  false)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  >=  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  >=  false)  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	74	None	add
181	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  >>  false)  {  [CE]  cannot  find  symbol  GenericArrayType  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  >>  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  >>  false)  {	  	non-compiled	[CE]  cannot  find  symbol  GenericArrayType	74	None	add
182	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  [Delete]  false)  {  [CE]  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  [Delete]  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  [Delete]  false)  {	  	non-compiled	[CE]  	74	None	add
183	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  [BUGGY]  false)  {  [CE]  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  [BUGGY]  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  [BUGGY]  false)  {	  	non-compiled	[CE]  	74	None	add
184	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	37	None	add
185	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	37	None	add
186	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	37	None	add
187	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	37	None	add
188	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	37	None	add
189	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	37	None	add
190	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(objParameterizedType,  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(objParameterizedType,  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(objParameterizedType,  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	80	None	replace
191	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
192	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  owner  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  BooleanArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  BooleanArrayType)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  owner	109	None	replace
193	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class?)  {  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class?)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class?)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class?)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
194	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
195	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType  ||  rawParentClass  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType  ||  rawParentClass  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType  ||  rawParentClass  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
196	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  {  [CE]  ')'  expected  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    {    	non-compiled	[CE]  ')'  expected	8	None	replace
197	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  [CE]  [FE]            ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    {    	non-compiled	[CE]  	8	None	replace
198	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  null)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  null)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	8	None	replace
199	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=  [CE]  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    {    	non-compiled	[CE]  	8	None	replace
200	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >=  false)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >=  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >=  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	8	None	replace
201	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  ClassCastException  	5	1	replace
202	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  ClassCastException  	5	1	replace
203	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	143	1	replace
204	[BUG]  [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	143	1	replace
205	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	143	1	replace
206	[BUG]  [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [FE]  UnsupportedOperationException  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	143	1	replace
207	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	143	1	replace
208	[BUG]  [BUGGY]  }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	143	1	replace
209	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  null)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType!=  null)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	75	None	replace
210	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  variable  castedType  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  castedType  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	99	None	replace
211	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  actualTypeParameters);  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  actualTypeParameters);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  actualTypeParameters);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
212	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  cannot  find  symbol  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
213	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(type.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  cannot  find  symbol  type  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(type.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(type.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  cannot  find  symbol  type	99	None	replace
214	[BUG]  [BUGGY]  Type[]  rawParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  variable  castedType  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  castedType  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	99	None	replace
215	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  owner.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  cannot  find  symbol  [FE]                                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  owner.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rawType,  owner.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
216	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	24	1	replace
217	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [FE]  UnsupportedOperationException  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	24	1	replace
218	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
219	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
220	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	12	None	add
221	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
222	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	12	None	add
223	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
224	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]                UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
225	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	6	None	add
226	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	6	None	add
227	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	6	None	add
228	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	6	None	add
229	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	6	None	add
230	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	6	None	add
231	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	156	None	add
232	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	156	None	add
233	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	156	None	add
234	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instancesof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [CE]  ')'  expected  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instancesof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(parentType  instancesof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  ')'  expected	156	None	add
235	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  childType  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  childType  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  childType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  childType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  childType	156	None	add
236	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instancesof  GenericArrayType)  {  [CE]  ')'  expected  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instancesof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instancesof  GenericArrayType)  {	  	non-compiled	[CE]  ')'  expected	156	None	add
237	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	128	None	add
238	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	128	None	add
239	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	128	None	add
240	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  typeVariable  <?>)  {  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  typeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  typeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	128	None	add
241	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  >=?>)  {  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  >=?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
242	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(owner  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  owner  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(owner  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(owner  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  owner	128	None	add
243	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	147	None	add
244	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	147	None	add
245	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	147	None	add
246	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	147	None	add
247	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	147	None	add
248	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {	  	non-compiled	[CE]  missing  return  statement	35	None	add
249	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	35	None	add
250	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  {  [CE]  ')'  expected  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  {	  	non-compiled	[CE]  ')'  expected	35	None	add
251	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class?)  {  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class?)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class?)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
252	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [CE]  ')'  expected  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {	  	non-compiled	[CE]  ')'  expected	35	None	add
253	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [CE]  missing  return  statement  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class)  {	  	non-compiled	[CE]  missing  return  statement	35	None	add
254	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [CE]  missing  return  statement  [FE]                UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {	  	non-compiled	[CE]  missing  return  statement	35	None	add
255	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	17	None	add
256	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instancesof  Class  <?>)  {  [CE]  ')'  expected  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instancesof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instancesof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	17	None	add
257	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  <?>)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
258	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]          ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Class    <?>)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	17	None	add
259	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [CE]  inconvertible  types  [FE]            ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Class    <?>)    {    }  else  if(rawParentClass  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  inconvertible  types	17	None	add
260	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]              ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	17	None	add
261	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	73	None	replace
262	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  >=?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  >=?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  >=?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
263	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  >=?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  >=?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    >=?>)    {    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
264	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  ==?>)  {  [CE]  illegal  start  of  expression  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  ==?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  ==?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    >=?>)    {    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
265	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	7	None	replace
266	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  TypeVariable)  {  [CE]  inconvertible  types  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  inconvertible  types	7	None	replace
267	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  owner  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  cannot  find  symbol  owner	7	None	replace
268	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	117	None	add
269	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	117	None	add
270	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	117	None	add
271	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	117	None	add
272	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	117	None	add
273	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  TypeVariable)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	117	None	add
274	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]                UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	117	None	add
275	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  classTypeVariables  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);	  Type[]    classTypeVariables    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	101	None	replace
276	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  actualTypeParameters,  rawParentClass);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  actualTypeParameters,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  actualTypeParameters,  rawParentClass);	  Type[]    classTypeVariables    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	101	None	replace
277	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass,  fieldTypeVariable);  [CE]  cannot  find  symbol  fieldTypeVariable  [FE]                                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass,  fieldTypeVariable);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass,  fieldTypeVariable);	  Type[]    classTypeVariables    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  cannot  find  symbol  fieldTypeVariable	101	None	replace
278	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass,  typeToEvaluate);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass,  typeToEvaluate);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass,  typeToEvaluate);	  Type[]    classTypeVariables    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	101	None	replace
279	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  actualTypeParameters);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  actualTypeParameters);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  actualTypeParameters);	  Type[]    classTypeVariables    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	101	None	replace
280	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass,  owner);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass,  owner);	  Type[]    classTypeVariables    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	101	None	replace
281	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass,  actualTypeParameters);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass,  actualTypeParameters);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  classTypeVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass,  actualTypeParameters);	  Type[]    classTypeVariables    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	101	None	replace
282	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  rawParentClass,  parentType);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  rawParentClass,  parentType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  rawParentClass,  parentType);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	78	None	replace
283	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass,  owner);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	78	None	replace
284	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(objParameterizedType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(objParameterizedType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(objParameterizedType.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	78	None	replace
285	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass,  typeToEvaluate);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass,  typeToEvaluate);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass,  typeToEvaluate);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	78	None	replace
286	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  >=?>)  {  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  >=?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  >=?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    >=?>)    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
287	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  ==?>)  {  [CE]  illegal  start  of  expression  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  ==?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  ==?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    >=?>)    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
288	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable!=?>)  {  [CE]  illegal  start  of  expression  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable!=?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable!=?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    >=?>)    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
289	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  >>?>)  {  [CE]  illegal  start  of  expression  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  >>?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  >>?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    >=?>)    {    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
290	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  not  a  statement  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  not  a  statement	113	None	replace
291	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  not  a  statement	113	None	replace
292	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	119	None	add
293	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	119	None	add
294	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	119	None	add
295	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	119	None	add
296	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  TypeVariable  ||  parentType  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  TypeVariable  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(parentType  instanceof  TypeVariable  ||  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	119	None	add
297	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(owner  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  owner  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(owner  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(owner  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  cannot  find  symbol  owner	119	None	add
298	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  BooleanArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	110	None	replace
299	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  BooleanArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
300	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
301	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
302	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	81	None	replace
303	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	81	None	replace
304	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	81	None	replace
305	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(castedType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	81	None	replace
306	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawParentClass,  rawParentType);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawParentClass,  rawParentType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawParentClass,  rawParentType);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	82	None	replace
307	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType,  rawParentClass,  rawParentType);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType,  rawParentClass,  rawParentType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(castedType,  rawParentClass,  rawParentType);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	82	None	replace
308	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType,  actualTypeParameters,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType,  actualTypeParameters,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(castedType,  actualTypeParameters,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	82	None	replace
309	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualType,  rawType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualType,  rawType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(actualType,  rawType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	82	None	replace
310	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  rawType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  rawType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(owner,  rawType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	82	None	replace
311	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	15	None	add
312	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	15	None	add
313	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	15	None	add
314	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	15	None	add
315	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(owner  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  owner  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(owner  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(owner  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  owner	15	None	add
316	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    actualTypeParameters    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	14	None	replace
317	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  GenericArrayType)  {  [CE]  ')'  expected  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instancesof    GenericArrayType)    {    	non-compiled	[CE]  ')'  expected	123	None	replace
318	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  GenericArrayType)  {  [CE]  ')'  expected  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instancesof    GenericArrayType)    {    	non-compiled	[CE]  ')'  expected	123	None	replace
319	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType,  rawParentClass)  {  [CE]  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType,  rawParentClass)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType,    rawParentClass)    {    	non-compiled	[CE]  	57	None	replace
320	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType,  actualTypeParameters)  {  [CE]  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType,  actualTypeParameters)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType,  actualTypeParameters)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType,    rawParentClass)    {    	non-compiled	[CE]  	57	None	replace
321	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType,  parentType)  {  [CE]  [FE]                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType,  parentType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType,  parentType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType,    rawParentClass)    {    	non-compiled	[CE]  	57	None	replace
322	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType,  rawParentClass)  {  [CE]  [FE]                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType,  rawParentClass)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType,    rawParentClass)    {    	non-compiled	[CE]  	57	None	replace
323	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType,  rawParentClass)  {  [CE]  [FE]                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType,  rawParentClass)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType,    rawParentClass)    {    	non-compiled	[CE]  	57	None	replace
324	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentTypeParameters  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  currentTypeParameters  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentTypeParameters  instanceof  BooleanArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentTypeParameters  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    actualTypeParameters    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  currentTypeParameters	58	None	replace
325	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    	compilable	  [FE]  ClassCastException  	40	1	replace
326	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class)  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    	compilable	  [FE]  ClassCastException  	40	1	replace
327	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeArrayType  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeArrayType  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  TypeArrayType  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
328	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	61	1	replace
329	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	61	1	replace
330	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	61	1	replace
331	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  ClassCastException  	61	1	replace
332	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {	  	non-compiled	[CE]  missing  return  statement	104	None	add
333	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	104	None	add
334	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {	  	non-compiled	[CE]  missing  return  statement	104	None	add
335	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	104	None	add
336	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class?)  {  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class?)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class?)  {	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
337	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	104	None	add
338	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  {  [CE]  ')'  expected  [FE]                UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  {	  	non-compiled	[CE]  ')'  expected	104	None	add
339	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	96	None	add
340	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	96	None	add
341	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instancesof  Class  <?>)  {  [CE]  ')'  expected  [FE]        ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instancesof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instancesof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	96	None	add
342	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  >=?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
343	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instancesof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]            ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instancesof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }  else  if(parentType  instancesof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	96	None	add
344	[BUG]  [BUGGY]  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  TypeToEvaluate  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }    else    if(TypeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  TypeToEvaluate	67	None	replace
345	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentTypeParameters  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  currentTypeParameters  [FE]          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentTypeParameters  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentTypeParameters  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    actualTypeParameters    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  currentTypeParameters	22	None	replace
346	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    actualTypeParameters    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	22	None	replace
347	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {	  	non-compiled	[CE]  missing  return  statement	102	None	add
348	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	102	None	add
349	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [CE]  missing  return  statement  [FE]        ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {	  	non-compiled	[CE]  missing  return  statement	102	None	add
350	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class?)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class?)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class?)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
351	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  {  [CE]  ')'  expected  [FE]            ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  {	  	non-compiled	[CE]  ')'  expected	102	None	add
352	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  >)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  >)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  >)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
353	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  typeVariable  <?>)  {  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  typeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  typeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    typeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
354	[BUG]  [BUGGY]  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  TypeToEvaluate  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(TypeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  TypeToEvaluate	94	None	replace
355	[BUG]  [BUGGY]  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  TypeToEvaluate  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(TypeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  TypeToEvaluate	94	None	replace
356	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  ==  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    	compilable	  [FE]  UnsupportedOperationException  	10	1	replace
357	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  ==  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    	compilable	  [FE]  UnsupportedOperationException  	10	1	replace
358	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  true)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  true)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    	compilable	  [FE]  ClassCastException  	10	1	replace
359	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  true)  {  [FE]  ClassCastException  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  true)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  true)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    	compilable	  [FE]  ClassCastException  	10	1	replace
360	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    	compilable	  [FE]  ClassCastException  	10	1	replace
361	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=  false)  {  [FE]  ClassCastException  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    	compilable	  [FE]  ClassCastException  	10	1	replace
362	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  ||  typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  TypeVariable  ||  typeToEvaluate  instanceof  GenericArrayType  ==  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    	compilable	  [FE]  ClassCastException  	10	1	replace
363	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  ||  typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [FE]  ClassCastException  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  ||  typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  TypeVariable  ||  typeToEvaluate  instanceof  GenericArrayType  ==  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    	compilable	  [FE]  ClassCastException  	10	1	replace
364	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	120	None	replace
365	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  owner  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  TypeVariable)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    	non-compiled	[CE]  cannot  find  symbol  owner	120	None	replace
366	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]              ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <  Object>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <  Object>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <    Object>)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	11	None	replace
367	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <  Object>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <  Object>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <    Object>)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	11	None	replace
368	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	100	None	replace
369	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  owner);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  owner);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	100	None	replace
370	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  typeToEvaluate);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  typeToEvaluate);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  typeToEvaluate);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	100	None	replace
371	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  actualTypeParameters);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  actualTypeParameters);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  actualTypeParameters);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	100	None	replace
372	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  actualTypeParameters,  rawParentClass);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  actualTypeParameters,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  actualTypeParameters,  rawParentClass);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	100	None	replace
373	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  objParameterizedType);  [CE]  cannot  find  symbol  objParameterizedType  [FE]                                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  objParameterizedType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  objParameterizedType);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  cannot  find  symbol  objParameterizedType	100	None	replace
374	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  actualType);  [CE]  cannot  find  symbol  actualType  [FE]                                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  actualType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  actualType);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  cannot  find  symbol  actualType	100	None	replace
375	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  owner  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  owner	85	None	replace
376	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  currentTypeParameters  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  currentTypeParameters  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  currentTypeParameters  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  currentTypeParameters  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  currentTypeParameters	85	None	replace
377	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentTypeParameters  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  currentTypeParameters  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentTypeParameters  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentTypeParameters  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    actualTypeParameters    instanceof    GenericArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  currentTypeParameters	50	None	replace
378	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instancesof    TypeVariable    <?>)    {    	non-compiled	[CE]  ')'  expected	135	None	replace
379	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instancesof    TypeVariable    <?>)    {    	non-compiled	[CE]  ')'  expected	135	None	replace
380	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  TypeVariable)  {  [CE]  inconvertible  types  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    	non-compiled	[CE]  inconvertible  types	148	None	replace
381	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
382	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
383	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  Collection  <?>)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
384	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  owner  [FE]                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  owner  instanceof  Collection  <?>)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  owner	88	None	replace
385	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  owner);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	98	None	replace
386	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  typeToEvaluate);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  typeToEvaluate);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  typeToEvaluate);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	98	None	replace
387	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  parentType)  {  [CE]  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  parentType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  parentType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>,    rawParentClass)    {    	non-compiled	[CE]  	149	None	replace
388	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  actualTypeParameters)  {  [CE]  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  actualTypeParameters)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  actualTypeParameters)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>,    rawParentClass)    {    	non-compiled	[CE]  	149	None	replace
389	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>,    rawParentClass)    {    	non-compiled	[CE]  ')'  expected	149	None	replace
390	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  GenericArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>,    rawParentClass)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	149	None	replace
391	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  ')'  expected  [FE]                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>,    rawParentClass)    {    	non-compiled	[CE]  ')'  expected	149	None	replace
392	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Collection  <?>,  rawParentClass)  {  [CE]  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Collection  <?>,  rawParentClass)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Collection  <?>,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Collection    <?>,    rawParentClass)    {    	non-compiled	[CE]  	87	None	replace
393	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Collection  <?>,  actualTypeParameters)  {  [CE]  [FE]                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Collection  <?>,  actualTypeParameters)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Collection  <?>,  actualTypeParameters)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Collection    <?>,    rawParentClass)    {    	non-compiled	[CE]  	87	None	replace
394	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Collection  <?>,  rawParentClass)  {  [CE]  [FE]                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Collection  <?>,  rawParentClass)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Collection  <?>,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Collection    <?>,    rawParentClass)    {    	non-compiled	[CE]  	87	None	replace
395	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Collection  <?>,  rawParentClass)  {  [CE]  [FE]                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Collection  <?>,  rawParentClass)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Collection  <?>,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Collection    <?>,    rawParentClass)    {    	non-compiled	[CE]  	87	None	replace
396	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Collection  <?>,  parentType)  {  [CE]  [FE]                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Collection  <?>,  parentType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Collection  <?>,  parentType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Collection    <?>,    rawParentClass)    {    	non-compiled	[CE]  	87	None	replace
397	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass,  owner);	  Type[]    actualTypeParameters    =    extractRealTypes(typeToEvaluate,    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	84	None	replace
398	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  typeToEvaluate);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  typeToEvaluate);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  typeToEvaluate);	  Type[]    actualTypeParameters    =    extractRealTypes(typeToEvaluate,    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	84	None	replace
399	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass,  typeToEvaluate);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass,  typeToEvaluate);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass,  typeToEvaluate);	  Type[]    actualTypeParameters    =    extractRealTypes(typeToEvaluate,    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	84	None	replace
400	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    GenericArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	47	None	replace
401	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  GenericArrayType)  {  [CE]  inconvertible  types  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  rawParentClass  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    GenericArrayType)    {    	non-compiled	[CE]  inconvertible  types	47	None	replace
402	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  owner  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    GenericArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  owner	47	None	replace
403	[BUG]  [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class)  {  [CE]  inconvertible  types  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(rawParentClass  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }    else    if(actualTypeParameters    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	non-compiled	[CE]  inconvertible  types	44	None	replace
404	[BUG]  [BUGGY]  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Class)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }    else    if(actualTypeParameters    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	44	None	replace
405	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class)  {  [CE]  cannot  find  symbol  rawType  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(rawType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(rawType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }    else    if(actualTypeParameters    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	non-compiled	[CE]  cannot  find  symbol  rawType	44	None	replace
406	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	48	None	add
407	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	48	None	add
408	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	48	None	add
409	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	48	None	add
410	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  TypeToEvaluate  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  TypeToEvaluate	48	None	add
411	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [CE]  ')'  expected  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  ')'  expected	48	None	add
412	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typesToEvaluate  instanceof  Collection  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typesToEvaluate    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	138	None	replace
413	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instancesof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instancesof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instancesof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instancesof    TypeVariable    <?>)    {    	non-compiled	[CE]  ')'  expected	107	None	replace
414	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  TypeVariable  <?>)  {  [CE]  inconvertible  types  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  inconvertible  types	25	None	replace
415	[BUG]  [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  inconvertible  types  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(rawParentClass  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  inconvertible  types	25	None	replace
416	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
417	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
418	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {	  	non-compiled	[CE]  missing  return  statement	71	None	add
419	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  [CE]  missing  return  statement  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {	  	non-compiled	[CE]  missing  return  statement	71	None	add
420	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  true)  {  [CE]  missing  return  statement  [FE]        ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  true)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  true)  {	  	non-compiled	[CE]  missing  return  statement	71	None	add
421	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ==  false)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]          ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  ==  false)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	71	None	add
422	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  >=  false)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  >=  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  >=  false)  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	71	None	add
423	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ==  false)  {  [CE]  ')'  expected  [FE]              ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  ==  false)  {	  	non-compiled	[CE]  ')'  expected	71	None	add
424	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(parentType  instanceof  GenericArrayType  ==  false)  {  [CE]  missing  return  statement  [FE]                ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(parentType  instanceof  GenericArrayType  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    }  else  if(parentType  instanceof  GenericArrayType  ==  false)  {	  	non-compiled	[CE]  missing  return  statement	71	None	add
425	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	124	None	add
426	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	124	None	add
427	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	124	None	add
428	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  actualTypeParameters  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	124	None	add
429	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]            UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	124	None	add
430	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]              UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(actualTypeParameters  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    }  else  if(actualTypeParameters  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	124	None	add
431	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]                UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	124	None	add
432	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	70	None	replace
433	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	70	None	replace
434	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>,  rawParentClass)  {  [CE]  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>,  rawParentClass)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  	70	None	replace
435	[BUG]  [BUGGY]  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(actualTypeParameters  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typetoEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	116	None	replace
436	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  rawType  [FE]                  ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(rawType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(rawType  instanceof  GenericArrayType  ||  rawParentClass  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typetoEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  cannot  find  symbol  rawType	116	None	replace
437	[BUG]  [BUGGY]  }  else  if(actualType  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  actualType  [FE]                    ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(actualType  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(actualType  instanceof  GenericArrayType  ||  actualTypeParameters  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typetoEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  cannot  find  symbol  actualType	116	None	replace
438	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]            ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typesToEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	114	None	replace
439	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>,  rawParentClass)  {  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>,  rawParentClass)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>,    rawParentClass)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
440	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  <?>,  rawParentClass)  {  [CE]  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  <?>,  rawParentClass)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  <?>,  rawParentClass)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>,    rawParentClass)    {    	non-compiled	[CE]  	149	None	replace
441	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>,  parentType)  {  [CE]  illegal  start  of  expression  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>,  parentType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>,  parentType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>,    rawParentClass)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
442	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [CE]  'else'  without  'if'  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Class    <?>)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	17	None	add
443	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  >=?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
444	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  RawParentClass  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  RawParentClass  [FE]        ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  RawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  RawParentClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  RawParentClass	17	None	add
445	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  cannot  find  symbol  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
446	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {	  	non-compiled	[CE]  not  a  statement	9	None	add
447	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  'else'  without  'if'	147	None	add
448	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instancesof  TypeVariable)  {  [CE]  ')'  expected  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instancesof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instancesof  TypeVariable)  {	  	non-compiled	[CE]  ')'  expected	147	None	add
449	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  ==  null)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  ==  null)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Collection    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	137	1	replace
450	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  ==  null)  {  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  ==  null)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  ==  null)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Collection    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	137	1	replace
451	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [CE]  ')'  expected  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  ')'  expected	117	None	add
452	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [CE]  'else'  without  'if'  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  'else'  without  'if'	117	None	add
453	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  TypeToEvaluate  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable)    {    }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  cannot  find  symbol  TypeToEvaluate	117	None	add
454	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  not  a  statement	6	None	add
455	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  'else'  without  'if'  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  'else'  without  'if'	6	None	add
456	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  ')'  expected  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  ')'  expected	6	None	add
457	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  TypeVariable)  {  [CE]  ')'  expected  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  TypeVariable)  {	  	non-compiled	[CE]  ')'  expected	6	None	add
458	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [CE]  'else'  without  'if'  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {	  	non-compiled	[CE]  'else'  without  'if'	71	None	add
459	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  typeToEvaluate  =(GenericArrayType)typeToEvaluate;  [CE]  missing  return  statement  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  typeToEvaluate  =(GenericArrayType)typeToEvaluate;  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    typeToEvaluate  =(GenericArrayType)typeToEvaluate;	  	non-compiled	[CE]  missing  return  statement	71	None	add
460	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  GenericArrayType  castedType  =(GenericArrayType)typeToEvaluate;  [CE]  missing  return  statement  [FE]        ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  GenericArrayType  castedType  =(GenericArrayType)typeToEvaluate;  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    GenericArrayType  castedType  =(GenericArrayType)typeToEvaluate;	  	non-compiled	[CE]  missing  return  statement	71	None	add
461	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  {  false)  {  [CE]  ')'  expected  [FE]          ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  {  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  {  false)  {	  	non-compiled	[CE]  ')'  expected	71	None	add
462	[BUG]  [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  inconvertible  types  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(rawParentClass  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(rawParentClass  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }    else    if(actualTypeParameters    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  inconvertible  types	93	None	replace
463	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    GenericArrayType)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  'else'  without  'if'	46	None	add
464	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    GenericArrayType)    {    typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  not  a  statement	46	None	add
465	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  GenericArrayType)  {  [CE]  ')'  expected  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  GenericArrayType)  {	  	non-compiled	[CE]  ')'  expected	46	None	add
466	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  illegal  start  of  expression  [FE]                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
467	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	98	None	replace
468	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  typeToEvaluate,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  typeToEvaluate,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType,  typeToEvaluate,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(typeToEvaluate,    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	84	None	replace
469	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  owner  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  BooleanArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  owner  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  owner	55	None	replace
470	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>  {  [CE]  ')'  expected  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    {    	non-compiled	[CE]  ')'  expected	8	None	replace
471	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
472	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  illegal  start  of  expression  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType!=?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
473	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  rawType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  rawType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  rawType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	82	None	replace
474	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	112	1	replace
475	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  [FE]  UnsupportedOperationException  [FE]        ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	112	1	replace
476	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	125	None	replace
477	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(owner,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	81	None	replace
478	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeParameters(),  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeParameters(),  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeParameters(),  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	81	None	replace
479	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	81	None	replace
480	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  true)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType!=  true)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    	compilable	  [FE]  ClassCastException  	75	1	replace
481	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  true)  {  [FE]  ClassCastException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  true)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType!=  true)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    	compilable	  [FE]  ClassCastException  	75	1	replace
482	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType!=  null)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType!=  null)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	105	1	replace
483	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType!=  null)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType!=  null)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType!=  null)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	105	1	replace
484	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawParentClass,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawParentClass,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawParentClass,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass,    parentType);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	154	None	replace
485	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  rawParentClass,  parentType);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  rawParentClass,  parentType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  rawParentClass,  parentType);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass,    parentType);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	154	None	replace
486	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  rawParentClass,  parentType);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  rawParentClass,  parentType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(owner,  rawParentClass,  parentType);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass,    parentType);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	154	None	replace
487	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  null  ||  typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  null  ||  typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  null  ||  typeToEvaluate  instanceof  GenericArrayType  ==  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	72	None	replace
488	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	31	None	add
489	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  not  a  statement	31	None	add
490	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  ')'  expected	31	None	add
491	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  >=?>)  {  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  >=?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
492	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {	  	non-compiled	[CE]  'else'  without  'if'	35	None	add
493	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typetoEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [CE]  cannot  find  symbol  typetoEvaluate  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(typetoEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class)    {    }  else  if(typetoEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {	  	non-compiled	[CE]  cannot  find  symbol  typetoEvaluate	35	None	add
494	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawTypeParameters,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawTypeParameters,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawTypeParameters,  owner);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    owner);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	83	None	replace
495	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  owner);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    owner);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	83	None	replace
496	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  actualTypeParameters,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(owner,  actualTypeParameters,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(owner,  actualTypeParameters,  owner);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    owner);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	83	None	replace
497	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawType,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawType,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawType,  owner);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    owner);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	83	None	replace
498	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  not  a  statement  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  not  a  statement	33	None	add
499	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  'else'  without  'if'  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  'else'  without  'if'	33	None	add
500	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
501	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]          ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);	  	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	33	None	add
502	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
503	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instancesof  GenericArrayType)  {  [CE]  ')'  expected  [FE]              ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instancesof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instancesof  GenericArrayType)  {	  	non-compiled	[CE]  ')'  expected	33	None	add
504	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
505	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	73	None	replace
506	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {	  	non-compiled	[CE]  'else'  without  'if'	74	None	add
507	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType!=  false)  {  [CE]  ')'  expected  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType!=  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType!=  false)  {	  	non-compiled	[CE]  ')'  expected	74	None	add
508	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  typeToEvaluate  =(GenericArrayType)typeToEvaluate;  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  typeToEvaluate  =(GenericArrayType)typeToEvaluate;  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    typeToEvaluate  =(GenericArrayType)typeToEvaluate;	  	non-compiled	[CE]  missing  return  statement	74	None	add
509	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==?>  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
510	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  ==  null)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  ==  null)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Collection    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	86	1	replace
511	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  ==  null)  {  [FE]  UnsupportedOperationException  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  ==  null)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  ==  null)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Collection    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	86	1	replace
512	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [CE]  'else'  without  'if'  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {	  	non-compiled	[CE]  'else'  without  'if'	102	None	add
513	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType!=  null)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType!=  null)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    BooleanArrayType)    {    	compilable	  [FE]  ClassCastException  	56	1	replace
514	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType!=  null)  {  [FE]  ClassCastException  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType!=  null)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType!=  null)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    BooleanArrayType)    {    	compilable	  [FE]  ClassCastException  	56	1	replace
515	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]              ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <  Object>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <  Object>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <    Object>)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	11	None	replace
516	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <  Object>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <  Object>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <    Object>)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	11	None	replace
517	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType.getGenericArrayType()  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType.getGenericArrayType()  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }  else  if(parentType.getGenericArrayType()  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	96	None	add
518	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  'else'  without  'if'  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	96	None	add
519	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawParentClass,  parentType);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawParentClass,  parentType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType,  rawParentClass,  parentType);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	80	None	replace
520	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	12	None	add
521	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  TypeToEvaluate  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  TypeToEvaluate	12	None	add
522	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [CE]  'else'  without  'if'  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	12	None	add
523	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable    <?>)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	20	None	add
524	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	20	None	add
525	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable    <?>)    {    typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  not  a  statement	20	None	add
526	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instancesof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instancesof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instancesof  TypeVariable  <?>)  {	  	non-compiled	[CE]  ')'  expected	20	None	add
527	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  parentType  instanceof  Class)  {  [CE]  ')'  expected  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  parentType  instanceof  Class)  {	  	non-compiled	[CE]  ')'  expected	104	None	add
528	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [CE]  cannot  find  symbol  TypeToEvaluate  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {	  	non-compiled	[CE]  cannot  find  symbol  TypeToEvaluate	104	None	add
529	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [CE]  'else'  without  'if'  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class)  {	  	non-compiled	[CE]  'else'  without  'if'	104	None	add
530	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  'else'  without  'if'  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	23	None	add
531	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >=?>)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >=?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
532	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	139	1	replace
533	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {  [FE]  ClassCastException  [FE]        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  ClassCastException  	139	1	replace
534	[BUG]  [BUGGY]  Type[]  rawParentClass  =  extractRealTypes(rawType,  parentType,  rawParentClass);  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawParentClass  =  extractRealTypes(rawType,  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawParentClass  =  extractRealTypes(rawType,  parentType,  rawParentClass);	  Type[]    classTypeVariables    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	101	None	replace
535	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getRawTypeParameters(),  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getRawTypeParameters(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getRawTypeParameters(),  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(typeToEvaluate.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	79	None	replace
536	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  BooleanArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
537	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  BooleanArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
538	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  'else'  without  'if'	48	None	add
539	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  childType  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  childType  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  childType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  childType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  childType	48	None	add
540	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  objParameterizedType,  rawParentClass);  [CE]  cannot  find  symbol  objParameterizedType  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  objParameterizedType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  objParameterizedType,  rawParentClass);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  cannot  find  symbol  objParameterizedType	100	None	replace
541	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class    <?>)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	37	None	add
542	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class    <?>)    {    typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  not  a  statement	37	None	add
543	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  Class  <?>)  {  [CE]  ')'  expected  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instancesof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	15	None	add
544	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	15	None	add
545	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  'else'  without  'if'  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	15	None	add
546	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [CE]  ')'  expected  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instancesof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  ')'  expected	124	None	add
547	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [CE]  'else'  without  'if'  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  'else'  without  'if'	124	None	add
548	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  TypeToEvaluate  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    }  else  if(TypeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  TypeToEvaluate	124	None	add
549	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instancesof  GenericArrayType)  {  [CE]  ')'  expected  [FE]          UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instancesof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instancesof  GenericArrayType)  {	  	non-compiled	[CE]  ')'  expected	124	None	add
550	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  'else'  without  'if'	156	None	add
551	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  typeToEvaluate  =(GenericArrayType)typeToEvaluate;  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  typeToEvaluate  =(GenericArrayType)typeToEvaluate;  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    typeToEvaluate  =(GenericArrayType)typeToEvaluate;	  	non-compiled	[CE]  missing  return  statement	156	None	add
552	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  <  [CE]  illegal  start  of  type  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  <  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  <	  	non-compiled	[CE]  illegal  start  of  type	156	None	add
553	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  rawType,  rawParentClass);  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  rawType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  rawType,  rawParentClass);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
554	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(catType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  cannot  find  symbol  catType  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(catType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(catType.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  cannot  find  symbol  catType	99	None	replace
555	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  cannot  find  symbol  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
556	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  typeToEvaluate  =  getGenericArrayType(parentType);  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  typeToEvaluate  =  getGenericArrayType(parentType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  typeToEvaluate  =  getGenericArrayType(parentType);	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
557	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	128	None	add
558	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instancesof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instancesof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instancesof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  ')'  expected	128	None	add
559	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType  <?>)  {  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  BooleanArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
560	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType  >=?>)  {  [CE]  illegal  start  of  expression  [FE]                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType  >=?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  BooleanArrayType  >=?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
561	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  primaryType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  primaryType  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  primaryType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  primaryType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    owner    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  primaryType	19	None	replace
562	[BUG]  [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(parentType);  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawParentClass  =  actualTypeParameters.toArray(parentType);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawParentClass  =  actualTypeParameters.toArray(parentType);	  Type[]    rawParentClass    =    actualTypeParameters.toArray(rawType);    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	151	None	replace
563	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  ==  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    	compilable	  [FE]  UnsupportedOperationException  	10	1	replace
564	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  ==  false)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  ==  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    	compilable	  [FE]  UnsupportedOperationException  	10	1	replace
565	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  ==  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    	compilable	  [FE]  ClassCastException  	10	1	replace
566	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  ==  false)  {  [FE]  ClassCastException  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  ==  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    	compilable	  [FE]  ClassCastException  	10	1	replace
567	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  not  a  statement  [FE]          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	non-compiled	[CE]  not  a  statement	122	None	replace
568	[BUG]  [BUGGY]  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  not  a  statement  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	non-compiled	[CE]  not  a  statement	122	None	replace
569	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters!=  null)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                      UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters!=  null)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters!=  null)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    &&    actualTypeParameters.length    >    0)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	77	None	replace
570	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters.length  ==  0)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]                        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters.length  ==  0)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>  &&  actualTypeParameters.length  ==  0)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    &&    actualTypeParameters.length    >    0)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	77	None	replace
571	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  'else'  without  'if'	119	None	add
572	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  typeVariable)  {  [CE]  cannot  find  symbol  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  typeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  typeVariable)  {	  	non-compiled	[CE]  cannot  find  symbol	119	None	add
573	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  not  a  statement  [FE]        UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  not  a  statement	145	None	replace
574	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [CE]  'else'  without  'if'  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {	  	non-compiled	[CE]  'else'  without  'if'	39	None	add
575	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  typeToEvaluate  =(GenericArrayType)typeToEvaluate;  [CE]  missing  return  statement  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  typeToEvaluate  =(GenericArrayType)typeToEvaluate;  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    typeToEvaluate  =(GenericArrayType)typeToEvaluate;	  	non-compiled	[CE]  missing  return  statement	39	None	add
576	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  realTypeParameters  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  realTypeParameters  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  realTypeParameters  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  realTypeParameters  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    actualTypeParameters    instanceof    GenericArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  realTypeParameters	50	None	replace
577	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  parentType  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	142	None	replace
578	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  primaryTypeParameters  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  primaryTypeParameters  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  primaryTypeParameters  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  primaryTypeParameters  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    actualTypeParameters    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeParameters	14	None	replace
579	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  currentType  [FE]                ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  currentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    owner    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  currentType	19	None	replace
580	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType,  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType,  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    parentType,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	80	None	replace
581	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToevaluate  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  typeToevaluate  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToevaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToevaluate  instanceof  TypeVariable)  {	  	non-compiled	[CE]  cannot  find  symbol  typeToevaluate	6	None	add
582	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeArguments,  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeArguments,  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(actualTypeArguments,  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	81	None	replace
583	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(classToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  classToEvaluate  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(classToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Class    <?>)    {    }  else  if(classToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  classToEvaluate	17	None	add
584	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  TypeToEvaluate  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    rawParentClass    instanceof    Class    <?>)    {    }  else  if(TypeToEvaluate  instanceof  GenericArrayType  ||  rawParentClass  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  TypeToEvaluate	17	None	add
585	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  childType  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  childType  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  childType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  childType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  childType	20	None	add
586	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentsType  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  parentsType  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentsType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentsType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  parentsType	20	None	add
587	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  not  a  statement	48	None	add
588	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable)    {    typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  not  a  statement	117	None	add
589	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  childType  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  childType  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  childType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    TypeVariable)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  childType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  cannot  find  symbol  childType	117	None	add
590	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  primaryTypeParameters  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  primaryTypeParameters  [FE]          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  primaryTypeParameters  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  primaryTypeParameters  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    actualTypeParameters    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  primaryTypeParameters	22	None	replace
591	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	31	None	add
592	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable    <?>)    {    instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
593	[BUG]  [BUGGY]  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  not  a  statement  [FE]          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    	non-compiled	[CE]  not  a  statement	140	None	replace
594	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	15	None	add
595	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType.equals(typeToEvaluate))  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType.equals(typeToEvaluate))  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }    else    if(typeToEvaluate    instancesof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	45	1	replace
596	[BUG]  [BUGGY]  }  else  if(parentType.equals(typeToEvaluate))  {  [FE]  UnsupportedOperationException  [FE]                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType.equals(typeToEvaluate))  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType.equals(typeToEvaluate))  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    }    else    if(typeToEvaluate    instancesof    GenericArrayType    ||    typeToEvaluate    instanceof    Class)    {    	compilable	  [FE]  UnsupportedOperationException  	45	1	replace
597	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  Class  <?>)  {  [CE]  ')'  expected  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instancesof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	37	None	add
598	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  parentType,  owner);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                  UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  parentType,  owner);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(actualTypeParameters,  parentType,  owner);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    owner);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	83	None	replace
599	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  parentType  instanceof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>    ||    parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  ')'  expected	76	None	replace
600	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType;|  parentType  instanceof  GenericArrayType)  {  [CE]  ')'  expected  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType;|  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  GenericArrayType;|  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  ')'  expected	156	None	add
601	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  <  GenericArrayType>  {  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  <  GenericArrayType>  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    GenericArrayType)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  GenericArrayType)  <  GenericArrayType>  {	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
602	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  >>  false)  {  [CE]  cannot  find  symbol  GenericArrayType  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  >>  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  >>  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    	non-compiled	[CE]  cannot  find  symbol  GenericArrayType	75	None	replace
603	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  [Delete]  false)  {  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  [Delete]  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  [Delete]  false)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    	non-compiled	[CE]  	75	None	replace
604	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  ')'  expected  [FE]          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instancesof  GenericArrayType  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }    else    if(typeToEvaluate    instancesof    GenericArrayType    ||    typeToEvaluate    instanceof    GenericArrayType)    {    	non-compiled	[CE]  ')'  expected	66	None	replace
605	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  childType  instanceof  BooleanArrayType)  {  [CE]  cannot  find  symbol  childType  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  childType  instanceof  BooleanArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  childType  instanceof  BooleanArrayType)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    BooleanArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  childType	109	None	replace
606	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  childType  instanceof  Collection  <?>)  {  [CE]  cannot  find  symbol  childType  [FE]                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  childType  instanceof  Collection  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  childType  instanceof  Collection  <?>)  {	  }    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Collection    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  childType	88	None	replace
607	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class)    {    }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class)  {	  	non-compiled	[CE]  missing  return  statement	102	None	add
608	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >>?>)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >>?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  >>?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    >=?>)    {    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
609	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  actualTypeParameters);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  actualTypeParameters);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass,  actualTypeParameters);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	100	None	replace
610	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	33	None	add
611	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluated  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  typeToEvaluated  [FE]      ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  GenericArrayType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluated  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    GenericArrayType)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluated  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  typeToEvaluated	33	None	add
612	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=  null)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable!=  null)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	8	None	replace
613	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  BooleanArrayType  <?>)  {  [CE]  cannot  find  symbol  typesToEvaluate  [FE]                    UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  BooleanArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typesToEvaluate  instanceof  BooleanArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    BooleanArrayType    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  typesToEvaluate	59	None	replace
614	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
615	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  &&  parentType  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
616	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    Class    <?>)    {    }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	96	None	add
617	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  }  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    }  if(typeToEvaluate  instanceof  GenericArrayType  ==  false)  {	  	non-compiled	[CE]  missing  return  statement	71	None	add
618	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualType,  parentType,  rawParentClass);  [CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(actualType,  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(actualType,  parentType,  rawParentClass);	  Type[]    actualTypeParameters    =    extractRealTypes(rawType,    actualTypeParameters,    rawParentClass);    	non-compiled	[CE]  variable  actualTypeParameters  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	82	None	replace
619	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(groupType  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [CE]  cannot  find  symbol  groupType  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  }  else  if(groupType  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    }  else  if(groupType  instanceof  GenericArrayType  &&  parentType  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  cannot  find  symbol  groupType	124	None	add
620	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(classToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [CE]  cannot  find  symbol  classToEvaluate  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  }  else  if(classToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    typeToEvaluate    instanceof    Class)    {    }  else  if(classToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  Class)  {	  	non-compiled	[CE]  cannot  find  symbol  classToEvaluate	35	None	add
621	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  true)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  true)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType!=    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType!=  true)  {	  	non-compiled	[CE]  missing  return  statement	74	None	add
622	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  childType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  childType  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  childType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  childType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  childType	12	None	add
623	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    Class    <?>)    {    typeToEvaluate  instanceof  GenericArrayType  &&  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  not  a  statement	12	None	add
624	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  missing  return  statement	119	None	add
625	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  childType  instanceof  TypeVariable)  {  [CE]  cannot  find  symbol  childType  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  childType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  childType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  cannot  find  symbol  childType	119	None	add
626	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable?)  {  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable?)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable?)  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
627	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass  ||  typeToEvaluate  instanceof  GenericArrayType  <?>)  {  [CE]  ')'  expected  [FE]            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass  ||  typeToEvaluate  instanceof  GenericArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass  ||  typeToEvaluate  instanceof  GenericArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>,    rawParentClass)    {    	non-compiled	[CE]  ')'  expected	149	None	replace
628	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass  ||  parentType  instanceof  GenericArrayType  <?>)  {  [CE]  ')'  expected  [FE]              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass  ||  parentType  instanceof  GenericArrayType  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  <?>,  rawParentClass  ||  parentType  instanceof  GenericArrayType  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    <?>,    rawParentClass)    {    	non-compiled	[CE]  ')'  expected	149	None	replace
629	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  castedType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                          UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rawType,  castedType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rawType,  castedType.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	99	None	replace
630	[BUG]  [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rastedType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  cannot  find  symbol  rastedType  [FE]                            UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawTypeParameters  =  extractRealTypes(rastedType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawTypeParameters  =  extractRealTypes(rastedType.getActualTypeArguments(),  parentType,  rawParentClass);	  Type[]    rawTypeParameters    =    extractRealTypes(rawType.getActualTypeArguments(),    parentType,    rawParentClass);    	non-compiled	[CE]  cannot  find  symbol  rastedType	99	None	replace
631	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  if(parentType  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	23	None	add
632	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]            ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType.equals(typeToEvaluate)||  parentType.equals(typeToEvaluate))  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	add	}  else  if(parentType.equals(typeToEvaluate)||  parentType.equals(typeToEvaluate))  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }    else    if(typeToEvaluate    instanceof    TypeVariable    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	3	1	replace
633	[BUG]  [BUGGY]  }  else  if(parentType.equals(typeToEvaluate)||  parentType.equals(typeToEvaluate))  {  [FE]  UnsupportedOperationException  [FE]            ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType.equals(typeToEvaluate)||  parentType.equals(typeToEvaluate))  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType.equals(typeToEvaluate)||  parentType.equals(typeToEvaluate))  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    }    else    if(typeToEvaluate    instanceof    TypeVariable    ||    typeToEvaluate    instanceof    TypeVariable)    {    	compilable	  [FE]  UnsupportedOperationException  	3	1	replace
634	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  type  GenericArrayType  does  not  take  parameters  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(parentType  instanceof  GenericArrayType  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  type  GenericArrayType  does  not  take  parameters	61	None	replace
635	[BUG]  [BUGGY]  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [CE]  not  a  statement  [FE]          ClassCastException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable)    {    	non-compiled	[CE]  not  a  statement	113	None	replace
636	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters.length  >  0)  {  [CE]  cannot  find  symbol  actualTypeParameters  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters.length  >  0)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  &&  actualTypeParameters.length  >  0)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    &&    parentType    instanceof    GenericArrayType)    {    	non-compiled	[CE]  cannot  find  symbol  actualTypeParameters	125	None	replace
637	[BUG]  [BUGGY]  Type[]  rawParentClassVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass);  [CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                              UnsupportedOperationException      [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  Type[]  rawParentClassVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass);  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	Type[]  rawParentClassVariables  =  extractRealTypes(rawType,  parentType,  rawParentClass);	  Type[]    classTypeVariables    =    extractRealTypes(rawType,    parentType,    rawParentClass);    	non-compiled	[CE]  method  extractRealTypes  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	101	None	replace
638	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	128	None	add
639	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  childType  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  childType  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(parentType  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  GenericArrayType  ||  childType  instanceof  TypeVariable  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(parentType    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  GenericArrayType  ||  childType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  childType	128	None	add
640	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  null  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    ClassCastException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  null  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}  else  if(typeToEvaluate  instanceof  GenericArrayType  ==  null  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    GenericArrayType    ==    false)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	72	None	replace
641	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    parentType    instanceof    TypeVariable)    {    typeToEvaluate  instanceof  GenericArrayType  ||  parentType  instanceof  TypeVariable)  {	  	non-compiled	[CE]  not  a  statement	147	None	add
642	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
643	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  }  else  if(typeToEvaluate  instanceof  GenericArrayType)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    }  else  if(typeToEvaluate  instanceof  GenericArrayType)  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
644	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {  if  (typeToEvaluate  instanceof  Class<?>)  {  return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);      [BUGGY]  }  else  if(typeToEvaluate  instanceof  GenericArrayType  ||  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  ==  false)  {  [BUGGY]      GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);  }  else  if  (typeToEvaluate  instanceof  TypeVariable<?>)  {  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	69	69	1	replace	}    else    if(typeToEvaluate    instanceof    GenericArrayType    ||    typeToEvaluate    instanceof    TypeVariable    ==    false)    {    typeToEvaluate  instanceof  GenericArrayType  &&  typeToEvaluate  instanceof  TypeVariable  ==  false)  {	  	non-compiled	[CE]  not  a  statement	9	None	add
