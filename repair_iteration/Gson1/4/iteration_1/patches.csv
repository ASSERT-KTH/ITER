bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  ==  null  ||  parentType  ==  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	19	1	replace
2	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  ==  null)  {  [FE]  UnsupportedOperationException  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  ==  null  ||  parentType  ==  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	19	1	replace
3	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  rawParentClass  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(parentType  ==  null  ||  rawParentClass  ==  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	19	1	replace
4	[BUG]  [BUGGY]  if(parentType  ==  null  ||  rawParentClass  ==  null)  {  [FE]  UnsupportedOperationException  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  rawParentClass  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  ==  null  ||  rawParentClass  ==  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	19	1	replace
5	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate!=  null  ||  parentType  ==  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	19	1	replace
6	[BUG]  [BUGGY]  if(typeToEvaluate!=  null  ||  parentType  ==  null)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=  null  ||  parentType  ==  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	19	1	replace
7	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(parentType  ==  null  ||  parentType!=  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	19	1	replace
8	[BUG]  [BUGGY]  if(parentType  ==  null  ||  parentType!=  null)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  ==  null  ||  parentType!=  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	19	1	replace
9	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]            java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(rawParentClass  ==  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(rawParentClass  ==  null  ||  parentType  ==  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	19	1	replace
10	[BUG]  [BUGGY]  if(rawParentClass  ==  null  ||  parentType  ==  null)  {  [FE]  UnsupportedOperationException  [FE]            java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(rawParentClass  ==  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(rawParentClass  ==  null  ||  parentType  ==  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	19	1	replace
11	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]              java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  ==  null  ||  parentType!=  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	19	1	replace
12	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType!=  null)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]              java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  ==  null  ||  parentType!=  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	19	1	replace
13	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
14	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
15	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
16	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  UnsupportedOwnerType)  {  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  UnsupportedOwnerType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  UnsupportedOwnerType)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
17	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  CharacterizedType)  {  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  CharacterizedType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  CharacterizedType)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
18	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]              UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  ParameterizedType  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
19	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]                UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
20	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	5	1	replace
21	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	5	1	replace
22	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	5	1	replace
23	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	5	1	replace
24	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>,  rawParentClass)  {  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>,  rawParentClass)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>,  rawParentClass)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    	non-compiled	[CE]  	5	None	replace
25	[BUG]  [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  if(parentType!=  null  ||  parentType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  if(parentType!=  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null    ||    parentType    ==    null)    {    if(parentType!=  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
26	[BUG]  [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  if(parentType  ==  null  ||  parentType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  if(parentType  ==  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null    ||    parentType    ==    null)    {    if(parentType  ==  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
27	[BUG]  [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  if(parentType  ==  null  ||  parentType!=  null)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  if(parentType  ==  null  ||  parentType!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null    ||    parentType    ==    null)    {    if(parentType  ==  null  ||  parentType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
28	[BUG]  [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  if(parentType  >=  null  ||  parentType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  if(parentType  >=  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null    ||    parentType    ==    null)    {    if(parentType  >=  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
29	[BUG]  [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  if(parentType  >>  null  ||  parentType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  if(parentType  >>  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null    ||    parentType    ==    null)    {    if(parentType  >>  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
30	[BUG]  [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  if(parentType!=  null  ||  parentType  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  if(parentType!=  null  ||  parentType  >=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null    ||    parentType    ==    null)    {    if(parentType!=  null  ||  parentType  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
31	[BUG]  [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  If(parentType!=  null  ||  parentType  ==  null)  {  [CE]  ';'  expected  [FE]                java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  If(parentType!=  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null    ||    parentType    ==    null)    {    If(parentType!=  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
32	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
33	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
34	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  instanceof  ParameterizedType  ||  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	11	1	replace
35	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  parentType  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  ParameterizedType  ||  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	11	1	replace
36	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  ==  null  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
37	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  ==  null  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
38	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  ParameterizedType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  ==  null  ||  parentType  instanceof  ParameterizedType)  {	  if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
39	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  ParameterizedType)  {  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  ParameterizedType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  ==  null  ||  parentType  instanceof  ParameterizedType)  {	  if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
40	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
41	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
42	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate.getOwnerType()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate.getOwnerType()  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate!=  null  ||  typeToEvaluate.getOwnerType()  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
43	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate!=  null  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
44	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate  >=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
45	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate.getRawType()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate.getRawType()  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate!=  null  ||  typeToEvaluate.getRawType()  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
46	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate.isUnknownType())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate.isUnknownType())  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate!=  null  ||  typeToEvaluate.isUnknownType())  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
47	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  parentType.getRawType()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  parentType.getRawType()  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate!=  null  ||  parentType.getRawType()  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
48	[BUG]  [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  if(parentType  ==  null  ||  parentType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  if(parentType  ==  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    ==    null    ||    parentType    ==    null)    {    if(parentType  ==  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
49	[BUG]  [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  if(parentType  ==  null  ||  parentType!=  null)  {  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  if(parentType  ==  null  ||  parentType!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    ==    null    ||    parentType    ==    null)    {    if(parentType  ==  null  ||  parentType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
50	[BUG]  [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  if(parentType!=  null  ||  parentType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  if(parentType!=  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    ==    null    ||    parentType    ==    null)    {    if(parentType!=  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
51	[BUG]  [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  if(parentType  ==  null  ||  parentType  >=  null)  {  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  if(parentType  ==  null  ||  parentType  >=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    ==    null    ||    parentType    ==    null)    {    if(parentType  ==  null  ||  parentType  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
52	[BUG]  [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  if(parentType  >=  null  ||  parentType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  if(parentType  >=  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    ==    null    ||    parentType    ==    null)    {    if(parentType  >=  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
53	[BUG]  [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  If(parentType  ==  null  ||  parentType  ==  null)  {  [CE]  ';'  expected  [FE]              UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  If(parentType  ==  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    ==    null    ||    parentType    ==    null)    {    If(parentType  ==  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
54	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
55	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate!=  null  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate!=  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    if(typeToEvaluate!=  null  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
56	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  >=  null  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  >=  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    if(typeToEvaluate  >=  null  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
57	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(parentType  ==  null  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(parentType  ==  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    if(parentType  ==  null  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
58	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  ==  null  ||  parentType  instancesof  Class  <?>)  {  [CE]  ')'  expected  [FE]            java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  ==  null  ||  parentType  instancesof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    if(typeToEvaluate  ==  null  ||  parentType  instancesof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	6	None	add
59	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  If(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]              java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  If(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    If(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
60	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  ==  null)  {	  if(typeToEvaluate!=    null)    {    	compilable	  [FE]  UnsupportedOperationException  	15	1	replace
61	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  ==  null)  {  [FE]  UnsupportedOperationException  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  ==  null)  {	  if(typeToEvaluate!=    null)    {    	compilable	  [FE]  UnsupportedOperationException  	15	1	replace
62	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate!=  null)  {	  if(typeToEvaluate!=    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	15	1	replace
63	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate!=  null)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate!=  null)  {	  if(typeToEvaluate!=    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	15	1	replace
64	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType!=  rawParentClass)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  ==  null  ||  parentType!=  rawParentClass)  {	  if(typeToEvaluate!=    null)    {    	compilable	  [FE]  UnsupportedOperationException  	15	1	replace
65	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType!=  rawParentClass)  {  [FE]  UnsupportedOperationException  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType!=  rawParentClass)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  ==  null  ||  parentType!=  rawParentClass)  {	  if(typeToEvaluate!=    null)    {    	compilable	  [FE]  UnsupportedOperationException  	15	1	replace
66	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  UnknownType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  UnknownType)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
67	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  UnknownType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  UnknownType)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
68	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  UnknownType  ||  typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  UnknownType  ||  typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  UnknownType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  UnknownType  ||  typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  UnknownType)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
69	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  UnknownType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  UnknownType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  UnknownType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
70	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(rawParentClass  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(rawParentClass  instanceof  Class  <?>)  {	  if(parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	9	1	replace
71	[BUG]  [BUGGY]  if(rawParentClass  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(rawParentClass  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(rawParentClass  instanceof  Class  <?>)  {	  if(parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	9	1	replace
72	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(parentType  ==  null  ||  parentType  instanceof  Class  <?>)  {	  if(parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	9	1	replace
73	[BUG]  [BUGGY]  if(parentType  ==  null  ||  parentType  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  ==  null  ||  parentType  instanceof  Class  <?>)  {	  if(parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	9	1	replace
74	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(parentType  instanceof  Class  <?>  ||  rawParentClass  instanceof  Class  <?>)  {	  if(parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	9	1	replace
75	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>  ||  rawParentClass  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  instanceof  Class  <?>  ||  rawParentClass  instanceof  Class  <?>)  {	  if(parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	9	1	replace
76	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(parentType!=  null  ||  parentType  instanceof  Class  <?>)  {	  if(parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	9	1	replace
77	[BUG]  [BUGGY]  if(parentType!=  null  ||  parentType  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=  null  ||  parentType  instanceof  Class  <?>)  {	  if(parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	9	1	replace
78	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    instanceof    Class    <?>)    {    if(parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
79	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    instanceof    Class    <?>)    {    if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
80	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    instanceof    Class    <?>)    {    if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
81	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>)  {  If(parentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>)  {  If(parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    instanceof    Class    <?>)    {    If(parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
82	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>)  throw  new  IllegalArgumentException( " "));  [CE]  [FE]            java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>)  throw  new  IllegalArgumentException( " "));  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    instanceof    Class    <?>)    {    if(parentType  instanceof  Class  <?>)  throw  new  IllegalArgumentException( " "));	  	non-compiled	[CE]  	8	None	add
83	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>)  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>)  throw  new  IllegalArgumentException( " ");  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    instanceof    Class    <?>)    {    if(parentType  instanceof  Class  <?>)  throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
84	[BUG]  [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null)    {    if(parentType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
85	[BUG]  [BUGGY]  if(parentType!=  null)  {  if(parentType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null)  {  if(parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null)    {    if(parentType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
86	[BUG]  [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  parentType!=  null)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  parentType!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null)    {    if(parentType!=  null  ||  parentType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
87	[BUG]  [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  parentType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null)    {    if(parentType!=  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
88	[BUG]  [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null)    {    if(parentType!=  null  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
89	[BUG]  [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null)    {    if(parentType!=  null  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
90	[BUG]  [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  rawParentClass  ==  parentType.getRawType())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  rawParentClass  ==  parentType.getRawType())  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null)    {    if(parentType!=  null  ||  rawParentClass  ==  parentType.getRawType())  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
91	[BUG]  [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  typeToEvaluate.getOwnerType()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  typeToEvaluate.getOwnerType()  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null)    {    if(parentType!=  null  ||  typeToEvaluate.getOwnerType()  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
92	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  ==  null  ||  rawParentClass  instanceof  Class  <?>)  {	  if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	7	1	replace
93	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  rawParentClass  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  ==  null  ||  rawParentClass  instanceof  Class  <?>)  {	  if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	7	1	replace
94	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(rawParentClass  ==  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(rawParentClass  ==  null  ||  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	7	1	replace
95	[BUG]  [BUGGY]  if(rawParentClass  ==  null  ||  parentType  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(rawParentClass  ==  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(rawParentClass  ==  null  ||  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	7	1	replace
96	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate!=  null  ||  rawParentClass  instanceof  Class  <?>)  {	  if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	7	1	replace
97	[BUG]  [BUGGY]  if(typeToEvaluate!=  null  ||  rawParentClass  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=  null  ||  rawParentClass  instanceof  Class  <?>)  {	  if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	7	1	replace
98	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>,  parentType)  {  [CE]  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>,  parentType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  Class  <?>,  parentType)  {	  if(typeToEvaluate    instanceof    Class    <?>,    rawParentClass)    {    	non-compiled	[CE]  	3	None	replace
99	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>,  rawParentClass)  {  [CE]  [FE]            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>,  rawParentClass)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  instanceof  Class  <?>,  rawParentClass)  {	  if(typeToEvaluate    instanceof    Class    <?>,    rawParentClass)    {    	non-compiled	[CE]  	3	None	replace
100	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>,  rawParentClass)  {  [CE]  [FE]              UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>,  rawParentClass)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>,  rawParentClass)  {	  if(typeToEvaluate    instanceof    Class    <?>,    rawParentClass)    {    	non-compiled	[CE]  	3	None	replace
101	[BUG]  [BUGGY]  if(rawParentClass  instanceof  Class  <?>,  typeToEvaluate)  {  [CE]  [FE]                UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(rawParentClass  instanceof  Class  <?>,  typeToEvaluate)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(rawParentClass  instanceof  Class  <?>,  typeToEvaluate)  {	  if(typeToEvaluate    instanceof    Class    <?>,    rawParentClass)    {    	non-compiled	[CE]  	3	None	replace
102	[BUG]  [BUGGY]  if(typeToEvaluate!=  null  ||  parentType  instanceof  Class  <?>,  rawParentClass)  {  [CE]  [FE]                  UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  parentType  instanceof  Class  <?>,  rawParentClass)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=  null  ||  parentType  instanceof  Class  <?>,  rawParentClass)  {	  if(typeToEvaluate    instanceof    Class    <?>,    rawParentClass)    {    	non-compiled	[CE]  	3	None	replace
103	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>,  parentType  ||  rawParentClass  ==  null)  {  [CE]  ')'  expected  [FE]                    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>,  parentType  ||  rawParentClass  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  Class  <?>,  parentType  ||  rawParentClass  ==  null)  {	  if(typeToEvaluate    instanceof    Class    <?>,    rawParentClass)    {    	non-compiled	[CE]  ')'  expected	3	None	replace
104	[BUG]  [BUGGY]  if(rawParentClass  instanceof  Class  <?>,  parentType)  {  [CE]  [FE]                      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(rawParentClass  instanceof  Class  <?>,  parentType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(rawParentClass  instanceof  Class  <?>,  parentType)  {	  if(typeToEvaluate    instanceof    Class    <?>,    rawParentClass)    {    	non-compiled	[CE]  	3	None	replace
105	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
106	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
107	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  If(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  ';'  expected  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  If(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    If(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
108	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  if(rawParentClass  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  if(rawParentClass  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    if(rawParentClass  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
109	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	2	1	replace
110	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	2	1	replace
111	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>,  rawParentClass)  {  [CE]  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>,  rawParentClass)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>,  rawParentClass)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  	2	None	replace
112	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  instanceof  Class  <?>  ||  rawParentClass  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	2	1	replace
113	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  rawParentClass  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  Class  <?>  ||  rawParentClass  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	2	1	replace
114	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  parentType  ==  rawParentClass)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate!=  null  ||  parentType  ==  rawParentClass)  {	  if(typeToEvaluate    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	17	1	replace
115	[BUG]  [BUGGY]  if(typeToEvaluate!=  null  ||  parentType  ==  rawParentClass)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  parentType  ==  rawParentClass)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=  null  ||  parentType  ==  rawParentClass)  {	  if(typeToEvaluate    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	17	1	replace
116	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  ==  rawParentClass)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  ==  null  ||  parentType  ==  rawParentClass)  {	  if(typeToEvaluate    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	17	1	replace
117	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  ==  rawParentClass)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  ==  rawParentClass)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  ==  null  ||  parentType  ==  rawParentClass)  {	  if(typeToEvaluate    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	17	1	replace
118	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
119	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(typeToEvaluate  instancesof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(typeToEvaluate  instancesof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    if(typeToEvaluate  instancesof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	4	None	add
120	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(rawParentClass  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(rawParentClass  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    if(rawParentClass  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
121	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
122	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null)    {    if(typeToEvaluate  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
123	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate.getOwnerType()!=  null)  {  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate.getOwnerType()!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null)    {    if(typeToEvaluate  ==  null  ||  typeToEvaluate.getOwnerType()!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
124	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate!=  null)  {  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null)    {    if(typeToEvaluate!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
125	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate.getOwnerType()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate.getOwnerType()  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null)    {    if(typeToEvaluate  ==  null  ||  typeToEvaluate.getOwnerType()  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
126	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate!=  null)  {  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null)    {    if(typeToEvaluate  ==  null  ||  typeToEvaluate!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
127	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate.getClass()!=  rawParentClass)  {  [CE]  illegal  start  of  expression  [FE]              UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate.getClass()!=  rawParentClass)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null)    {    if(typeToEvaluate  ==  null  ||  typeToEvaluate.getClass()!=  rawParentClass)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
128	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate.isUnknownType())  {  [CE]  illegal  start  of  expression  [FE]                UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate.isUnknownType())  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null)    {    if(typeToEvaluate  ==  null  ||  typeToEvaluate.isUnknownType())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
129	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]                  UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate.getType()  ==  Token.GETPROP)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null)    {    if(typeToEvaluate  ==  null  ||  typeToEvaluate.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
130	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  parentType!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate!=  null  ||  parentType!=  null)  {	  if(parentType!=    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	23	1	replace
131	[BUG]  [BUGGY]  if(typeToEvaluate!=  null  ||  parentType!=  null)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  parentType!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=  null  ||  parentType!=  null)  {	  if(parentType!=    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	23	1	replace
132	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  illegal  start  of  type  [FE]                      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
133	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  illegal  start  of  type  [FE]                        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate.getActualTypeArguments(),  parentType,  rawParentClass);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
134	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  illegal  start  of  type  [FE]                          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(parentType.getActualTypeArguments(),  parentType,  rawParentClass);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
135	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeParameters(),  parentType,  rawParentClass);  [CE]  illegal  start  of  type  [FE]                            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeParameters(),  parentType,  rawParentClass);  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeParameters(),  parentType,  rawParentClass);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
136	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);  [CE]  illegal  start  of  type  [FE]                              UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(typeToEvaluate,  parentType,  rawParentClass);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
137	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  >=?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    instanceof    Class    <?>)    {    if(parentType  instanceof  Class  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
138	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instancesof  Class  <?>)  {  [CE]  ')'  expected  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instancesof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    instanceof    Class    <?>)    {    if(parentType  instancesof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	8	None	add
139	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Category  <?>)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>)  {  if(parentType  instanceof  Category  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    instanceof    Class    <?>)    {    if(parentType  instanceof  Category  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
140	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(parentType  ==  null)  {	  if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
141	[BUG]  [BUGGY]  if(parentType  ==  null)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  ==  null)  {	  if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  UnsupportedOperationException  	11	1	replace
142	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(rawParentClass  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(rawParentClass  ==  null)  {	  if(parentType!=    null)    {    	compilable	  [FE]  UnsupportedOperationException  	23	1	replace
143	[BUG]  [BUGGY]  if(rawParentClass  ==  null)  {  [FE]  UnsupportedOperationException  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(rawParentClass  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(rawParentClass  ==  null)  {	  if(parentType!=    null)    {    	compilable	  [FE]  UnsupportedOperationException  	23	1	replace
144	[BUG]  [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  Type  parentType  ==  null  ||  parentType  ==  null)  {  [CE]  ';'  expected  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  Type  parentType  ==  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    ==    null    ||    parentType    ==    null)    {    Type  parentType  ==  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
145	[BUG]  [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  typeToEvaluate.getOwnerType()!=  null)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  typeToEvaluate.getOwnerType()!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null)    {    if(parentType!=  null  ||  typeToEvaluate.getOwnerType()!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
146	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluates  ==  null  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluates  ==  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    if(typeToEvaluates  ==  null  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
147	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass);  [CE]  illegal  start  of  type  [FE]                      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass);  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType.getActualTypeArguments(),  parentType,  rawParentClass);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
148	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass);  [CE]  illegal  start  of  type  [FE]                        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass);  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	Type[]  actualTypeParameters  =  extractRealTypes(rawType,  parentType,  rawParentClass);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
149	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate!=  null  ||  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	2	1	replace
150	[BUG]  [BUGGY]  if(typeToEvaluate!=  null  ||  parentType  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=  null  ||  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	2	1	replace
151	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate!=  null)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate!=  null  ||  typeToEvaluate!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
152	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate.getOwnerType()!=  null)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate.getOwnerType()!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate!=  null  ||  typeToEvaluate.getOwnerType()!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
153	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate.getType()  ==  Token.GETPROP)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate!=  null  ||  typeToEvaluate.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
154	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  typeToEvaluate.getType()  ==  Token.FUNCTION)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate!=  null  ||  typeToEvaluate.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
155	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  parentType!=  null)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate!=  null  ||  parentType!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate!=  null  ||  parentType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
156	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(parentType  ==  null  ||  typeToEvaluate  instanceof  Class  <?>)  {	  if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
157	[BUG]  [BUGGY]  if(parentType  ==  null  ||  typeToEvaluate  instanceof  Class  <?>)  {  [FE]  UnsupportedOperationException  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  ==  null  ||  typeToEvaluate  instanceof  Class  <?>)  {	  if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	7	1	replace
158	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  UnsupportedOperationException)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  UnsupportedOperationException)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  UnsupportedOperationException)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
159	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluates  instanceof  ParameterizedType)  {  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluates  instanceof  ParameterizedType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluates  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
160	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instancesof  ParameterizedType)  {  [CE]  ')'  expected  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instancesof  ParameterizedType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instancesof  ParameterizedType)  {	  	non-compiled	[CE]  ')'  expected	10	None	add
161	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null)    {    if(typeToEvaluate  ==  null  ||  typeToEvaluate  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
162	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  parentType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null)    {    if(typeToEvaluate  ==  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
163	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(typeToEvaluates  instanceof  Class  <?>  ||  typeToEvaluates  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(typeToEvaluates  instanceof  Class  <?>  ||  typeToEvaluates  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    if(typeToEvaluates  instanceof  Class  <?>  ||  typeToEvaluates  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
164	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <? ">)  {  [CE]  unclosed  string  literal  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <? ">)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <? ">)  {	  	non-compiled	[CE]  unclosed  string  literal	4	None	add
165	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluates  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluates  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    if(typeToEvaluates  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
166	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  >=?>)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  >=?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  Class  >=?>)  {	  if(parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
167	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null  ||  rawParentClass  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(parentType!=  null  ||  rawParentClass  ==  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	19	1	replace
168	[BUG]  [BUGGY]  if(parentType!=  null  ||  rawParentClass  ==  null)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null  ||  rawParentClass  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=  null  ||  rawParentClass  ==  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	19	1	replace
169	[BUG]  [BUGGY]  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  UnknownType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  UnknownType)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
170	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  rawParentClass  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  rawParentClass  instanceof  UnknownType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  Class  <?>  ||  rawParentClass  instanceof  UnknownType)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
171	[BUG]  [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  Type  parentType!=  null  ||  parentType  ==  null)  {  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null  ||  parentType  ==  null)  {  Type  parentType!=  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null    ||    parentType    ==    null)    {    Type  parentType!=  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
172	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>,  parentType  ||  rawParentClass  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>,  parentType  ||  rawParentClass  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  Class  <?>,  parentType  ||  rawParentClass  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>,    rawParentClass)    {    	non-compiled	[CE]  ')'  expected	3	None	replace
173	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>,  parentType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>,  parentType  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  Class  <?>,  parentType  ||  typeToEvaluate  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>,    rawParentClass)    {    	non-compiled	[CE]  ')'  expected	3	None	replace
174	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>,  rawParentClass  ||  parentType  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]              UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>,  rawParentClass  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  Class  <?>,  rawParentClass  ||  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>,    rawParentClass)    {    	non-compiled	[CE]  ')'  expected	3	None	replace
175	[BUG]  [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  rawParentClass  ==  parentType.getRawParentClass())  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  rawParentClass  ==  parentType.getRawParentClass())  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null)    {    if(parentType!=  null  ||  rawParentClass  ==  parentType.getRawParentClass())  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
176	[BUG]  [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null)  {  if(parentType!=  null  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null)    {    if(parentType!=  null  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
177	[BUG]  [BUGGY]  if(parentType!=  null)  {  if(parentType  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null)  {  if(parentType  >=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=    null)    {    if(parentType  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
178	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  instanceof  ParameterizedType  ||  parentType  ==  null)  {	  if(typeToEvaluate    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	17	1	replace
179	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  parentType  ==  null)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  ParameterizedType  ||  parentType  ==  null)  {	  if(typeToEvaluate    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	17	1	replace
180	[BUG]  [BUGGY]  Type  owner  =  parentType.getOwnerType();  [CE]  illegal  start  of  type  [FE]                      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  Type  owner  =  parentType.getOwnerType();  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	Type  owner  =  parentType.getOwnerType();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
181	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  castedType.getActualTypeParameters();  [CE]  illegal  start  of  type  [FE]                        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  Type[]  actualTypeParameters  =  castedType.getActualTypeParameters();  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	Type[]  actualTypeParameters  =  castedType.getActualTypeParameters();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
182	[BUG]  [BUGGY]  Type  objParameterizedType  =  castedType.getOwnerType();  [CE]  illegal  start  of  type  [FE]                          UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  Type  objParameterizedType  =  castedType.getOwnerType();  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	Type  objParameterizedType  =  castedType.getOwnerType();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
183	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  getActualTypeParameters();  [CE]  illegal  start  of  type  [FE]                            UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  Type[]  actualTypeParameters  =  getActualTypeParameters();  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	Type[]  actualTypeParameters  =  getActualTypeParameters();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
184	[BUG]  [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  if(parentType  {  null  ||  parentType  ==  null)  {  [CE]  ')'  expected  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null)  {  if(parentType  {  null  ||  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType    ==    null    ||    parentType    ==    null)    {    if(parentType  {  null  ||  parentType  ==  null)  {	  	non-compiled	[CE]  ')'  expected	20	None	add
185	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
186	[BUG]  [BUGGY]  if(rawParentClass  instanceof  Class  <?>  ||  parentType  instanceof  UnknownType)  {  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(rawParentClass  instanceof  Class  <?>  ||  parentType  instanceof  UnknownType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(rawParentClass  instanceof  Class  <?>  ||  parentType  instanceof  UnknownType)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    UnknownType)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
187	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  (typeToEvaluate  instanceof  Class  <?>))  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  (typeToEvaluate  instanceof  Class  <?>))  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null)    {    if(typeToEvaluate  ==  null  ||  (typeToEvaluate  instanceof  Class  <?>))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
188	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null)  {  if(typeToEvaluate  ==  null  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null)    {    if(typeToEvaluate  ==  null  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
189	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  If(typeToEvaluate!=  null)  {  [CE]  ';'  expected  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  If(typeToEvaluate!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    If(typeToEvaluate!=  null)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
190	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluates!=  null)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluates!=  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluates!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
191	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate  >>  null)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null)  {  if(typeToEvaluate  >>  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=    null)    {    if(typeToEvaluate  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
192	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  rawParentClass  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate!=  null  ||  rawParentClass  ==  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	19	1	replace
193	[BUG]  [BUGGY]  if(typeToEvaluate!=  null  ||  rawParentClass  ==  null)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  rawParentClass  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=  null  ||  rawParentClass  ==  null)  {	  if(parentType!=    null    ||    parentType    ==    null)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	19	1	replace
194	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>,  parentType  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>,  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  Class  <?>,  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  ')'  expected	2	None	replace
195	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(rawParentClass  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(rawParentClass  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	2	1	replace
196	[BUG]  [BUGGY]  if(rawParentClass  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(rawParentClass  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(rawParentClass  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	2	1	replace
197	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  instancesof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  instancesof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    Class    <?>    ||    parentType    instanceof    Class    <?>)    {    if(typeToEvaluate  instancesof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
198	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  BooleanParameterizedType)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  BooleanParameterizedType)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  ParameterizedType  ||  typeToEvaluate  instanceof  BooleanParameterizedType)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
199	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  &&  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate!=  null  &&  parentType  ==  null)  {	  if(typeToEvaluate!=    null)    {    	compilable	  [FE]  UnsupportedOperationException  	15	1	replace
200	[BUG]  [BUGGY]  if(typeToEvaluate!=  null  &&  parentType  ==  null)  {  [FE]  UnsupportedOperationException  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  &&  parentType  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=  null  &&  parentType  ==  null)  {	  if(typeToEvaluate!=    null)    {    	compilable	  [FE]  UnsupportedOperationException  	15	1	replace
201	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  {  null  ||  parentType  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  {  null  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate    ==    null    ||    parentType    instanceof    Class    <?>)    {    if(typeToEvaluate  {  null  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	6	None	add
202	[BUG]  [BUGGY]  if(typeToEvaluate!=  null  ||  parentType.getRawType()  ==  typeToEvaluate.getRawType())  {  [CE]  cannot  find  symbol  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  parentType.getRawType()  ==  typeToEvaluate.getRawType())  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=  null  ||  parentType.getRawType()  ==  typeToEvaluate.getRawType())  {	  if(parentType!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
203	[BUG]  [BUGGY]  if(typeToEvaluate!=  null  ||  rawParentClass  ==  parentType.getRawParentClass())  {  [CE]  cannot  find  symbol  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate!=  null  ||  rawParentClass  ==  parentType.getRawParentClass())  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate!=  null  ||  rawParentClass  ==  parentType.getRawParentClass())  {	  if(parentType!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
204	[BUG]  [BUGGY]  if(parentType!=  null  ||  rawParentClass  ==  parentType.getRawParentClass())  {  [CE]  cannot  find  symbol  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType!=  null  ||  rawParentClass  ==  parentType.getRawParentClass())  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType!=  null  ||  rawParentClass  ==  parentType.getRawParentClass())  {	  if(parentType!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
205	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null  ||  rawParentClass.isPrimitive())  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(parentType  ==  null  ||  parentType  ==  null  ||  rawParentClass.isPrimitive())  {	  if(parentType    ==    null    ||    parentType    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	21	1	replace
206	[BUG]  [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null  ||  rawParentClass.isPrimitive())  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null  ||  rawParentClass.isPrimitive())  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  ==  null  ||  parentType  ==  null  ||  rawParentClass.isPrimitive())  {	  if(parentType    ==    null    ||    parentType    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	21	1	replace
207	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  rawParentClass  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  ==  null  ||  rawParentClass  ==  null)  {	  if(parentType    ==    null    ||    parentType    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	21	1	replace
208	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null  ||  rawParentClass  ==  null)  {  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  ==  null  ||  rawParentClass  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  ==  null  ||  rawParentClass  ==  null)  {	  if(parentType    ==    null    ||    parentType    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	21	1	replace
209	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null  ||  rawParentClass  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(parentType  ==  null  ||  parentType  ==  null  ||  rawParentClass  ==  null)  {	  if(parentType    ==    null    ||    parentType    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	21	1	replace
210	[BUG]  [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null  ||  rawParentClass  ==  null)  {  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(parentType  ==  null  ||  parentType  ==  null  ||  rawParentClass  ==  null)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(parentType  ==  null  ||  parentType  ==  null  ||  rawParentClass  ==  null)  {	  if(parentType    ==    null    ||    parentType    ==    null)    {    	compilable	  [FE]  UnsupportedOperationException  	21	1	replace
211	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ==  false)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	add	if(typeToEvaluate  instanceof  ParameterizedType  ==  false)  {	  if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	11	1	replace
212	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ==  false)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  ==  false)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  ParameterizedType  ==  false)  {	  if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	11	1	replace
213	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  <?>)  {  [CE]  type  ParameterizedType  does  not  take  parameters  [FE]      UnsupportedOperationException    [CONTEXT]    Type  typeToEvaluate,  Type  parentType,  Class<?>  rawParentClass)  {    [BUGGY]  if(typeToEvaluate  instanceof  ParameterizedType  <?>)  {  [BUGGY]    return  typeToEvaluate;  }  else  if  (typeToEvaluate  instanceof  ParameterizedType)  {  ParameterizedType  castedType  =  (ParameterizedType)  typeToEvaluate;  Type  owner  =  castedType.getOwnerType();  Type[]  actualTypeParameters  =  extractRealTypes(castedType.getActualTypeArguments(),  parentType,  rawParentClass);  Type  rawType  =  castedType.getRawType();  return  new  ParameterizedTypeImpl(rawType,  actualTypeParameters,  owner);  }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	60	60	1	replace	if(typeToEvaluate  instanceof  ParameterizedType  <?>)  {	  if(typeToEvaluate    instanceof    ParameterizedType)    {    	non-compiled	[CE]  type  ParameterizedType  does  not  take  parameters	11	None	replace
