bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  actualType  =  typeDefiningF.getGenericActualType();  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeDefiningF.getGenericActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeDefiningF.getGenericActualType();	  Type    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
2	[BUG]  [BUGGY]  Type  actualType  =  f.getGenericActualType();  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getGenericActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  f.getGenericActualType();	  Type    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
3	[BUG]  [BUGGY]  Type  actualType  =  classDefiningF.getGenericActualType();  [CE]  cannot  find  symbol  [FE]                              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  classDefiningF.getGenericActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  classDefiningF.getGenericActualType();	  Type    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
4	[BUG]  [BUGGY]  Type  actualType  =  typeFactory.getGenericActualType();  [CE]  cannot  find  symbol  typeFactory  [FE]                                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeFactory.getGenericActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeFactory.getGenericActualType();	  Type    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol  typeFactory	69	None	replace
5	[BUG]  [BUGGY]  Type  actualType  =  type.getGenericActualType(),  classDefiningF);  [CE]  ';'  expected  [FE]                                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  type.getGenericActualType(),  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type.getGenericActualType(),  classDefiningF);	  Type    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  ';'  expected	69	None	replace
6	[BUG]  [BUGGY]  Type  actualType  =  type,  classDefiningF.getGenericActualType();  [CE]  ';'  expected  [FE]                                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  type,  classDefiningF.getGenericActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type,  classDefiningF.getGenericActualType();	  Type    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  ';'  expected	69	None	replace
7	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
8	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	27	None	replace
9	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF,  type.getGenericType());  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF,  type.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF,  type.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
10	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type.getGenericType());  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  type.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
11	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF,  type.getGenericType());  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF,  type.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF,  type.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
12	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericType(),  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericType(),  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericType(),  classDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	27	None	replace
13	[BUG]  [BUGGY]  Type  actualType  =  f.getRawType();  [CE]  cannot  find  symbol  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getRawType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  f.getRawType();	  Type    actualType    =    f.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
14	[BUG]  [BUGGY]  Type  actualType  =  f.getReturnType();  [CE]  cannot  find  symbol  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getReturnType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  f.getReturnType();	  Type    actualType    =    f.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
15	[BUG]  [BUGGY]  Type  actualType  =  f.getRealType();  [CE]  cannot  find  symbol  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getRealType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  f.getRealType();	  Type    actualType    =    f.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
16	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  type.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
17	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
18	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF,  type.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF,  type.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF,  type.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
19	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f,  f.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f,  f.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f,  f.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
20	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
21	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  f.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  f.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  f.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
22	[BUG]  [BUGGY]  Type  actualType  =  classDefiningF.getActualType(),  type);  [CE]  ';'  expected  [FE]                                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  classDefiningF.getActualType(),  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  classDefiningF.getActualType(),  type);	  Type    actualType    =    classDefiningF.getActualType();    	non-compiled	[CE]  ';'  expected	17	None	replace
23	[BUG]  [BUGGY]  Type  actualType  =  classDefiningF.getActualType(),  type;  [CE]  cannot  find  symbol  [FE]                                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  classDefiningF.getActualType(),  type;  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  classDefiningF.getActualType(),  type;	  Type    actualType    =    classDefiningF.getActualType();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
24	[BUG]  [BUGGY]  Type  actualType  =  type,  classDefiningF.getActualType();  [CE]  ';'  expected  [FE]                                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  type,  classDefiningF.getActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type,  classDefiningF.getActualType();	  Type    actualType    =    classDefiningF.getActualType();    	non-compiled	[CE]  ';'  expected	17	None	replace
25	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    type,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	5	None	replace
26	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    f,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
27	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  type.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  type.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  f,  type.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    f,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
28	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  type.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    f,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
29	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  type.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    f,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
30	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericParameterType());  [CE]  cannot  find  symbol  [FE]                              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericParameterType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericParameterType());	  Type    actualType    =    getActualType(type,    f,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
31	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    f,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
32	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  typeDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  typeDefiningF.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  f,  typeDefiningF.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    f,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
33	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    f,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
34	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  classDefiningF,  typeDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  classDefiningF,  typeDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  classDefiningF,  typeDefiningF,  type);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	3	None	replace
35	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  f,  type);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	3	None	replace
36	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f,  type);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	3	None	replace
37	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f,  type);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	3	None	replace
38	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  f);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  f);	  Type    actualType    =    getActualType(classDefiningF,    type,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	46	None	replace
39	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  f,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  f,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  f,  type);	  Type    actualType    =    getActualType(classDefiningF,    type,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	46	None	replace
40	[BUG]  [BUGGY]  Class  <?>  actualType  =  typeDefiningF.getGenericType();  [CE]  cannot  find  symbol  [FE]                                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  typeDefiningF.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  typeDefiningF.getGenericType();	  Class    <?>    actualType    =    type.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
41	[BUG]  [BUGGY]  Class  <?>  actualType  =  classDefiningF.getGenericType();  [CE]  cannot  find  symbol  [FE]                                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  classDefiningF.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  classDefiningF.getGenericType();	  Class    <?>    actualType    =    type.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
42	[BUG]  [BUGGY]  Class  <?>  actualType  =  typeFactory.getGenericType();  [CE]  cannot  find  symbol  typeFactory  [FE]                                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  typeFactory.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  typeFactory.getGenericType();	  Class    <?>    actualType    =    type.getGenericType();    	non-compiled	[CE]  cannot  find  symbol  typeFactory	16	None	replace
43	[BUG]  [BUGGY]  Class  <?>  actualType  =  type.getGenericReturnType();  [CE]  cannot  find  symbol  [FE]                                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  type.getGenericReturnType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  type.getGenericReturnType();	  Class    <?>    actualType    =    type.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
44	[BUG]  [BUGGY]  Class  <?>  actualType  =  type.getGenericClass();  [CE]  cannot  find  symbol  [FE]                                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  type.getGenericClass();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  type.getGenericClass();	  Class    <?>    actualType    =    type.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
45	[BUG]  [BUGGY]  Class  <?>  actualType  =  type.getGenericParameterType(type);  [CE]  cannot  find  symbol  [FE]                                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  type.getGenericParameterType(type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  type.getGenericParameterType(type);	  Class    <?>    actualType    =    type.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
46	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  type);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	23	None	replace
47	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  type,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  type,  f);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  type,  f);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	23	None	replace
48	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  classDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  classDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  classDefiningF.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type,    f);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
49	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF,  type);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	23	None	replace
50	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  classDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  classDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  classDefiningF,  type);	  Type    actualType    =    getActualType(f,    type,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	11	None	replace
51	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  type,  classDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  type,  classDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  type,  classDefiningF,  type);	  Type    actualType    =    getActualType(f,    type,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	11	None	replace
52	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    f,    typeDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
53	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    f,    typeDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
54	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type,  f);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  type,  f);	  Type    actualType    =    getActualType(type,    classDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	6	None	replace
55	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF.getGenericType(),  typeDefiningF);  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF.getGenericType(),  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF.getGenericType(),  typeDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
56	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
57	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
58	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
59	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  classDefiningFactory);  [CE]  cannot  find  symbol  classDefiningFactory  [FE]            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  classDefiningFactory);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  classDefiningFactory);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type,    type);    	non-compiled	[CE]  cannot  find  symbol  classDefiningFactory	20	None	replace
60	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF,  type);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	20	None	replace
61	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  f.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	20	None	replace
62	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f.getGenericType(),  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f.getGenericType(),  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  f.getGenericType(),  typeDefiningF);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	70	None	replace
63	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  typeDefiningF,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f.getGenericType(),  typeDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	70	None	replace
64	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  f.getGenericType(),  typeDefiningF,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  f.getGenericType(),  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  f.getGenericType(),  typeDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	70	None	replace
65	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF.getGenericType(),  f,  typeDefiningF);  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF.getGenericType(),  f,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF.getGenericType(),  f,  typeDefiningF);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
66	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  type.getGenericType(),  classDefiningF,  typeDefiningF);  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  type.getGenericType(),  classDefiningF,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  type.getGenericType(),  classDefiningF,  typeDefiningF);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
67	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF.getGenericType(),  classDefiningF,  type);  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF.getGenericType(),  classDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF.getGenericType(),  classDefiningF,  type);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
68	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f,  classDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f,  classDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f,  classDefiningF.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    type,    typeDefiningF,    f);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
69	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f,  classDefiningFactory);  [CE]  cannot  find  symbol  classDefiningFactory  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f,  classDefiningFactory);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f,  classDefiningFactory);	  Type    actualType    =    getActualType(classDefiningF,    type,    typeDefiningF,    f);    	non-compiled	[CE]  cannot  find  symbol  classDefiningFactory	63	None	replace
70	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f,  classDefiningF.type);  [CE]  cannot  find  symbol  type  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f,  classDefiningF.type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f,  classDefiningF.type);	  Type    actualType    =    getActualType(classDefiningF,    type,    typeDefiningF,    f);    	non-compiled	[CE]  cannot  find  symbol  type	63	None	replace
71	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericParameterType());  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericParameterType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericParameterType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
72	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericParameterType());  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericParameterType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericParameterType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
73	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericParameterType());  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericParameterType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericParameterType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
74	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type.getGenericParameterType());  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type.getGenericParameterType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type.getGenericParameterType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
75	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericParameterType());  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericParameterType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericParameterType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
76	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  type,  type);	  Type    actualType    =    getActualType(type,    classDefiningF,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	9	None	replace
77	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type.getGenericType());  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  type.getGenericType());	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
78	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type.getGenericType());  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type.getGenericType());	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
79	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
80	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF.getGenericParameterType(0));	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    typeDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
81	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF.getGenericParameterType(0));	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    typeDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
82	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f.getGenericParameterType(0));	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    typeDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
83	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF.getGenericParameterType(0));	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    typeDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
84	[BUG]  [BUGGY]  Type  actualType  =  typeDefiningF.getActualType(),  classDefiningF);  [CE]  ';'  expected  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeDefiningF.getActualType(),  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeDefiningF.getActualType(),  classDefiningF);	  Type    actualType    =    typeDefiningF.getActualType();    	non-compiled	[CE]  ';'  expected	53	None	replace
85	[BUG]  [BUGGY]  Type  actualType  =  typeDefiningF,  classDefiningF.getActualType();  [CE]  ';'  expected  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeDefiningF,  classDefiningF.getActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeDefiningF,  classDefiningF.getActualType();	  Type    actualType    =    typeDefiningF.getActualType();    	non-compiled	[CE]  ';'  expected	53	None	replace
86	[BUG]  [BUGGY]  Type  actualType  =  typeDefiningF.getActualType(),  classDefiningF.getGenericType();  [CE]  ';'  expected  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeDefiningF.getActualType(),  classDefiningF.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeDefiningF.getActualType(),  classDefiningF.getGenericType();	  Type    actualType    =    typeDefiningF.getActualType();    	non-compiled	[CE]  ';'  expected	53	None	replace
87	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  f,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  f,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  f,  classDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    f,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	22	None	replace
88	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  type,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  type,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  f,  type,  typeDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    f,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	22	None	replace
89	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF.getGenericType(),  f);  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF.getGenericType(),  f);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF.getGenericType(),  f);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    typeDefiningF);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
90	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF.getGenericType(),  f);  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF.getGenericType(),  f);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF.getGenericType(),  f);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    typeDefiningF);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
91	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  f.getGenericType(),  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  f.getGenericType(),  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  f.getGenericType(),  typeDefiningF);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	59	None	replace
92	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  type);	  Type    actualType    =    getActualType(type,    classDefiningF,    f,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	1	None	replace
93	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  type,  typeDefiningF);	  Type    actualType    =    getActualType(type,    classDefiningF,    f,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	1	None	replace
94	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
95	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  type.getGenericType());  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  type.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  type.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
96	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
97	[BUG]  [BUGGY]  Type  actualType  =  f,  typeDefiningF.getActualType();  [CE]  ';'  expected  [FE]                              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f,  typeDefiningF.getActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  f,  typeDefiningF.getActualType();	  Type    actualType    =    f.getActualType();    	non-compiled	[CE]  ';'  expected	15	None	replace
98	[BUG]  [BUGGY]  Type  actualType  =  f,  classDefiningF.getActualType();  [CE]  ';'  expected  [FE]                                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f,  classDefiningF.getActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  f,  classDefiningF.getActualType();	  Type    actualType    =    f.getActualType();    	non-compiled	[CE]  ';'  expected	15	None	replace
99	[BUG]  [BUGGY]  Type  actualType  =  f,  type.getActualType();  [CE]  ';'  expected  [FE]                                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f,  type.getActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  f,  type.getActualType();	  Type    actualType    =    f.getActualType();    	non-compiled	[CE]  ';'  expected	15	None	replace
100	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f.getGenericType());	  Type    actualType    =    getActualType(f,    typeDefiningF,    type.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	29	None	replace
101	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF.getGenericType());	  Type    actualType    =    getActualType(f,    typeDefiningF,    type.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
102	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  type.getGenericType());  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  type.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  f,  type.getGenericType());	  Type    actualType    =    getActualType(f,    typeDefiningF,    type.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
103	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(f,    typeDefiningF,    type.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	29	None	replace
104	[BUG]  [BUGGY]  Type  actualType  =  f.getGenericType();  Type  actualType  =  f.getGenericType();  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getGenericType();  Type  actualType  =  f.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    f.getGenericType();    Type  actualType  =  f.getGenericType();	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	18	None	add
105	[BUG]  [BUGGY]  Type  actualType  =  f.getGenericType();  Class  <?>  actualType  =  f.getGenericType();  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getGenericType();  Class  <?>  actualType  =  f.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    f.getGenericType();    Class  <?>  actualType  =  f.getGenericType();	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	18	None	add
106	[BUG]  [BUGGY]  Type  actualType  =  f.getGenericType();  Type  f  =  f.getGenericType();  [CE]  variable  f  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getGenericType();  Type  f  =  f.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    f.getGenericType();    Type  f  =  f.getGenericType();	  	non-compiled	[CE]  variable  f  is  already  defined  in  method  getTypeInfoForField(Field,Type)	18	None	add
107	[BUG]  [BUGGY]  Type  actualType  =  f.getGenericType();  Type  actualType  =  classDefiningF.getGenericType();  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getGenericType();  Type  actualType  =  classDefiningF.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    f.getGenericType();    Type  actualType  =  classDefiningF.getGenericType();	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	18	None	add
108	[BUG]  [BUGGY]  Type  actualType  =  f.getGenericType();  type  =  f.getGenericType();  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]            java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getGenericType();  type  =  f.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    f.getGenericType();    type  =  f.getGenericType();	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	18	None	add
109	[BUG]  [BUGGY]  Type  actualType  =  f.getGenericType();  Type  actualType  =  type.getGenericType();  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]              java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getGenericType();  Type  actualType  =  type.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    f.getGenericType();    Type  actualType  =  type.getGenericType();	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	18	None	add
110	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  typeDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  typeDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  f,  typeDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    f,    classDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
111	[BUG]  [BUGGY]  Type  actualType  =  typeFactory.getGenericType();  [CE]  cannot  find  symbol  typeFactory  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeFactory.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeFactory.getGenericType();	  Type    actualType    =    type.getGenericType();    	non-compiled	[CE]  cannot  find  symbol  typeFactory	13	None	replace
112	[BUG]  [BUGGY]  Type  actualType  =  type,  classDefiningF.getGenericType();  [CE]  ';'  expected  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  type,  classDefiningF.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type,  classDefiningF.getGenericType();	  Type    actualType    =    type.getGenericType();    	non-compiled	[CE]  ';'  expected	13	None	replace
113	[BUG]  [BUGGY]  Type  actualType  =  type.getGenericType(),  classDefiningF);  [CE]  ';'  expected  [FE]                              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  type.getGenericType(),  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type.getGenericType(),  classDefiningF);	  Type    actualType    =    type.getGenericType();    	non-compiled	[CE]  ';'  expected	13	None	replace
114	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
115	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type.getGenericParameterType());  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type.getGenericParameterType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  type.getGenericParameterType());	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
116	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  type,  type);	  Type    actualType    =    getActualType(type,    f,    classDefiningF,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	8	None	replace
117	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  type,  classDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  type,  classDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  type,  classDefiningF,  type);	  Type    actualType    =    getActualType(type,    f,    classDefiningF,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	8	None	replace
118	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type,  false);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type,  false);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  type,  false);	  Type    actualType    =    getActualType(type,    f,    classDefiningF,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	8	None	replace
119	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type,  null);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type,  null);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  type,  null);	  Type    actualType    =    getActualType(type,    f,    classDefiningF,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	8	None	replace
120	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  type,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  type,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  type,  classDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    f,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	50	None	replace
121	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    f,    classDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
122	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF,  type);	  Type    actualType    =    getActualType(type,    f,    typeDefiningF,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	10	None	replace
123	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  type);	  Type    actualType    =    getActualType(typeDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	31	None	replace
124	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  f);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  f);	  Type    actualType    =    getActualType(f,    f,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	65	None	replace
125	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  f);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  f);	  Type    actualType    =    getActualType(f,    f,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	65	None	replace
126	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  classDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  classDefiningF,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  classDefiningF,  typeDefiningF);	  Type    actualType    =    getActualType(f,    f,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	65	None	replace
127	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  f,  typeDefiningF,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  f,  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  f,  typeDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(f,    f,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	65	None	replace
128	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  true);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  true);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  true);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    false);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	51	None	replace
129	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  false);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  false);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  false);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    false);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	51	None	replace
130	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  false);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  false);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  false);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    false);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	51	None	replace
131	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  false);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  false);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  false);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    false);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	51	None	replace
132	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  true,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  true,  f);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  true,  f);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    false);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	51	None	replace
133	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  false,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  false,  f);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  false,  f);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    false);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	51	None	replace
134	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  true);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  true);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  true);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    false);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	51	None	replace
135	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    f.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
136	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type);	  Type    actualType    =    getActualType(type,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	43	None	replace
137	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF);	  Type    actualType    =    getActualType(type,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	43	None	replace
138	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericType(),  type);  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericType(),  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericType(),  type);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType(),    classDefiningF);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
139	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericType(),  typeDefiningF);  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericType(),  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericType(),  typeDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType(),    classDefiningF);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
140	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  typeDefiningF.getGenericType(),  classDefiningF);  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  typeDefiningF.getGenericType(),  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f.getGenericType(),  typeDefiningF.getGenericType(),  classDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType(),    classDefiningF);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
141	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF.getGenericType(),  typeDefiningF);  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF.getGenericType(),  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF.getGenericType(),  typeDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType(),    classDefiningF);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
142	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF.getGenericType(),  type);  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF.getGenericType(),  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF.getGenericType(),  type);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType(),    classDefiningF);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
143	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericType(),  type);  [CE]  cannot  find  symbol  [FE]                              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericType(),  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericType(),  type);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType(),    classDefiningF);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
144	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  null);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  null);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  null);	  Type    actualType    =    getActualType(type,    f,    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	2	None	replace
145	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF.getGenericParameterType(0));	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
146	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  type.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  type.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  type.getGenericParameterType(0));	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
147	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF.getGenericParameterType(1));	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
148	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  f.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  f.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  f.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
149	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f,  f.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f,  f.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f,  f.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
150	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF,  type.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF,  type.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF,  type.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
151	[BUG]  [BUGGY]  Class  <?>  actualType  =  typeDefiningF.getGenericActualType();  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  typeDefiningF.getGenericActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  typeDefiningF.getGenericActualType();	  Class    <?>    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
152	[BUG]  [BUGGY]  Class  <?>  actualType  =  classDefiningF.getGenericActualType();  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  classDefiningF.getGenericActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  classDefiningF.getGenericActualType();	  Class    <?>    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
153	[BUG]  [BUGGY]  Class  <?>  actualType  =  typeFactory.getGenericActualType();  [CE]  cannot  find  symbol  typeFactory  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  typeFactory.getGenericActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  typeFactory.getGenericActualType();	  Class    <?>    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol  typeFactory	68	None	replace
154	[BUG]  [BUGGY]  Class  <?>  actualType  =  type.getActualType();  [CE]  cannot  find  symbol  [FE]                              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  type.getActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  type.getActualType();	  Class    <?>    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
155	[BUG]  [BUGGY]  Class  <?>  actualType  =  type,  classDefiningF.getGenericActualType();  [CE]  ';'  expected  [FE]                                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  type,  classDefiningF.getGenericActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  type,  classDefiningF.getGenericActualType();	  Class    <?>    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  ';'  expected	68	None	replace
156	[BUG]  [BUGGY]  Class  <?>  actualType  =  type.getGenericActual();  [CE]  cannot  find  symbol  [FE]                                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  type.getGenericActual();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  type.getGenericActual();	  Class    <?>    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
157	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  f.getGenericType());	  Type    actualType    =    getActualType(type,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	4	None	replace
158	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  classDefiningF,  type.getGenericType());  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  classDefiningF,  type.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  classDefiningF,  type.getGenericType());	  Type    actualType    =    getActualType(type,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
159	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  type,  f.getGenericType());	  Type    actualType    =    getActualType(type,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	4	None	replace
160	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericType(),  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericType(),  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericType(),  type);	  Type    actualType    =    getActualType(type,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	4	None	replace
161	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	add	Type  actualType  =  getActualType(classDefiningF,  type,  classDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    f,    type);    	compilable	  [FE]  IllegalArgumentException  	7	1	replace
162	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  classDefiningF);  [FE]  IllegalArgumentException  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  classDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    f,    type);    	compilable	  [FE]  IllegalArgumentException  	7	1	replace
163	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  type,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  type,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  f,  type,  type);	  Type    actualType    =    getActualType(classDefiningF,    f,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	7	None	replace
164	[BUG]  [BUGGY]  Type  actualType  =  typeDefiningF,  classDefiningF.getGenericType();  [CE]  ';'  expected  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeDefiningF,  classDefiningF.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeDefiningF,  classDefiningF.getGenericType();	  Type    actualType    =    typeDefiningF.getGenericType();    	non-compiled	[CE]  ';'  expected	54	None	replace
165	[BUG]  [BUGGY]  Type  actualType  =  typeDefiningF.getGenericType(),  classDefiningF);  [CE]  ';'  expected  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeDefiningF.getGenericType(),  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeDefiningF.getGenericType(),  classDefiningF);	  Type    actualType    =    typeDefiningF.getGenericType();    	non-compiled	[CE]  ';'  expected	54	None	replace
166	[BUG]  [BUGGY]  Type  actualType  =  typeDefiningF.getGenericReturnType();  [CE]  cannot  find  symbol  [FE]                              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeDefiningF.getGenericReturnType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeDefiningF.getGenericReturnType();	  Type    actualType    =    typeDefiningF.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
167	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  f.type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  f.type);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    f);    	non-compiled	[CE]  type  has  private  access  in  Field	32	None	replace
168	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  type,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  type,  f);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  type,  f);	  Type    actualType    =    getActualType(classDefiningF,    type,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	44	None	replace
169	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  type,  classDefiningF.type);  [CE]  cannot  find  symbol  type  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  type,  classDefiningF.type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  type,  classDefiningF.type);	  Type    actualType    =    getActualType(classDefiningF,    type,    type);    	non-compiled	[CE]  cannot  find  symbol  type	44	None	replace
170	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  type,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  type,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  type,  f.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    type,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	44	None	replace
171	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  type.getGenericType());  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  type.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  type.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
172	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    typeDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
173	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    typeDefiningF.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	47	None	replace
174	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF,  type.getGenericType());  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF,  type.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF,  type.getGenericType());	  Type    actualType    =    getActualType(type,    f,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
175	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(type,    f,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	66	None	replace
176	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(type,    f,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	66	None	replace
177	[BUG]  [BUGGY]  Type  actualType  =  type.getActualType(),  classDefiningF);  [CE]  ';'  expected  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  type.getActualType(),  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type.getActualType(),  classDefiningF);	  Type    actualType    =    type.getActualType();    	non-compiled	[CE]  ';'  expected	12	None	replace
178	[BUG]  [BUGGY]  Type  actualType  =  typeFactory.getActualType();  [CE]  cannot  find  symbol  typeFactory  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeFactory.getActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeFactory.getActualType();	  Type    actualType    =    type.getActualType();    	non-compiled	[CE]  cannot  find  symbol  typeFactory	12	None	replace
179	[BUG]  [BUGGY]  Type  actualType  =  type.getActualType(),  classDefiningF;  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  type.getActualType(),  classDefiningF;  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type.getActualType(),  classDefiningF;	  Type    actualType    =    type.getActualType();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
180	[BUG]  [BUGGY]  Type  actualType  =  classDefiningF,  type.getGenericType();  [CE]  ';'  expected  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  classDefiningF,  type.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  classDefiningF,  type.getGenericType();	  Type    actualType    =    classDefiningF.getGenericType();    	non-compiled	[CE]  ';'  expected	14	None	replace
181	[BUG]  [BUGGY]  Type  actualType  =  classDefiningF.getGenericType(),  type);  [CE]  ';'  expected  [FE]                              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  classDefiningF.getGenericType(),  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  classDefiningF.getGenericType(),  type);	  Type    actualType    =    classDefiningF.getGenericType();    	non-compiled	[CE]  ';'  expected	14	None	replace
182	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  classDefiningF.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    classDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
183	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  typeDefiningF);	  Type    actualType    =    getActualType(typeDefiningF,    typeDefiningF,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	71	None	replace
184	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  type);	  Type    actualType    =    getActualType(typeDefiningF,    typeDefiningF,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	71	None	replace
185	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]    IllegalArgumentException    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    getActualType(typeDefiningF,    typeDefiningF,    classDefiningF);    Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	61	None	add
186	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Class  <?>  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]      IllegalArgumentException    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Class  <?>  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    getActualType(typeDefiningF,    typeDefiningF,    classDefiningF);    Class  <?>  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	61	None	add
187	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  type  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]        IllegalArgumentException    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  type  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    getActualType(typeDefiningF,    typeDefiningF,    classDefiningF);    type  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	61	None	add
188	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  currentType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]          IllegalArgumentException    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  currentType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    getActualType(typeDefiningF,    typeDefiningF,    classDefiningF);    Type  currentType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	61	None	add
189	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF);  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]            IllegalArgumentException    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    getActualType(typeDefiningF,    typeDefiningF,    classDefiningF);    Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF);	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	61	None	add
190	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  actual  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]              IllegalArgumentException    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  actual  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    getActualType(typeDefiningF,    typeDefiningF,    classDefiningF);    Type  actual  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	61	None	add
191	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]                IllegalArgumentException    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    getActualType(typeDefiningF,    typeDefiningF,    classDefiningF);    Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	61	None	add
192	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	add	Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF);	  Type    actualType    =    getActualType(type,    classDefiningF,    f.getGenericType());    	compilable	  [FE]  UnsupportedOperationException  	4	1	replace
193	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF);  [FE]  UnsupportedOperationException  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF);	  Type    actualType    =    getActualType(type,    classDefiningF,    f.getGenericType());    	compilable	  [FE]  UnsupportedOperationException  	4	1	replace
194	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  classDefiningF,  typeDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  classDefiningF,  typeDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  classDefiningF,  typeDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
195	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    f,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	50	None	replace
196	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    f,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	50	None	replace
197	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  typeDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    f,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	50	None	replace
198	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType(),  classDefiningF);  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType(),  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType(),  classDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
199	[BUG]  [BUGGY]  Type  actualType  =  type,  f.getActualType();  [CE]  ';'  expected  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  type,  f.getActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type,  f.getActualType();	  Type    actualType    =    type.getActualType();    	non-compiled	[CE]  ';'  expected	12	None	replace
200	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  f,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  f,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  f,  typeDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    type,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	5	None	replace
201	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
202	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(f,    typeDefiningF,    type.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	29	None	replace
203	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f.getGenericParameterType(1));	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
204	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  f.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  f.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  f.getGenericParameterType(0));	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
205	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF);	  Type    actualType    =    getActualType(type,    f,    typeDefiningF,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	10	None	replace
206	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  type  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [CE]  variable  type  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]    IllegalArgumentException    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  type  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    getActualType(typeDefiningF,    typeDefiningF,    classDefiningF);    Type  type  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  getTypeInfoForField(Field,Type)	61	None	add
207	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  classDefiningF);  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]      IllegalArgumentException    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    getActualType(typeDefiningF,    typeDefiningF,    classDefiningF);    Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  classDefiningF);	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	61	None	add
208	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF,  false);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF,  false);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF,  false);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	70	None	replace
209	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF,  null);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF,  null);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF,  null);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	70	None	replace
210	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF,  factory);  [CE]  cannot  find  symbol  factory  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF,  factory);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF,  factory);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  cannot  find  symbol  factory	70	None	replace
211	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	add	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(typeDefiningF,    classDefiningF,    typeDefiningF);    	compilable	  [FE]  IllegalArgumentException  	21	1	replace
212	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF);  [FE]  IllegalArgumentException  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(typeDefiningF,    classDefiningF,    typeDefiningF);    	compilable	  [FE]  IllegalArgumentException  	21	1	replace
213	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  classDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	23	None	replace
214	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  type,  classDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  type,  classDefiningF,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  type,  classDefiningF,  typeDefiningF);	  Type    actualType    =    getActualType(type,    f,    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	2	None	replace
215	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  factory);  [CE]  cannot  find  symbol  factory  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  factory);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  factory);	  Type    actualType    =    getActualType(type,    f,    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  cannot  find  symbol  factory	2	None	replace
216	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  context);  [CE]  cannot  find  symbol  context  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  context);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  context);	  Type    actualType    =    getActualType(type,    f,    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  cannot  find  symbol  context	2	None	replace
217	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF,  classDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF,  classDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF,  classDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    f,    classDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
218	[BUG]  [BUGGY]  Type  actualType  =  typeDefiningF.getActualType(classDefiningF);  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeDefiningF.getActualType(classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeDefiningF.getActualType(classDefiningF);	  Type    actualType    =    typeDefiningF.getActualType();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
219	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(type,    f,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	66	None	replace
220	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(type,    f,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	66	None	replace
221	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(type,    f,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	66	None	replace
222	[BUG]  [BUGGY]  Type  actualType  =  type.getGenericActualType(classDefiningF);  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  type.getGenericActualType(classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type.getGenericActualType(classDefiningF);	  Type    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
223	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericType(),  typeDefiningF);  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericType(),  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericType(),  typeDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType(),    classDefiningF);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
224	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericType(),  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericType(),  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericType(),  classDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType(),    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	64	None	replace
225	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericType(),  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericType(),  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericType(),  typeDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType(),    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	64	None	replace
226	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF.getGenericType(),  typeDefiningF);  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF.getGenericType(),  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF.getGenericType(),  typeDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType(),    classDefiningF);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
227	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericType(),  typeDefiningF);  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericType(),  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericType(),  typeDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType(),    classDefiningF);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
228	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  false);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  false);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  f,  false);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    false);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	51	None	replace
229	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  false);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  false);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF,  false);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    false);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	51	None	replace
230	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
231	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericParameterType(2));  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericParameterType(2));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericParameterType(2));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
232	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  classDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  classDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  classDefiningF.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    classDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
233	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  typeDefiningF,  false);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  typeDefiningF,  false);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  f,  typeDefiningF,  false);	  Type    actualType    =    getActualType(type,    classDefiningF,    f,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	1	None	replace
234	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    f,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
235	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	27	None	replace
236	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	27	None	replace
237	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  f,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  f,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  f,  typeDefiningF);	  Type    actualType    =    getActualType(f,    f,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	65	None	replace
238	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  f,  classDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(f,  f,  classDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  f,  classDefiningF,  type);	  Type    actualType    =    getActualType(f,    f,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	65	None	replace
239	[BUG]  [BUGGY]  Type  actualType  =  f.getActualType(type);  [CE]  cannot  find  symbol  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getActualType(type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  f.getActualType(type);	  Type    actualType    =    f.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
240	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
241	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType(2));  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType(2));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType(2));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(1));    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
242	[BUG]  [BUGGY]  Type  actualType  =  type,  f.getGenericType();  [CE]  ';'  expected  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  type,  f.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type,  f.getGenericType();	  Type    actualType    =    typeDefiningF.getGenericType();    	non-compiled	[CE]  ';'  expected	54	None	replace
243	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  f.getGenericType(),  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  f.getGenericType(),  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  f.getGenericType(),  type);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	24	None	replace
244	[BUG]  [BUGGY]  Class  <?>  actualType  =  f.getGenericActualType();  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  f.getGenericActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  f.getGenericActualType();	  Class    <?>    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
245	[BUG]  [BUGGY]  Class  <?>  actualType  =  type.getGenericActualType(classDefiningF);  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  type.getGenericActualType(classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  type.getGenericActualType(classDefiningF);	  Class    <?>    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
246	[BUG]  [BUGGY]  Type  actualType  =  typeF.getGenericType();  [CE]  cannot  find  symbol  typeF  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeF.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeF.getGenericType();	  Type    actualType    =    type.getGenericType();    	non-compiled	[CE]  cannot  find  symbol  typeF	13	None	replace
247	[BUG]  [BUGGY]  Class  <?>  actualType  =  f.getGenericType();  [CE]  incompatible  types  [FE]                                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  f.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  f.getGenericType();	  Class    <?>    actualType    =    type.getGenericType();    	non-compiled	[CE]  incompatible  types	16	None	replace
248	[BUG]  [BUGGY]  Class  <?>  actualType  =  type.getGenericParameterType(0);  [CE]  cannot  find  symbol  [FE]                                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  type.getGenericParameterType(0);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  type.getGenericParameterType(0);	  Class    <?>    actualType    =    type.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
249	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  type,  classDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  type,  classDefiningF,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  type,  classDefiningF,  typeDefiningF);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	52	None	replace
250	[BUG]  [BUGGY]  Type  actualType  =  f.getGenericType();  Type  actual  =  f.getGenericType();  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getGenericType();  Type  actual  =  f.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    f.getGenericType();    Type  actual  =  f.getGenericType();	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	18	None	add
251	[BUG]  [BUGGY]  Type  actualType  =  f.getGenericType();  Category  actualType  =  f.getGenericType();  [CE]  cannot  find  symbol  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getGenericType();  Category  actualType  =  f.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    f.getGenericType();    Category  actualType  =  f.getGenericType();	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
252	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    f,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
253	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF.getGenericParameterType(1));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    f,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
254	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	add	Type  actualType  =  getActualType(type,  classDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(typeDefiningF,    classDefiningF);    	compilable	  [FE]  UnsupportedOperationException  	45	1	replace
255	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  classDefiningF);  [FE]  UnsupportedOperationException  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(typeDefiningF,    classDefiningF);    	compilable	  [FE]  UnsupportedOperationException  	45	1	replace
256	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  f.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  f.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  f.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    f.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
257	[BUG]  [BUGGY]  Type  actualType  =  typeDefiningF.getGenericParameterType(0);  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeDefiningF.getGenericParameterType(0);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeDefiningF.getGenericParameterType(0);	  Type    actualType    =    typeDefiningF.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
258	[BUG]  [BUGGY]  Type  actualType  =  typeDefiningF.getGenericReference();  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  typeDefiningF.getGenericReference();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeDefiningF.getGenericReference();	  Type    actualType    =    typeDefiningF.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
259	[BUG]  [BUGGY]  Type  actualType  =  type.getGenericActualType(classDefiningF).getGenericActualType();  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  type.getGenericActualType(classDefiningF).getGenericActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type.getGenericActualType(classDefiningF).getGenericActualType();	  Type    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
260	[BUG]  [BUGGY]  Type  actualType  =  type.getGenericReturnType();  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  type.getGenericReturnType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type.getGenericReturnType();	  Type    actualType    =    type.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
261	[BUG]  [BUGGY]  Type  actualType  =  type.getGenericParameterType(0);  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  type.getGenericParameterType(0);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type.getGenericParameterType(0);	  Type    actualType    =    type.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
262	[BUG]  [BUGGY]  Type  actualType  =  f.getGenericType();  Object  actualType  =  f.getGenericType();  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getGenericType();  Object  actualType  =  f.getGenericType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    f.getGenericType();    Object  actualType  =  f.getGenericType();	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	18	None	add
263	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  factory,  f.getGenericType());  [CE]  cannot  find  symbol  factory  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  factory,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  factory,  f.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    f,    classDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol  factory	67	None	replace
264	[BUG]  [BUGGY]  Type  actualType  =  classDefiningF,  f.getActualType();  [CE]  ';'  expected  [FE]                                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  classDefiningF,  f.getActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  classDefiningF,  f.getActualType();	  Type    actualType    =    classDefiningF.getActualType();    	non-compiled	[CE]  ';'  expected	17	None	replace
265	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  typeDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  typeDefiningF.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f.getGenericType(),  typeDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
266	[BUG]  [BUGGY]  Type  actualType  =  getActualType(clazz,  f,  typeDefiningF);  [CE]  cannot  find  symbol  clazz  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(clazz,  f,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(clazz,  f,  typeDefiningF);	  Type    actualType    =    getActualType(f,    type,    classDefiningF);    	non-compiled	[CE]  cannot  find  symbol  clazz	11	None	replace
267	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  f,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  f,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  f,  type);	  Type    actualType    =    getActualType(type,    f,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	35	None	replace
268	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  f,  f.getGenericType());	  Type    actualType    =    getActualType(type,    classDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	4	None	replace
269	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  f.typeDefiningF);  [CE]  cannot  find  symbol  typeDefiningF  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  f.typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  f.typeDefiningF);	  Type    actualType    =    getActualType(f,    f,    typeDefiningF);    	non-compiled	[CE]  cannot  find  symbol  typeDefiningF	65	None	replace
270	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF,  context);  [CE]  cannot  find  symbol  context  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF,  context);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF,  context);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  cannot  find  symbol  context	70	None	replace
271	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  f.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	24	None	replace
272	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f.getGenericType(),  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f.getGenericType(),  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f.getGenericType(),  type);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	24	None	replace
273	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  f,  classDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  f,  classDefiningF,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  f,  classDefiningF,  typeDefiningF);	  Type    actualType    =    getActualType(typeDefiningF,    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	21	None	replace
274	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF,  typeDefiningF);	  Type    actualType    =    getActualType(type,    classDefiningF,    f,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	1	None	replace
275	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF,  type);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	3	None	replace
276	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF,  f);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF,  f);	  Type    actualType    =    getActualType(classDefiningF,    type,    typeDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	63	None	replace
277	[BUG]  [BUGGY]  Type  actualType  =(typeDefiningF  ==  null)?  typeDefiningF  :  f.getActualType();  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =(typeDefiningF  ==  null)?  typeDefiningF  :  f.getActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =(typeDefiningF  ==  null)?  typeDefiningF  :  f.getActualType();	  Type    actualType    =    typeDefiningF.getActualType();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
278	[BUG]  [BUGGY]  Type  actualType  =(typeDefiningF  ==  null)?  typeDefiningF.getActualType()  :  type;  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =(typeDefiningF  ==  null)?  typeDefiningF.getActualType()  :  type;  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =(typeDefiningF  ==  null)?  typeDefiningF.getActualType()  :  type;	  Type    actualType    =    typeDefiningF.getActualType();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
279	[BUG]  [BUGGY]  Type  actualType  =(typeDefiningF  ==  null)?  typeDefiningF.getActualType()  :  classDefiningF.getActualType();  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =(typeDefiningF  ==  null)?  typeDefiningF.getActualType()  :  classDefiningF.getActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =(typeDefiningF  ==  null)?  typeDefiningF.getActualType()  :  classDefiningF.getActualType();	  Type    actualType    =    typeDefiningF.getActualType();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
280	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                          UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(type,    f,    typeDefiningF,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	10	None	replace
281	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF,  factory);  [CE]  cannot  find  symbol  factory  [FE]                            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF,  factory);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF,  factory);	  Type    actualType    =    getActualType(type,    f,    typeDefiningF,    classDefiningF);    	non-compiled	[CE]  cannot  find  symbol  factory	10	None	replace
282	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  baseUri);  [CE]  cannot  find  symbol  baseUri  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  baseUri);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF,  baseUri);	  Type    actualType    =    getActualType(type,    f,    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  cannot  find  symbol  baseUri	2	None	replace
283	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  f,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  f,  f.getGenericType());  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  f,  f.getGenericType());	  Type    actualType    =    getActualType(f,    typeDefiningF,    typeDefiningF.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	58	None	replace
284	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  type,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	add	Type  actualType  =  getActualType(typeDefiningF,  type,  classDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    type,    type);    	compilable	  [FE]  IllegalArgumentException  	44	1	replace
285	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  type,  classDefiningF);  [FE]  IllegalArgumentException  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  type,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  type,  classDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    type,    type);    	compilable	  [FE]  IllegalArgumentException  	44	1	replace
286	[BUG]  [BUGGY]  Type  actualType  =  f.getActualTypeArgumentType();  [CE]  cannot  find  symbol  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  f.getActualTypeArgumentType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  f.getActualTypeArgumentType();	  Type    actualType    =    f.getGenericType();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
287	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF,  type);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	20	None	replace
288	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF,  f);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF,  f);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	23	None	replace
289	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  classDefiningFactory);  [CE]  cannot  find  symbol  classDefiningFactory  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  classDefiningFactory);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f,  classDefiningFactory);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type,    f);    	non-compiled	[CE]  cannot  find  symbol  classDefiningFactory	23	None	replace
290	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  f.getGenericType(),  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  f.getGenericType(),  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  f.getGenericType(),  typeDefiningF);	  Type    actualType    =    getActualType(type,    f.getGenericType(),    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	59	None	replace
291	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  f.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  f.getGenericParameterType(0));  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  f.getGenericParameterType(0));	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    typeDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
292	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                    UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f.type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f.type);	  Type    actualType    =    getActualType(classDefiningF,    type,    typeDefiningF);    	non-compiled	[CE]  type  has  private  access  in  Field	5	None	replace
293	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  classDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    type,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	5	None	replace
294	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  type);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  type);	  Type    actualType    =    getActualType(classDefiningF,    type,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	5	None	replace
295	[BUG]  [BUGGY]  Class  <?>  actualType  =  currentType.getGenericActualType();  [CE]  cannot  find  symbol  currentType  [FE]                        UnsupportedOperationException      [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Class  <?>  actualType  =  currentType.getGenericActualType();  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  currentType.getGenericActualType();	  Class    <?>    actualType    =    type.getGenericActualType();    	non-compiled	[CE]  cannot  find  symbol  currentType	68	None	replace
296	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF);  [CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)  [FE]    IllegalArgumentException    [CONTEXT]      public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();      [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF);  [BUGGY]      return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type    actualType    =    getActualType(typeDefiningF,    typeDefiningF,    classDefiningF);    Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF);	  	non-compiled	[CE]  variable  actualType  is  already  defined  in  method  getTypeInfoForField(Field,Type)	61	None	add
