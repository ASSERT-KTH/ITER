bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]    UnsupportedOperationException  [CONTEXT]  public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF);  [BUGGY]  return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF);	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);  	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	5	None	replace
2	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]      UnsupportedOperationException  [CONTEXT]  public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF);  [BUGGY]  return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF);	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);  	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	5	None	replace
3	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]        UnsupportedOperationException  [CONTEXT]  public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f);  [BUGGY]  return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f);	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);  	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	5	None	replace
4	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]          UnsupportedOperationException  [CONTEXT]  public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF);  [BUGGY]  return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF);	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);  	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	5	None	replace
5	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException  [CONTEXT]  public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericType());  [BUGGY]  return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericType());	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
6	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException  [CONTEXT]  public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f);  [BUGGY]  return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  f);	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);  	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	5	None	replace
7	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  actualType  [FE]                UnsupportedOperationException  [CONTEXT]  public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();  [BUGGY]    [BUGGY]  return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	  	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);  	non-compiled	[CE]  cannot  find  symbol  actualType	5	None	replace
8	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]    UnsupportedOperationException  [CONTEXT]  public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF);  [BUGGY]  return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF);	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);  	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	5	None	replace
9	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]      UnsupportedOperationException  [CONTEXT]  public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericType());  [BUGGY]  return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericType());	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);  	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	5	None	replace
10	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]    UnsupportedOperationException  [CONTEXT]  public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type);  [BUGGY]  return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type);	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);  	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	5	None	replace
11	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]      UnsupportedOperationException  [CONTEXT]  public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType(0));  [BUGGY]  return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType(0));	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF);  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
