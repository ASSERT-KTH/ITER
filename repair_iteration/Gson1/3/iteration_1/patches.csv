bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]        UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f,  typeDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  f,  typeDefiningF);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	1	None	replace
2	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]          UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  typeDefiningF);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	1	None	replace
3	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  f);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	1	None	replace
4	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	1	None	replace
5	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	1	None	replace
6	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  f);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  f);	  Type    actualType    =    getActualType(type,    f,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	4	None	replace
7	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  type);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  f,  type);	  Type    actualType    =    getActualType(type,    f,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	4	None	replace
8	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF,  type);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF,  type);	  Type    actualType    =    getActualType(type,    f,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	4	None	replace
9	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  type);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  type);	  Type    actualType    =    getActualType(type,    f,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	4	None	replace
10	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                      UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(type,    f,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	4	None	replace
11	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  type,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                        UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(f,  type,  classDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  type,  classDefiningF);	  Type    actualType    =    getActualType(type,    f,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	4	None	replace
12	[BUG]  [BUGGY]  Type  actualType  =  type.getActualType();  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  type.getActualType();  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type.getActualType();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
13	[BUG]  [BUGGY]  Type  actualType  =  type.getGenericType();  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  type.getGenericType();  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type.getGenericType();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
14	[BUG]  [BUGGY]  Type  actualType  =  classDefiningF.getGenericType();  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  classDefiningF.getGenericType();  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  classDefiningF.getGenericType();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
15	[BUG]  [BUGGY]  Type  actualType  =  f.getActualType();  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  f.getActualType();  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  f.getActualType();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
16	[BUG]  [BUGGY]  Class  <?>  actualType  =  type.getGenericType();  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Class  <?>  actualType  =  type.getGenericType();  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  type.getGenericType();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
17	[BUG]  [BUGGY]  Type  actualType  =  classDefiningF.getActualType();  [CE]  cannot  find  symbol  [FE]                              UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  classDefiningF.getActualType();  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  classDefiningF.getActualType();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
18	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]                                UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  f.getGenericType();  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	add	Type  actualType  =  f.getGenericType();	      	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	7	1	replace
19	[BUG]  [BUGGY]  Type  actualType  =  f.getGenericType();  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]                                UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  f.getGenericType();  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  f.getGenericType();	      	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	7	1	replace
20	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]        UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  type);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  type);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	8	None	replace
21	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]          UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  typeDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	8	None	replace
22	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  f,  typeDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	8	None	replace
23	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  f);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type,  f);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	8	None	replace
24	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]          UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f.getGenericType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	9	None	replace
25	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
26	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF.getGenericType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
27	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	9	None	replace
28	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type.getGenericType());  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type.getGenericType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
29	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  type.getGenericType());  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  type.getGenericType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  type.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
30	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]        UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	10	None	replace
31	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]          UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	10	None	replace
32	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  f);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	10	None	replace
33	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  type);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  classDefiningF,  type);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	10	None	replace
34	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF.getGenericType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  classDefiningF.getGenericType());	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
35	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	6	None	replace
36	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                    UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  type);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  type);	  Type    actualType    =    getActualType(type,    typeDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	6	None	replace
37	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericParameterType(0));  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
38	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericParameterType(0));  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
39	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type.getGenericParameterType(0));  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  type.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
40	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType());  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
41	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericParameterType(0));  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
42	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericParameterType(0));  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
43	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]          UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	2	None	replace
44	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  type);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  type);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	2	None	replace
45	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  classDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	2	None	replace
46	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  f);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  f);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	2	None	replace
47	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  typeDefiningF,  typeDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
48	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  classDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
49	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF,  type);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF,  type);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	3	None	replace
50	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	3	None	replace
51	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  false);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]        UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  false);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  false);	  Type    actualType    =    getActualType(type,    classDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	1	None	replace
52	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  type);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  classDefiningF,  typeDefiningF,  type);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	3	None	replace
53	[BUG]  [BUGGY]  Type  actualType  =  typeDefiningF.getActualType();  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  typeDefiningF.getActualType();  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeDefiningF.getActualType();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
54	[BUG]  [BUGGY]  Type  actualType  =  typeDefiningF.getGenericType();  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  typeDefiningF.getGenericType();  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  typeDefiningF.getGenericType();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
55	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericParameterType(0));  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  f.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
56	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericParameterType(1));  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF,  f.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
57	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType(1));  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType(1));  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericParameterType(1));	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericParameterType(0));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
58	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF.getGenericType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  typeDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
59	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  typeDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f.getGenericType(),  typeDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	9	None	replace
60	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  typeDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(type,    f,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	4	None	replace
61	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	add	Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type);    	compilable	  [FE]  IllegalArgumentException  	10	1	replace
62	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [FE]  IllegalArgumentException  [FE]        UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  classDefiningF);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    type);    	compilable	  [FE]  IllegalArgumentException  	10	1	replace
63	[BUG]  [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]        UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(classDefiningF,  type,  typeDefiningF,  f);	  Type    actualType    =    getActualType(classDefiningF,    typeDefiningF,    typeDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	8	None	replace
64	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericType(),  classDefiningF);  [CE]  cannot  find  symbol  [FE]                UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericType(),  classDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  classDefiningF.getGenericType(),  classDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
65	[BUG]  [BUGGY]  Type  actualType  =  getActualType(f,  f,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]              UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(f,  f,  typeDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(f,  f,  typeDefiningF);	  Type    actualType    =    getActualType(type,    f,    classDefiningF);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	4	None	replace
66	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  f.getGenericType());  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]          UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  f,  typeDefiningF,  f.getGenericType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f,  typeDefiningF,  f.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	9	None	replace
67	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF.getGenericType());  [CE]  cannot  find  symbol  [FE]            UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF.getGenericType());  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF.getGenericType());	  Type    actualType    =    getActualType(type,    typeDefiningF,    f.getGenericType());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
68	[BUG]  [BUGGY]  Class  <?>  actualType  =  type.getGenericActualType();  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Class  <?>  actualType  =  type.getGenericActualType();  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Class  <?>  actualType  =  type.getGenericActualType();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
69	[BUG]  [BUGGY]  Type  actualType  =  type.getGenericActualType();  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  type.getGenericActualType();  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  type.getGenericActualType();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
70	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]            UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  f.getGenericType(),  classDefiningF,  typeDefiningF);	  Type    actualType    =    getActualType(type,    typeDefiningF,    classDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	3	None	replace
71	[BUG]  [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  type);  [CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                  UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  type);  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(typeDefiningF,  typeDefiningF,  type);	  Type    actualType    =    getActualType(type,    typeDefiningF,    f);    	non-compiled	[CE]  method  getActualType  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	6	None	replace
72	[BUG]  [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF.getGenericParameterType(0));  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException    [CONTEXT]    public  static  TypeInfo  getTypeInfoForField(Field  f,  Type  typeDefiningF)  {  Class<?>  classDefiningF  =  TypeUtils.toRawClass(typeDefiningF);  Type  type  =  f.getGenericType();    [BUGGY]  Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF.getGenericParameterType(0));  [BUGGY]    return  new  TypeInfo(actualType);  }  [CLASS]  TypeInfoFactory  [METHOD]  getTypeInfoForField  [RETURN_TYPE]  TypeInfo  Field  f  Type  typeDefiningF  [VARIABLES]  Field  f  Type  actualType  type  typeDefiningF  boolean  Class  classDefiningF  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	54	54	1	replace	Type  actualType  =  getActualType(type,  typeDefiningF,  f,  classDefiningF.getGenericParameterType(0));	  Type    actualType    =    getActualType(type,    typeDefiningF,    f);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
