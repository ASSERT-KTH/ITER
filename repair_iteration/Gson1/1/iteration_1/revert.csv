projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getRawClass(typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getClass(typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(f,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,false);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,true);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f.getModule());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f.getGenericType());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.constructType(typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(f,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,type);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(type,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,typeTypeFactory);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,typeInfoF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,typeType);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(typeDefiningF,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(f,typeDefiningF,true);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(f,typeDefiningF,false);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(class,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=typeDefiningF.getTypeInfoForField(f,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(f,typeDefiningF,null);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getClass(typeDefiningF,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getClass(f,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getClass(typeDefiningF,f.getGenericType());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getClass(class,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getClass(typeDefiningF,f.getModule());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getClass(typeDefiningF,type);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getClass(typeDefiningF,typeInfoF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.constructType(typeDefiningF,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.constructType(f,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.constructType(f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.constructType(classDefiningF,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.constructType(typeDefiningF,false);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.constructType(typeDefiningF,true);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(f,typeDefiningF.getModule());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(f,f.getModule());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,f.getModule());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,typeDefiningF.getModule());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f.getModule(),typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=typeDefiningF.toRawClass(f,f.getModule());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getRawClass(typeDefiningF,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getRawClass(f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getRawClass(f,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getRawClass(classDefiningF,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=typeDefiningF.getRawClass();
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getRawClass(typeDefiningF,f.getGenericType());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=typeDefiningF.getTypeInfoForField(f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(class,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(class);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(f,typeDefiningF,true);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,true,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,false,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,false,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,null,true);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(class,typeDefiningF,true);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(class,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(scope,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(newField[]{f});
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(parent,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(f,typeDefiningF.getGenericType());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,f.getGenericType());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(type,f.getGenericType());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(f,f.getGenericType());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f.getGenericType(),typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(class,typeDefiningF,f.getGenericType());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f.getGenericType(),type);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(f,typeDefiningF,false);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,false,f.getGenericType());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,null,false);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,true,type);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52TypeInfotypeInfo=f.getGenericType();
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Typef=f.getGenericType();
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52TypeInfotypeInfo=getTypeInfoForField(f,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52TypeclassDefiningF=f.getGenericType();
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Typetype=f.getGenericType();
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=f.getClass();
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52TypeInfof=f.getGenericType();
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(f,typeDefiningF,this);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(f,typeDefiningF,factory);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(f,false);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,false,f.getModule());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(classDefiningF,false);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f.getGenericType(),typeDeiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52TypeclassDefiningF=f.getGenericClass();
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52TypeclassDefiningF=f.getClass();
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52TypeclassDefiningF=f.getSuperclass();
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getClass(typeDefiningF,f.getGenericParameterType(0));
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.constructType(typeDefiningF,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(f,true);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,null);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(classDefiningF,true);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,field.getModule());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,factory.getModule());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getRawClass(typeDefiningF,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getRawClass(typeDefiningF,false);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,typeFactory);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,typeResolver);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,typeReferenceF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,mapper.getModule());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,null,typeDefiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(classDefiningF,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,factory);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,field);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f,typeDeiningF);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52TypeInfotype=f.getGenericType();
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=f.getRawClass();
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=f.getGenericClass();
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getClass(typeDefiningF,f.getSuperclass());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getClass(typeDefiningF,f.getDeclaringClass());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getClass(typeDefiningF,f.getParameterType(0));
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.toRawClass(typeDefiningF,f.getGenericParameterType(0));
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getRawClass(typeDefiningF,f.getModule());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getRawClass(typeDefiningF,f.getModifiers());
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(scope,f);
projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java52Class<?>classDefiningF=TypeUtils.getTypeInfoForField(this.typeDefiningF);
