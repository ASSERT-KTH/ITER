bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	4	1	replace
2	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	4	1	replace
3	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	4	1	replace
4	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	4	1	replace
5	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  objParameterizedType.getClasses();  [CE]  cannot  find  symbol  objParameterizedType  [FE]                  UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  classTypeVariables  =  objParameterizedType.getClasses();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  classTypeVariables  =  objParameterizedType.getClasses();	      	non-compiled	[CE]  cannot  find  symbol  objParameterizedType	11	None	replace
6	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  typeToEvaluate.getClassParameters();  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  classTypeVariables  =  typeToEvaluate.getClassParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  classTypeVariables  =  typeToEvaluate.getClassParameters();	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
7	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  typeToEvaluate.getClasses();  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  classTypeVariables  =  typeToEvaluate.getClasses();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  classTypeVariables  =  typeToEvaluate.getClasses();	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
8	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  typeToEvaluate.getRawClassParameters();  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  classTypeVariables  =  typeToEvaluate.getRawClassParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  classTypeVariables  =  typeToEvaluate.getRawClassParameters();	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
9	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  castedType.getClassParameters();  [CE]  cannot  find  symbol  [FE]                          UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  classTypeVariables  =  castedType.getClassParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  classTypeVariables  =  castedType.getClassParameters();	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
10	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  objParameterizedType.getClassParameters();  [CE]  cannot  find  symbol  objParameterizedType  [FE]                            UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  classTypeVariables  =  objParameterizedType.getClassParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  classTypeVariables  =  objParameterizedType.getClassParameters();	      	non-compiled	[CE]  cannot  find  symbol  objParameterizedType	11	None	replace
11	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  objParameterizedType.getRawClasses();  [CE]  cannot  find  symbol  objParameterizedType  [FE]                              UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  classTypeVariables  =  objParameterizedType.getRawClasses();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  classTypeVariables  =  objParameterizedType.getRawClasses();	      	non-compiled	[CE]  cannot  find  symbol  objParameterizedType	11	None	replace
12	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  missing  return  statement	16	None	add
13	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  missing  return  statement	16	None	add
14	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  ParameterizedType)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  missing  return  statement	16	None	add
15	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(classTypeVariables  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  cannot  find  symbol  classTypeVariables  [FE]          UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(classTypeVariables  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(classTypeVariables  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	16	None	add
16	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  missing  return  statement  [FE]            UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  missing  return  statement	16	None	add
17	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluated  instanceof  ParameterizedType)  {  [CE]  cannot  find  symbol  typeToEvaluated  [FE]              UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluated  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluated  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  cannot  find  symbol  typeToEvaluated	16	None	add
18	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
19	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
20	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
21	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  CategoryVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  CategoryVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  CategoryVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
22	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]            UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
23	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  typeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  [FE]              UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  typeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  typeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
24	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  missing  return  statement  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  missing  return  statement	14	None	add
25	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	14	None	add
26	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	14	None	add
27	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>[])  {  [CE]  inconvertible  types  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>[])  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>[])  {	  	non-compiled	[CE]  inconvertible  types	14	None	add
28	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]            java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	14	None	add
29	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]              java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	14	None	add
30	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>[]  classTypeVariables)  {  [CE]  ')'  expected  [FE]                java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>[]  classTypeVariables)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>[]  classTypeVariables)  {	  	non-compiled	[CE]  ')'  expected	14	None	add
31	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	5	None	add
32	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	5	None	add
33	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	5	None	add
34	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(classTypeVariables  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  classTypeVariables  [FE]          UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(classTypeVariables  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(classTypeVariables  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	5	None	add
35	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]            UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	5	None	add
36	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <!>)  {  [CE]  illegal  start  of  type  [FE]              UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <!>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <!>)  {	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
37	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  }    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	15	1	replace
38	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  }    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	15	1	replace
39	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(typeToEvaluate  instanceof  Class  <?>  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	6	1	replace
40	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(typeToEvaluate  instanceof  Class  <?>  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	6	1	replace
41	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	6	1	replace
42	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(parentType  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	6	1	replace
43	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	2	1	replace
44	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	2	1	replace
45	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	7	None	add
46	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	7	None	add
47	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	7	None	add
48	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  typeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  typeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  typeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
49	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]            UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	7	None	add
50	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <!>)  {  [CE]  illegal  start  of  type  [FE]              UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <!>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <!>)  {	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
51	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  ParameterizedType)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	17	1	replace
52	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  ParameterizedType)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  ParameterizedType)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	17	1	replace
53	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
54	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
55	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
56	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]          UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
57	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(actualType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  actualType  [FE]            UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(actualType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    }  else  if(actualType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualType	9	None	add
58	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	10	1	replace
59	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	10	1	replace
60	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	10	1	replace
61	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	10	1	replace
62	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  actualType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  actualType  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  actualType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  actualType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    	non-compiled	[CE]  cannot  find  symbol  actualType	10	None	replace
63	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	8	1	replace
64	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	8	1	replace
65	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	8	1	replace
66	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	8	1	replace
67	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	8	1	replace
68	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	8	1	replace
69	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
70	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
71	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
72	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
73	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]            java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
74	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]              java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
75	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]                java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	1	None	add
76	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
77	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
78	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
79	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
80	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(actualType  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  actualType  [FE]            java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(actualType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    }  else  if(actualType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  actualType	12	None	add
81	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]              java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
82	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]                java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
83	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
84	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  'else'  without  'if'  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  'else'  without  'if'	16	None	add
85	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  not  a  statement	16	None	add
86	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
87	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  'else'  without  'if'  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	5	None	add
88	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instancesof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instancesof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instancesof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  ')'  expected	5	None	add
89	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
90	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instancesof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  ')'  expected  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(typeToEvaluate  instancesof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(typeToEvaluate  instancesof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  ')'  expected	7	None	add
91	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  'else'  without  'if'  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
92	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    if(typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
93	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  if(parentType  instanceof  TypeVariable  <?>)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  if(parentType  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    if(parentType  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
94	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate!=  null)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate!=  null)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    if(typeToEvaluate!=  null)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
95	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate!=  null)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  }  [CE]  missing  return  statement  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate!=  null)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  }  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    if(typeToEvaluate!=  null)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  }	  	non-compiled	[CE]  missing  return  statement	12	None	add
96	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate!=  null)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters()  [CE]  ';'  expected  [FE]            java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate!=  null)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters()  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    if(typeToEvaluate!=  null)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters()	  	non-compiled	[CE]  ';'  expected	12	None	add
97	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	2	1	replace
98	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  Class  <?>)  {  [FE]  UnsupportedOperationException  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	2	1	replace
99	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instancesof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instancesof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instancesof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
100	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
101	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  'else'  without  'if'  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
102	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  SortedType  <?>)  {  [CE]  cannot  find  symbol  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  SortedType  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(typeToEvaluate  instanceof  SortedType  <?>)  {	  }    else    if(parentType    instanceof    TypeVariable    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
103	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
104	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instancesof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  ')'  expected  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(typeToEvaluate  instancesof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    }  else  if(typeToEvaluate  instancesof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  ')'  expected	9	None	add
105	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  'else'  without  'if'  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
106	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(parentType  instanceof  ParameterizedType)  {  TypeVariable  <?>  fieldTypeVariable  =  (TypeVariable  <?>)  typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(parentType  instanceof  ParameterizedType)  {  TypeVariable  <?>  fieldTypeVariable  =  (TypeVariable  <?>)  typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    if(parentType  instanceof  ParameterizedType)  {  TypeVariable  <?>  fieldTypeVariable  =  (TypeVariable  <?>)  typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
107	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
108	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(parentType  instanceof  ParameterizedType)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(parentType  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    if(parentType  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
109	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(parentType  instanceof  ParameterizedType)  {  TypeVariable  <?>  fieldTypeVariable  =  (TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters()  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(parentType  instanceof  ParameterizedType)  {  TypeVariable  <?>  fieldTypeVariable  =  (TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters()  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    if(parentType  instanceof  ParameterizedType)  {  TypeVariable  <?>  fieldTypeVariable  =  (TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters()	  	non-compiled	[CE]  ';'  expected	14	None	add
110	[BUG]  [BUGGY]  Type[]  parentTypeArguments  =  typeToEvaluate.getParameterTypes();  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  parentTypeArguments  =  typeToEvaluate.getParameterTypes();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  parentTypeArguments  =  typeToEvaluate.getParameterTypes();	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
111	[BUG]  [BUGGY]  Type[]  parentTypeArguments  =  typeToEvaluate.getGenericParameters();  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  parentTypeArguments  =  typeToEvaluate.getGenericParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  parentTypeArguments  =  typeToEvaluate.getGenericParameters();	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
112	[BUG]  [BUGGY]  Type  parentType  =  typeToEvaluate.getParentClass();  [CE]  variable  parentType  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type  parentType  =  typeToEvaluate.getParentClass();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type  parentType  =  typeToEvaluate.getParentClass();	      	non-compiled	[CE]  variable  parentType  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	11	None	replace
113	[BUG]  [BUGGY]  Type[]  parentTypeArguments  =  castedType.getParameterTypes();  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  parentTypeArguments  =  castedType.getParameterTypes();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  parentTypeArguments  =  castedType.getParameterTypes();	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
114	[BUG]  [BUGGY]  Type  parentType  =  getActualType(parentType,  rawParentClass);  [CE]  variable  parentType  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type  parentType  =  getActualType(parentType,  rawParentClass);  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type  parentType  =  getActualType(parentType,  rawParentClass);	      	non-compiled	[CE]  variable  parentType  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	11	None	replace
115	[BUG]  [BUGGY]  Type  parentType  =  typeToEvaluate.getParameterType(actualType);  [CE]  variable  parentType  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                            UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type  parentType  =  typeToEvaluate.getParameterType(actualType);  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type  parentType  =  typeToEvaluate.getParameterType(actualType);	      	non-compiled	[CE]  variable  parentType  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	11	None	replace
116	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  ParameterizedType)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	17	1	replace
117	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  ParameterizedType)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(parentType  instanceof  TypeVariable  <?>  ||  parentType  instanceof  ParameterizedType)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	17	1	replace
118	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	17	1	replace
119	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(parentType  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    	compilable	  [FE]  java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class  	17	1	replace
120	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	add	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	10	1	replace
121	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  parentType  instanceof  Class  <?>)  {  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  &&  parentType  instanceof  Class  <?>)  {	  }    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    	compilable	  [FE]  UnsupportedOperationException  	10	1	replace
122	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  if(typeToEvaluate  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  if(typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>)    {    if(typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
123	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>)  {  TypeVariable  <?>  fieldTypeVariable  =  (TypeVariable  <?>)  typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  [CE]  illegal  start  of  expression  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>)  {  TypeVariable  <?>  fieldTypeVariable  =  (TypeVariable  <?>)  typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>)    {    if(parentType  instanceof  Class  <?>)  {  TypeVariable  <?>  fieldTypeVariable  =  (TypeVariable  <?>)  typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
124	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  if(parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>)    {    if(parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
125	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  if(parentType  instanceof  TypeVariable  <?>)  {  TypeVariable  <?>  fieldTypeVariable  =  (TypeVariable  <?>)  typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  [CE]  illegal  start  of  expression  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  if(parentType  instanceof  TypeVariable  <?>)  {  TypeVariable  <?>  fieldTypeVariable  =  (TypeVariable  <?>)  typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>)    {    if(parentType  instanceof  TypeVariable  <?>)  {  TypeVariable  <?>  fieldTypeVariable  =  (TypeVariable  <?>)  typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
126	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  castedType.getClasses();  [CE]  cannot  find  symbol  [FE]                  UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  classTypeVariables  =  castedType.getClasses();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  classTypeVariables  =  castedType.getClasses();	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
127	[BUG]  [BUGGY]  Type[]  classTypeVariables  =  castedType.getRawClassParameters();  [CE]  cannot  find  symbol  [FE]                    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  classTypeVariables  =  castedType.getRawClassParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  classTypeVariables  =  castedType.getRawClassParameters();	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
128	[BUG]  [BUGGY]  Type[]  rawParentClass  =  castedType.getRawClass();  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  rawParentClass  =  castedType.getRawClass();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  rawParentClass  =  castedType.getRawClass();	      	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	11	None	replace
129	[BUG]  [BUGGY]  Type[]  rawParentClassArguments  =  castedType.getRawClassParameters();  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  rawParentClassArguments  =  castedType.getRawClassParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  rawParentClassArguments  =  castedType.getRawClassParameters();	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
130	[BUG]  [BUGGY]  Type[]  rawParentClass  =  castedType.getGenericParameters();  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  rawParentClass  =  castedType.getGenericParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  rawParentClass  =  castedType.getGenericParameters();	      	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	11	None	replace
131	[BUG]  [BUGGY]  Type[]  rawParentClass  =  typeToEvaluate.getRawClass();  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                            UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  Type[]  rawParentClass  =  typeToEvaluate.getRawClass();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	Type[]  rawParentClass  =  typeToEvaluate.getRawClass();	      	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	11	None	replace
132	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(groupTypeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  groupTypeToEvaluate  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  else  if(groupTypeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    }  else  if(groupTypeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  groupTypeToEvaluate	9	None	add
133	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    parentType    instanceof    Class    <?>)    {    }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  parentType  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	9	None	add
134	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	7	None	add
135	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  SortedType)  {  [CE]  cannot  find  symbol  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  SortedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}  else  if(typeToEvaluate  instanceof  SortedType)  {	  }    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
136	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  missing  return  statement	3	None	add
137	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(groupTypeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [CE]  cannot  find  symbol  groupTypeToEvaluate  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  }  else  if(groupTypeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    Class    <?>)    {    }  else  if(groupTypeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  Class  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  groupTypeToEvaluate	3	None	add
138	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  typeToEvaluate  =(TypeVariable  <?>)typeToEvaluate;  [CE]  missing  return  statement  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>)  {  typeToEvaluate  =(TypeVariable  <?>)typeToEvaluate;  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>)    {    typeToEvaluate  =(TypeVariable  <?>)typeToEvaluate;	  	non-compiled	[CE]  missing  return  statement	1	None	add
139	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(groupTypeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  cannot  find  symbol  groupTypeToEvaluate  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  else  if(groupTypeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    }  else  if(groupTypeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  cannot  find  symbol  groupTypeToEvaluate	16	None	add
140	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    TypeVariable    <?>    ||    typeToEvaluate    instanceof    ParameterizedType)    {    }  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  ParameterizedType)  {	  	non-compiled	[CE]  missing  return  statement	16	None	add
141	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(groupTypeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  groupTypeToEvaluate  [FE]    UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(groupTypeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(groupTypeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  groupTypeToEvaluate	5	None	add
142	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  missing  return  statement	5	None	add
143	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(groupTypeToEvaluate  instanceof  Class  <?>  ||  groupTypeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  cannot  find  symbol  groupTypeToEvaluate  [FE]        UnsupportedOperationException    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  Class  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  }  else  if(groupTypeToEvaluate  instanceof  Class  <?>  ||  groupTypeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    Class    <?>    ||    typeToEvaluate    instanceof    TypeVariable    <?>)    {    }  else  if(groupTypeToEvaluate  instanceof  Class  <?>  ||  groupTypeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  cannot  find  symbol  groupTypeToEvaluate	5	None	add
144	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    if(typeToEvaluate  instanceof  TypeVariable  <?>  ||  typeToEvaluate  instanceof  TypeVariable  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
145	[BUG]  [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType.equals(typeToEvaluate))  {  [CE]  missing  return  statement  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(parentType  instanceof  TypeVariable  <?>)  {  }  else  if(parentType.equals(typeToEvaluate))  {  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(parentType    instanceof    TypeVariable    <?>)    {    }  else  if(parentType.equals(typeToEvaluate))  {	  	non-compiled	[CE]  missing  return  statement	12	None	add
146	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  [CE]  illegal  start  of  expression  [FE]    java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  ParameterizedType)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
147	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters()  [CE]  ';'  expected  [FE]      java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters()  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  ParameterizedType)  {  TypeVariable  <?>  fieldTypeVariable  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters()	  	non-compiled	[CE]  ';'  expected	14	None	add
148	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType)  {  TypeVariable  <?>  parentType  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  [CE]  illegal  start  of  expression  [FE]        java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType)  {  TypeVariable  <?>  parentType  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  ParameterizedType)  {  TypeVariable  <?>  parentType  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
149	[BUG]  [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType)  {  TypeVariable  <?>  parentType  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters()  [CE]  ';'  expected  [FE]          java.lang.IllegalArgumentException:  Type  'S'  is  not  a  Class    [CONTEXT]    }  else  if  (typeToEvaluate  instanceof  GenericArrayType)  {  GenericArrayType  castedType  =  (GenericArrayType)  typeToEvaluate;  Type  componentType  =  castedType.getGenericComponentType();  Type  actualType  =  getActualType(componentType,  parentType,  rawParentClass);  if  (componentType.equals(actualType))  {  return  castedType;  }  return  actualType  instanceof  Class<?>  ?  TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))  :  new  GenericArrayTypeImpl(actualType);    [BUGGY]  }  else  if(typeToEvaluate  instanceof  ParameterizedType)  {  if(typeToEvaluate  instanceof  ParameterizedType)  {  TypeVariable  <?>  parentType  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters()  [BUGGY]    if  (parentType  instanceof  ParameterizedType)  {        TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	79	79	1	replace	}    else    if(typeToEvaluate    instanceof    ParameterizedType)    {    if(typeToEvaluate  instanceof  ParameterizedType)  {  TypeVariable  <?>  parentType  =(TypeVariable  <?>)typeToEvaluate;  TypeVariable  <?>[]  classTypeVariables  =  rawParentClass.getTypeParameters()	  	non-compiled	[CE]  ';'  expected	14	None	add
