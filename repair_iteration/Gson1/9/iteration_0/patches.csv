bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]    UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	non-compiled	[CE]  unclosed  string  literal	17	None	replace
2	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]      UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	non-compiled	[CE]  unclosed  string  literal	17	None	replace
3	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-De  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-De	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	non-compiled	[CE]  unclosed  string  literal	17	None	replace
4	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	non-compiled	[CE]  unclosed  string  literal	17	None	replace
5	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	non-compiled	[CE]  unclosed  string  literal	17	None	replace
6	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	non-compiled	[CE]  unclosed  string  literal	17	None	replace
7	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]                UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]    [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	  	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	non-compiled	[CE]  missing  return  statement	17	None	replace
8	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]    UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	non-compiled	[CE]  unclosed  string  literal	17	None	replace
9	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]      UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	non-compiled	[CE]  unclosed  string  literal	17	None	replace
10	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	non-compiled	[CE]  unclosed  string  literal	17	None	replace
11	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	non-compiled	[CE]  unclosed  string  literal	17	None	replace
12	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	compilable	  [FE]  UnsupportedOperationException  	17	1	replace
13	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	compilable	  [FE]  UnsupportedOperationException  	17	1	replace
14	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]    UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	non-compiled	[CE]  unclosed  string  literal	17	None	replace
15	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	compilable	  [FE]  UnsupportedOperationException  	17	1	replace
16	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	compilable	  [FE]  UnsupportedOperationException  	17	1	replace
17	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	compilable	  [FE]  UnsupportedOperationException  	17	1	replace
18	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException  [CONTEXT]  TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException( "Type  \' "  +  typeToEvaluate  +   "\'  is  not  a  Class,   "  +   "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type. ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  +   ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  	compilable	  [FE]  UnsupportedOperationException  	17	1	replace
