bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  classTypeVariables);  [CE]  cannot  find  symbol  classTypeVariables  [FE]                            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  classTypeVariables);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  classTypeVariables);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    typeToEvaluate);    	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	59	None	replace
2	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  parentType);  [CE]  method  getIndex  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  parentType);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  parentType);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    typeToEvaluate);    	non-compiled	[CE]  method  getIndex  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	59	None	replace
3	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  classTypeVariable);  [CE]  cannot  find  symbol  classTypeVariable  [FE]                                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  classTypeVariable);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  classTypeVariable);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    typeToEvaluate);    	non-compiled	[CE]  cannot  find  symbol  classTypeVariable	59	None	replace
4	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(actualTypeVariables,  typeToEvaluate);  [CE]  cannot  find  symbol  actualTypeVariables  [FE]                                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(actualTypeVariables,  typeToEvaluate);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(actualTypeVariables,  typeToEvaluate);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    typeToEvaluate);    	non-compiled	[CE]  cannot  find  symbol  actualTypeVariables	59	None	replace
5	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	113	1	replace
6	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	113	1	replace
7	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	3	1	replace
8	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generation ");  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	3	1	replace
9	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	3	1	replace
10	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generation ");  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	3	1	replace
11	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	49	None	replace
12	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	49	None	replace
13	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	49	None	replace
14	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	74	1	replace
15	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	74	1	replace
16	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	compilable	  [FE]  UnsupportedOperationException  	82	1	replace
17	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener. ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	compilable	  [FE]  UnsupportedOperationException  	82	1	replace
18	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
19	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ",  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ",  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ",	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
20	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
21	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ",.    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	88	None	replace
22	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ",.    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	88	None	replace
23	[BUG]  [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	non-compiled	[CE]  unclosed  string  literal	101	None	replace
24	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	non-compiled	[CE]  unclosed  string  literal	101	None	replace
25	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	non-compiled	[CE]  unclosed  string  literal	101	None	replace
26	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  fieldTypeVariable);  [CE]  cannot  find  symbol  fieldTypeVariable  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  fieldTypeVariable);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  fieldTypeVariable);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    fieldTypeVariable);    	non-compiled	[CE]  cannot  find  symbol  fieldTypeVariable	57	None	replace
27	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  actualTypeVariable);  [CE]  cannot  find  symbol  classTypeVariables  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  actualTypeVariable);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  actualTypeVariable);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    fieldTypeVariable);    	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	57	None	replace
28	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  rawParentClass);  [CE]  cannot  find  symbol  classTypeVariables  [FE]                            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  rawParentClass);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  rawParentClass);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    fieldTypeVariable);    	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	57	None	replace
29	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	14	1	replace
30	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Generation ");  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	14	1	replace
31	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  not  a  statement  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
32	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  not  a  statement  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
33	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");  [CE]  not  a  statement  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
34	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  not  a  statement  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
35	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	79	1	replace
36	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	79	1	replace
37	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  not  a  statement  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  not  a  statement	32	None	replace
38	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener  [CE]  not  a  statement  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  not  a  statement	32	None	replace
39	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [CE]  not  a  statement  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  not  a  statement	32	None	replace
40	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	45	None	replace
41	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	45	None	replace
42	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	84	None	replace
43	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	84	None	replace
44	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	84	None	replace
45	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    	non-compiled	[CE]  unclosed  string  literal	37	None	replace
46	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    	non-compiled	[CE]  unclosed  string  literal	37	None	replace
47	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	103	None	replace
48	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  not  a  statement	78	None	add
49	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  	78	None	add
50	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  	78	None	add
51	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  not  a  statement	78	None	add
52	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  not  a  statement  [FE]            UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener	  	non-compiled	[CE]  not  a  statement	78	None	add
53	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  [FE]              UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  	78	None	add
54	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	11	None	replace
55	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	11	None	replace
56	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	11	None	replace
57	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	5	1	replace
58	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");  [FE]  UnsupportedOperationException  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	5	1	replace
59	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	5	1	replace
60	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");  [FE]  UnsupportedOperationException  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	5	1	replace
61	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	25	1	replace
62	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	25	1	replace
63	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ",.    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	76	None	replace
64	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ",.    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	76	None	replace
65	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	86	None	replace
66	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	41	1	replace
67	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	41	1	replace
68	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	41	1	replace
69	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	41	1	replace
70	[BUG]  [BUGGY]  Type[]  actualTypeArguments  =  parentType.getActualTypeArguments();  [CE]  cannot  find  symbol  [FE]                                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeArguments  =  parentType.getActualTypeArguments();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeArguments  =  parentType.getActualTypeArguments();	  Type[]    actualTypeArguments    =    objParameterizedType.getActualTypeArguments();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
71	[BUG]  [BUGGY]  Type[]  actualTypeArguments  =  typeToEvaluate.getActualTypeArguments();  [CE]  cannot  find  symbol  [FE]                                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeArguments  =  typeToEvaluate.getActualTypeArguments();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeArguments  =  typeToEvaluate.getActualTypeArguments();	  Type[]    actualTypeArguments    =    objParameterizedType.getActualTypeArguments();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
72	[BUG]  [BUGGY]  Type[]  actualTypeArguments  =  rawParentClass.getActualTypeArguments();  [CE]  cannot  find  symbol  [FE]                                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeArguments  =  rawParentClass.getActualTypeArguments();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeArguments  =  rawParentClass.getActualTypeArguments();	  Type[]    actualTypeArguments    =    objParameterizedType.getActualTypeArguments();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
73	[BUG]  [BUGGY]  Type[]  actualTypeArguments  =  castedType.getActualTypeArguments();  [CE]  cannot  find  symbol  castedType  [FE]                                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeArguments  =  castedType.getActualTypeArguments();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeArguments  =  castedType.getActualTypeArguments();	  Type[]    actualTypeArguments    =    objParameterizedType.getActualTypeArguments();    	non-compiled	[CE]  cannot  find  symbol  castedType	62	None	replace
74	[BUG]  [BUGGY]  Type[]  actualTypeArguments  =  componentType.getActualTypeArguments();  [CE]  cannot  find  symbol  componentType  [FE]                                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeArguments  =  componentType.getActualTypeArguments();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeArguments  =  componentType.getActualTypeArguments();	  Type[]    actualTypeArguments    =    objParameterizedType.getActualTypeArguments();    	non-compiled	[CE]  cannot  find  symbol  componentType	62	None	replace
75	[BUG]  [BUGGY]  Type[]  actualTypeArguments  =  context.getActualTypeArguments();  [CE]  cannot  find  symbol  context  [FE]                                            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeArguments  =  context.getActualTypeArguments();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeArguments  =  context.getActualTypeArguments();	  Type[]    actualTypeArguments    =    objParameterizedType.getActualTypeArguments();    	non-compiled	[CE]  cannot  find  symbol  context	62	None	replace
76	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener  [CE]  not  a  statement  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  not  a  statement	12	None	replace
77	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	55	None	replace
78	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  getName()  + "://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  getName()  + "://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  getName()  + "://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	55	None	replace
79	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  not  a  statement	38	None	add
80	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	38	None	add
81	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  not  a  statement	38	None	add
82	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator. ");  [CE]  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator. ");	  	non-compiled	[CE]  	38	None	add
83	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator. ");  [CE]  not  a  statement  [FE]            UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator. ");	  	non-compiled	[CE]  not  a  statement	38	None	add
84	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	75	None	replace
85	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
86	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",.n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	98	None	replace
87	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TO  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TO  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TO	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",.n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	98	None	replace
88	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",.n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	98	None	replace
89	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
90	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
91	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  UnsupportedOperationException)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  instanceof  UnsupportedOperationException)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  instanceof  UnsupportedOperationException)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	115	None	replace
92	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  UnsupportedOperationException)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  instanceof  UnsupportedOperationException)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  instanceof  UnsupportedOperationException)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	115	None	replace
93	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
94	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
95	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");	  	non-compiled	[CE]  	125	None	add
96	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");	  	non-compiled	[CE]  not  a  statement	125	None	add
97	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generations ");  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generations ");	  	non-compiled	[CE]  not  a  statement	125	None	add
98	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations. ");  [CE]  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations. ");	  	non-compiled	[CE]  	125	None	add
99	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	53	None	replace
100	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	53	None	replace
101	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-    	non-compiled	[CE]  unclosed  string  literal	56	None	replace
102	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
103	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  not  a  statement  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	non-compiled	[CE]  not  a  statement	15	None	replace
104	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  parentType.getTypeParameters();  [CE]  cannot  find  symbol  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  parentType.getTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  parentType.getTypeParameters();	  Type[]    actualTypeParameters    =    rawParentClass.getTypeParameters();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
105	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  objParameterizedType.getTypeParameters();  [CE]  cannot  find  symbol  objParameterizedType  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  objParameterizedType.getTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  objParameterizedType.getTypeParameters();	  Type[]    actualTypeParameters    =    rawParentClass.getTypeParameters();    	non-compiled	[CE]  cannot  find  symbol  objParameterizedType	91	None	replace
106	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  typeToEvaluate.getTypeParameters();  [CE]  cannot  find  symbol  [FE]                            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  typeToEvaluate.getTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  typeToEvaluate.getTypeParameters();	  Type[]    actualTypeParameters    =    rawParentClass.getTypeParameters();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
107	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  fieldTypeVariable.getTypeParameters();  [CE]  cannot  find  symbol  fieldTypeVariable  [FE]                              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  fieldTypeVariable.getTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  fieldTypeVariable.getTypeParameters();	  Type[]    actualTypeParameters    =    rawParentClass.getTypeParameters();    	non-compiled	[CE]  cannot  find  symbol  fieldTypeVariable	91	None	replace
108	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  fieldTypeVariables.getTypeParameters();  [CE]  cannot  find  symbol  fieldTypeVariables  [FE]                                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  fieldTypeVariables.getTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  fieldTypeVariables.getTypeParameters();	  Type[]    actualTypeParameters    =    rawParentClass.getTypeParameters();    	non-compiled	[CE]  cannot  find  symbol  fieldTypeVariables	91	None	replace
109	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  classTypeVariables.getTypeParameters();  [CE]  cannot  find  symbol  classTypeVariables  [FE]                                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  classTypeVariables.getTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  classTypeVariables.getTypeParameters();	  Type[]    actualTypeParameters    =    rawParentClass.getTypeParameters();    	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	91	None	replace
110	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  rawParentClass.getReturnTypeParameters();  [CE]  cannot  find  symbol  [FE]                                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  rawParentClass.getReturnTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  rawParentClass.getReturnTypeParameters();	  Type[]    actualTypeParameters    =    rawParentClass.getTypeParameters();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
111	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    fieldTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	121	None	replace
112	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    fieldTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	121	None	replace
113	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    fieldTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	121	None	replace
114	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",    is    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	67	None	replace
115	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",    is    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	67	None	replace
116	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",    is    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	67	None	replace
117	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	128	None	replace
118	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des    	compilable	  [FE]  UnsupportedOperationException  	128	1	replace
119	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Generator ");  [FE]  UnsupportedOperationException  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des    	compilable	  [FE]  UnsupportedOperationException  	128	1	replace
120	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See: "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See: "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See: "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	128	None	replace
121	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  not  a  statement	69	None	add
122	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  	69	None	add
123	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");	  	non-compiled	[CE]  	69	None	add
124	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [CE]  not  a  statement  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");	  	non-compiled	[CE]  not  a  statement	69	None	add
125	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	70	1	replace
126	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	70	1	replace
127	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
128	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  getName()  + "://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  getName()  + "://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  getName()  + "://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
129	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	93	1	replace
130	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	93	1	replace
131	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	93	1	replace
132	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	93	1	replace
133	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serialization-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	93	1	replace
134	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serialization-Generation ");  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serialization-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	93	1	replace
135	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ",.    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	97	None	replace
136	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  not  a  statement	71	None	add
137	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	71	None	add
138	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	71	None	add
139	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  not  a  statement	71	None	add
140	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator. ");  [CE]  not  a  statement  [FE]            UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator. ");	  	non-compiled	[CE]  not  a  statement	71	None	add
141	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-    	non-compiled	[CE]  unclosed  string  literal	54	None	replace
142	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-    	non-compiled	[CE]  unclosed  string  literal	54	None	replace
143	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-    	non-compiled	[CE]  unclosed  string  literal	54	None	replace
144	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  not  a  statement	24	None	add
145	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	24	None	add
146	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	24	None	add
147	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  not  a  statement  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  not  a  statement	24	None	add
148	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator. ");  [CE]  not  a  statement  [FE]            UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator. ");	  	non-compiled	[CE]  not  a  statement	24	None	add
149	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	18	None	add
150	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  not  a  statement	18	None	add
151	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  not  a  statement	18	None	add
152	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator. ");  [CE]  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator. ");	  	non-compiled	[CE]  	18	None	add
153	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  not  a  statement  [FE]            UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  not  a  statement	18	None	add
154	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
155	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
156	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  not  a  statement	123	None	add
157	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  	123	None	add
158	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  	non-compiled	[CE]  	123	None	add
159	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  not  a  statement  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  not  a  statement	123	None	add
160	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]            UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	123	None	add
161	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	106	None	replace
162	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	106	None	replace
163	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [CE]  unclosed  string  literal  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	106	None	replace
164	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	39	1	replace
165	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	39	1	replace
166	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-    	non-compiled	[CE]  unclosed  string  literal	64	None	replace
167	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-    	non-compiled	[CE]  unclosed  string  literal	64	None	replace
168	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [CE]  unclosed  string  literal  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-    	non-compiled	[CE]  unclosed  string  literal	64	None	replace
169	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	30	None	replace
170	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	30	None	replace
171	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");    	compilable	  [FE]  UnsupportedOperationException  	126	1	replace
172	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");    	compilable	  [FE]  UnsupportedOperationException  	126	1	replace
173	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generations ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");    	compilable	  [FE]  UnsupportedOperationException  	126	1	replace
174	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generations ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generations ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");    	compilable	  [FE]  UnsupportedOperationException  	126	1	replace
175	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	compilable	  [FE]  UnsupportedOperationException  	77	1	replace
176	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener. ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	compilable	  [FE]  UnsupportedOperationException  	77	1	replace
177	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  getName()  + "://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  getName()  + "://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  getName()  + "://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  unclosed  string  literal	77	None	replace
178	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ".  [CE]  <identifier>  expected  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ".  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ".	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  <identifier>  expected	77	None	replace
179	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ",  [CE]  illegal  start  of  expression  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ",  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ",	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
180	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	26	None	replace
181	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	non-compiled	[CE]  not  a  statement	36	None	replace
182	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(actualTypeVariables,  parentType);  [CE]  cannot  find  symbol  actualTypeVariables  [FE]                                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(actualTypeVariables,  parentType);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(actualTypeVariables,  parentType);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    parentType);    	non-compiled	[CE]  cannot  find  symbol  actualTypeVariables	63	None	replace
183	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  typeToEvaluate.getActualTypeParameters();  [CE]  cannot  find  symbol  [FE]                              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  typeToEvaluate.getActualTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  typeToEvaluate.getActualTypeParameters();	  Type[]    actualTypeParameters    =    objParameterizedType.getActualTypeParameters();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
184	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  rawParentClass.getActualTypeParameters();  [CE]  cannot  find  symbol  [FE]                                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  rawParentClass.getActualTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  rawParentClass.getActualTypeParameters();	  Type[]    actualTypeParameters    =    objParameterizedType.getActualTypeParameters();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
185	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  classTypeVariables.getActualTypeParameters();  [CE]  cannot  find  symbol  classTypeVariables  [FE]                                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  classTypeVariables.getActualTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  classTypeVariables.getActualTypeParameters();	  Type[]    actualTypeParameters    =    objParameterizedType.getActualTypeParameters();    	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	60	None	replace
186	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  castedType.getActualTypeParameters();  [CE]  cannot  find  symbol  castedType  [FE]                                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  castedType.getActualTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  castedType.getActualTypeParameters();	  Type[]    actualTypeParameters    =    objParameterizedType.getActualTypeParameters();    	non-compiled	[CE]  cannot  find  symbol  castedType	60	None	replace
187	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  componentType.getActualTypeParameters();  [CE]  cannot  find  symbol  componentType  [FE]                                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  componentType.getActualTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  componentType.getActualTypeParameters();	  Type[]    actualTypeParameters    =    objParameterizedType.getActualTypeParameters();    	non-compiled	[CE]  cannot  find  symbol  componentType	60	None	replace
188	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  objParameterizedType);  [CE]  cannot  find  symbol  objParameterizedType  [FE]                                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  objParameterizedType);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(typeToEvaluate,  objParameterizedType);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    objParameterizedType);    	non-compiled	[CE]  cannot  find  symbol  objParameterizedType	61	None	replace
189	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(actualTypeVariables,  objParameterizedType);  [CE]  cannot  find  symbol  actualTypeVariables  [FE]                                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(actualTypeVariables,  objParameterizedType);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(actualTypeVariables,  objParameterizedType);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    objParameterizedType);    	non-compiled	[CE]  cannot  find  symbol  actualTypeVariables	61	None	replace
190	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(objParameterizedType,  classTypeVariables);  [CE]  cannot  find  symbol  objParameterizedType  [FE]                                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(objParameterizedType,  classTypeVariables);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(objParameterizedType,  classTypeVariables);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    objParameterizedType);    	non-compiled	[CE]  cannot  find  symbol  objParameterizedType	61	None	replace
191	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	83	None	replace
192	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	99	None	replace
193	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	99	None	replace
194	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  but  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  but  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  but  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	99	None	replace
195	[BUG]  [BUGGY]  int  actualTypeVariable  =  getIndex(classTypeVariables,  fieldTypeVariable);  [CE]  cannot  find  symbol  classTypeVariables  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  actualTypeVariable  =  getIndex(classTypeVariables,  fieldTypeVariable);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  actualTypeVariable  =  getIndex(classTypeVariables,  fieldTypeVariable);	  int    indexOfActualTypeArgument    =    getIndex(actualTypeVariables,    fieldTypeVariable);    	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	58	None	replace
196	[BUG]  [BUGGY]  int  actualTypeVariable  =  getIndex(actualTypeVariables,  fieldTypeVariable);  [CE]  cannot  find  symbol  actualTypeVariables  [FE]                            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  actualTypeVariable  =  getIndex(actualTypeVariables,  fieldTypeVariable);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  actualTypeVariable  =  getIndex(actualTypeVariables,  fieldTypeVariable);	  int    indexOfActualTypeArgument    =    getIndex(actualTypeVariables,    fieldTypeVariable);    	non-compiled	[CE]  cannot  find  symbol  actualTypeVariables	58	None	replace
197	[BUG]  [BUGGY]  int  actualTypeVariables  =  getIndex(classTypeVariables,  fieldTypeVariable);  [CE]  cannot  find  symbol  classTypeVariables  [FE]                              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  actualTypeVariables  =  getIndex(classTypeVariables,  fieldTypeVariable);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  actualTypeVariables  =  getIndex(classTypeVariables,  fieldTypeVariable);	  int    indexOfActualTypeArgument    =    getIndex(actualTypeVariables,    fieldTypeVariable);    	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	58	None	replace
198	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
199	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
200	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
201	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
202	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
203	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
204	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
205	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator. ");  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
206	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  not  a  statement	80	None	add
207	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  	80	None	add
208	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  	80	None	add
209	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	80	None	add
210	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]            UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  not  a  statement	80	None	add
211	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [CE]  [FE]              UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation. ");	  	non-compiled	[CE]  	80	None	add
212	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	52	None	replace
213	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  getName()  + "://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  getName()  + "://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  getName()  + "://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	52	None	replace
214	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  not  a  statement	73	None	add
215	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  	73	None	add
216	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  	73	None	add
217	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [CE]  not  a  statement  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");	  	non-compiled	[CE]  not  a  statement	73	None	add
218	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [CE]  [FE]            UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");	  	non-compiled	[CE]  	73	None	add
219	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	114	1	replace
220	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	114	1	replace
221	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	114	1	replace
222	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	114	1	replace
223	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	114	None	replace
224	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	114	None	replace
225	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization    	non-compiled	[CE]  unclosed  string  literal	46	None	replace
226	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization    	non-compiled	[CE]  unclosed  string  literal	46	None	replace
227	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization    	non-compiled	[CE]  unclosed  string  literal	46	None	replace
228	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	22	None	add
229	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  not  a  statement	22	None	add
230	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator. ");  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator. ");	  	non-compiled	[CE]  not  a  statement	22	None	add
231	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  not  a  statement	22	None	add
232	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");	  	non-compiled	[CE]  	20	None	add
233	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");	  	non-compiled	[CE]  not  a  statement	20	None	add
234	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  not  a  statement	20	None	add
235	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation. ");  [CE]  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation. ");	  	non-compiled	[CE]  	20	None	add
236	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation. ");  [CE]  not  a  statement  [FE]            UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation. ");	  	non-compiled	[CE]  not  a  statement	20	None	add
237	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	81	1	replace
238	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	81	1	replace
239	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	89	None	replace
240	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing    	non-compiled	[CE]  unclosed  string  literal	90	None	replace
241	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing    	non-compiled	[CE]  unclosed  string  literal	90	None	replace
242	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing    	non-compiled	[CE]  unclosed  string  literal	90	None	replace
243	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
244	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  fieldTypeVariable.getActualTypeParameters();  [CE]  cannot  find  symbol  fieldTypeVariable  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  fieldTypeVariable.getActualTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  fieldTypeVariable.getActualTypeParameters();	  Type[]    actualTypeParameters    =    parentType.getActualTypeParameters();    	non-compiled	[CE]  cannot  find  symbol  fieldTypeVariable	92	None	replace
245	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
246	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
247	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
248	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generation ");  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
249	[BUG]  [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	100	None	replace
250	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",.    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	105	None	replace
251	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",.    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	105	None	replace
252	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator    	non-compiled	[CE]  unclosed  string  literal	117	None	replace
253	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  not  a  statement	110	None	add
254	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	110	None	add
255	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  not  a  statement	110	None	add
256	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator. ");  [CE]  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator. ");	  	non-compiled	[CE]  	110	None	add
257	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator. ");  [CE]  not  a  statement  [FE]            UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator. ");	  	non-compiled	[CE]  not  a  statement	110	None	add
258	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	118	1	replace
259	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	118	1	replace
260	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	118	1	replace
261	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	118	1	replace
262	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	118	1	replace
263	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	118	1	replace
264	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	118	1	replace
265	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	118	1	replace
266	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  	non-compiled	[CE]  not  a  statement	40	None	add
267	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  	non-compiled	[CE]  	40	None	add
268	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  not  a  statement	40	None	add
269	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation. ");  [CE]  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation. ");	  	non-compiled	[CE]  	40	None	add
270	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation. ");  [CE]  not  a  statement  [FE]            UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation. ");	  	non-compiled	[CE]  not  a  statement	40	None	add
271	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener    	non-compiled	[CE]  unclosed  string  literal	127	None	replace
272	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener    	non-compiled	[CE]  unclosed  string  literal	127	None	replace
273	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  not  a  statement  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	non-compiled	[CE]  not  a  statement	17	None	replace
274	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator    	non-compiled	[CE]  unclosed  string  literal	129	None	replace
275	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator    	non-compiled	[CE]  unclosed  string  literal	129	None	replace
276	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	111	1	replace
277	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	111	1	replace
278	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/use-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/use-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	111	1	replace
279	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/use-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/use-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/use-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	111	1	replace
280	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener    	non-compiled	[CE]  unclosed  string  literal	116	None	replace
281	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gen  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gen  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gen	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener    	non-compiled	[CE]  unclosed  string  literal	116	None	replace
282	[BUG]  [BUGGY]  Class  <?>  rawParentClass  =  typeToEvaluate.getRawParentClass();  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Class  <?>  rawParentClass  =  typeToEvaluate.getRawParentClass();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Class  <?>  rawParentClass  =  typeToEvaluate.getRawParentClass();	  Class    <?>    rawParentClass    =    parentType.getRawParentClass();    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	130	None	replace
283	[BUG]  [BUGGY]  Class  <?>  rawParentClass  =  castedType.getRawParentClass();  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Class  <?>  rawParentClass  =  castedType.getRawParentClass();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Class  <?>  rawParentClass  =  castedType.getRawParentClass();	  Class    <?>    rawParentClass    =    parentType.getRawParentClass();    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	130	None	replace
284	[BUG]  [BUGGY]  Class  <?>  rawParentClass  =  parentType.getRawParentClass(indexOfActualTypeArgument);  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Class  <?>  rawParentClass  =  parentType.getRawParentClass(indexOfActualTypeArgument);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Class  <?>  rawParentClass  =  parentType.getRawParentClass(indexOfActualTypeArgument);	  Class    <?>    rawParentClass    =    parentType.getRawParentClass();    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	130	None	replace
285	[BUG]  [BUGGY]  Class  <?>  rawParentClass  =  actualType.getRawParentClass();  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Class  <?>  rawParentClass  =  actualType.getRawParentClass();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Class  <?>  rawParentClass  =  actualType.getRawParentClass();	  Class    <?>    rawParentClass    =    parentType.getRawParentClass();    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	130	None	replace
286	[BUG]  [BUGGY]  Class  <?>  rawParentClass  =  classTypeVariables.getRawParentClass();  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Class  <?>  rawParentClass  =  classTypeVariables.getRawParentClass();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Class  <?>  rawParentClass  =  classTypeVariables.getRawParentClass();	  Class    <?>    rawParentClass    =    parentType.getRawParentClass();    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	130	None	replace
287	[BUG]  [BUGGY]  Class  <?>  rawParentClass  =  currentType.getRawParentClass();  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Class  <?>  rawParentClass  =  currentType.getRawParentClass();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Class  <?>  rawParentClass  =  currentType.getRawParentClass();	  Class    <?>    rawParentClass    =    parentType.getRawParentClass();    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	130	None	replace
288	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
289	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener  [CE]  not  a  statement  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  not  a  statement	4	None	replace
290	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  not  a  statement	112	None	add
291	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	112	None	add
292	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  not  a  statement	112	None	add
293	[BUG]  [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	122	None	replace
294	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	122	1	replace
295	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	122	1	replace
296	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	122	1	replace
297	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	122	1	replace
298	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  	non-compiled	[CE]  not  a  statement	42	None	add
299	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  	non-compiled	[CE]  	42	None	add
300	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [CE]  unreachable  statement  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  	non-compiled	[CE]  unreachable  statement	42	None	add
301	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	23	1	replace
302	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	23	1	replace
303	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	23	1	replace
304	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator. ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	23	1	replace
305	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TO    	non-compiled	[CE]  unclosed  string  literal	66	None	replace
306	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TO  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TO  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TO	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TO    	non-compiled	[CE]  unclosed  string  literal	66	None	replace
307	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#  [CE]  unclosed  string  literal  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TO    	non-compiled	[CE]  unclosed  string  literal	66	None	replace
308	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	21	1	replace
309	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	21	1	replace
310	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	65	None	replace
311	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	50	None	replace
312	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization    	non-compiled	[CE]  unclosed  string  literal	46	None	replace
313	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization    	non-compiled	[CE]  unclosed  string  literal	46	None	replace
314	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	50	None	replace
315	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	50	None	replace
316	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentTypeVariables,  objParameterizedType);  [CE]  cannot  find  symbol  parentTypeVariables  [FE]                                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentTypeVariables,  objParameterizedType);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(parentTypeVariables,  objParameterizedType);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    objParameterizedType);    	non-compiled	[CE]  cannot  find  symbol  parentTypeVariables	61	None	replace
317	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentType,  objParameterizedType);  [CE]  cannot  find  symbol  objParameterizedType  [FE]                                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentType,  objParameterizedType);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(parentType,  objParameterizedType);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    objParameterizedType);    	non-compiled	[CE]  cannot  find  symbol  objParameterizedType	61	None	replace
318	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");  }  [CE]  missing  return  statement  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");  }  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");  }	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	non-compiled	[CE]  missing  return  statement	5	None	replace
319	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");  }  [CE]  missing  return  statement  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");  }  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");  }	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	non-compiled	[CE]  missing  return  statement	5	None	replace
320	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
321	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
322	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");  [CE]  not  a  statement  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generator ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
323	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing    	non-compiled	[CE]  unclosed  string  literal	119	None	replace
324	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  parentClass.getTypeParameters();  [CE]  cannot  find  symbol  parentClass  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  parentClass.getTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  parentClass.getTypeParameters();	  Type[]    actualTypeParameters    =    rawParentClass.getTypeParameters();    	non-compiled	[CE]  cannot  find  symbol  parentClass	91	None	replace
325	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ")http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ")http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ")http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",.    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	68	None	replace
326	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  unclosed  string  literal	77	None	replace
327	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(typeToEvaluate, "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(typeToEvaluate, "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException(typeToEvaluate, "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  unclosed  string  literal	77	None	replace
328	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  unclosed  string  literal	77	None	replace
329	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	compilable	  [FE]  UnsupportedOperationException  	77	1	replace
330	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener. ");  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	compilable	  [FE]  UnsupportedOperationException  	77	1	replace
331	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	53	None	replace
332	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	93	1	replace
333	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-Deserialization-Gener ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	93	1	replace
334	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	93	None	replace
335	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	93	None	replace
336	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	93	None	replace
337	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	109	None	replace
338	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generation  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generation  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generation	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	109	None	replace
339	[BUG]  [BUGGY]  Class  <?>  rawParentClass  =  parentType.getRawParentClass(typeToEvaluate);  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Class  <?>  rawParentClass  =  parentType.getRawParentClass(typeToEvaluate);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Class  <?>  rawParentClass  =  parentType.getRawParentClass(typeToEvaluate);	  Class    <?>    rawParentClass    =    parentType.getRawParentClass();    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	130	None	replace
340	[BUG]  [BUGGY]  Class  <?>  rawParentClass  =  parentType.getRawParentClass()  +  1;  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Class  <?>  rawParentClass  =  parentType.getRawParentClass()  +  1;  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Class  <?>  rawParentClass  =  parentType.getRawParentClass()  +  1;	  Class    <?>    rawParentClass    =    parentType.getRawParentClass();    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	130	None	replace
341	[BUG]  [BUGGY]  Class  <?>  rawParentClass  =  parentType.getRawParentClass(0);  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Class  <?>  rawParentClass  =  parentType.getRawParentClass(0);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Class  <?>  rawParentClass  =  parentType.getRawParentClass(0);	  Class    <?>    rawParentClass    =    parentType.getRawParentClass();    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	130	None	replace
342	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	114	None	replace
343	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	114	None	replace
344	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  unclosed  string  literal	95	None	replace
345	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generate ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generate ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
346	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generate ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generate ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generate ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
347	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
348	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    	compilable	  [FE]  UnsupportedOperationException  	43	1	replace
349	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-    	non-compiled	[CE]  unclosed  string  literal	64	None	replace
350	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
351	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
352	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [CE]  unreachable  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");	  	non-compiled	[CE]  unreachable  statement	125	None	add
353	[BUG]  [BUGGY]  Type[]  actualTypeArguments  =  classTypeVariables.getActualTypeArguments();  [CE]  cannot  find  symbol  classTypeVariables  [FE]                                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeArguments  =  classTypeVariables.getActualTypeArguments();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeArguments  =  classTypeVariables.getActualTypeArguments();	  Type[]    actualTypeArguments    =    objParameterizedType.getActualTypeArguments();    	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	62	None	replace
354	[BUG]  [BUGGY]  Type[]  actualTypeArguments  =  rawParentType.getActualTypeArguments();  [CE]  cannot  find  symbol  rawParentType  [FE]                                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeArguments  =  rawParentType.getActualTypeArguments();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeArguments  =  rawParentType.getActualTypeArguments();	  Type[]    actualTypeArguments    =    objParameterizedType.getActualTypeArguments();    	non-compiled	[CE]  cannot  find  symbol  rawParentType	62	None	replace
355	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
356	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
357	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	48	None	replace
358	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	86	None	replace
359	[BUG]  [BUGGY]  int  actualTypeVariableArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  [CE]  cannot  find  symbol  classTypeVariables  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  actualTypeVariableArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  actualTypeVariableArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);	  int    indexOfActualTypeArgument    =    getIndex(actualTypeVariables,    fieldTypeVariable);    	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	58	None	replace
360	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentType,  typeToEvaluate);  [CE]  method  getIndex  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;  [FE]                            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentType,  typeToEvaluate);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(parentType,  typeToEvaluate);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    typeToEvaluate);    	non-compiled	[CE]  method  getIndex  in  class  TypeInfoFactory  cannot  be  applied  to  given  types;	59	None	replace
361	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	79	1	replace
362	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	79	1	replace
363	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  unclosed  string  literal  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	79	None	replace
364	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  unreachable  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  unreachable  statement	80	None	add
365	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
366	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	compilable	  [FE]  UnsupportedOperationException  	82	1	replace
367	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener. ");  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener. ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	compilable	  [FE]  UnsupportedOperationException  	82	1	replace
368	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	49	None	replace
369	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");    	compilable	  [FE]  UnsupportedOperationException  	126	1	replace
370	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");    	compilable	  [FE]  UnsupportedOperationException  	126	1	replace
371	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",.    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	105	None	replace
372	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentType,  classTypeVariable);  [CE]  cannot  find  symbol  classTypeVariable  [FE]                                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentType,  classTypeVariable);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(parentType,  classTypeVariable);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    parentType);    	non-compiled	[CE]  cannot  find  symbol  classTypeVariable	63	None	replace
373	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des!=  +   ".n  Are  you  missing  the  use  of  TypeToken  [CE]  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des!=  +   ".n  Are  you  missing  the  use  of  TypeToken  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des!=  +   ".n  Are  you  missing  the  use  of  TypeToken	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  	52	None	replace
374	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des!=  +   ".n  Are  you  missing  the  use  of  [CE]  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des!=  +   ".n  Are  you  missing  the  use  of  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des!=  +   ".n  Are  you  missing  the  use  of	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  	52	None	replace
375	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	52	None	replace
376	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  >>  +   ".n  Are  you  missing  the  use  of  TypeToken  [CE]  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  >>  +   ".n  Are  you  missing  the  use  of  TypeToken  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  >>  +   ".n  Are  you  missing  the  use  of  TypeToken	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  	52	None	replace
377	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  >>  +   ".n  Are  you  missing  the  use  of  [CE]  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  >>  +   ".n  Are  you  missing  the  use  of  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  >>  +   ".n  Are  you  missing  the  use  of	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  	52	None	replace
378	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generation  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generation  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generation	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
379	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generation  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generation  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Generation	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
380	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	118	1	replace
381	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	118	1	replace
382	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	118	None	replace
383	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	118	None	replace
384	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener    	non-compiled	[CE]  unclosed  string  literal	127	None	replace
385	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Gener  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener    	non-compiled	[CE]  unclosed  string  literal	127	None	replace
386	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gen  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gen  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gen	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener    	non-compiled	[CE]  unclosed  string  literal	127	None	replace
387	[BUG]  [BUGGY]  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  	115	None	replace
388	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  instanceof  Class  <?>)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  instanceof  Class  <?>)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	115	None	replace
389	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	30	None	replace
390	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
391	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
392	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generation  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generation  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generation	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
393	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	24	None	add
394	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  unreachable  statement  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  unreachable  statement	24	None	add
395	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  not  a  statement	24	None	add
396	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  fieldTypeVariables.getActualTypeParameters();  [CE]  cannot  find  symbol  fieldTypeVariables  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  fieldTypeVariables.getActualTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  fieldTypeVariables.getActualTypeParameters();	  Type[]    actualTypeParameters    =    parentType.getActualTypeParameters();    	non-compiled	[CE]  cannot  find  symbol  fieldTypeVariables	92	None	replace
397	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation  [CE]  unclosed  string  literal  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	non-compiled	[CE]  unclosed  string  literal	70	None	replace
398	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener    	non-compiled	[CE]  unclosed  string  literal	116	None	replace
399	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener    	non-compiled	[CE]  unclosed  string  literal	116	None	replace
400	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentType,  fieldTypeVariable);  [CE]  cannot  find  symbol  fieldTypeVariable  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentType,  fieldTypeVariable);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(parentType,  fieldTypeVariable);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    fieldTypeVariable);    	non-compiled	[CE]  cannot  find  symbol  fieldTypeVariable	57	None	replace
401	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  sourceTypeVariable.getActualTypeParameters();  [CE]  cannot  find  symbol  sourceTypeVariable  [FE]                              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  sourceTypeVariable.getActualTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  sourceTypeVariable.getActualTypeParameters();	  Type[]    actualTypeParameters    =    objParameterizedType.getActualTypeParameters();    	non-compiled	[CE]  cannot  find  symbol  sourceTypeVariable	60	None	replace
402	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  rootType.getActualTypeParameters();  [CE]  cannot  find  symbol  rootType  [FE]                                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  rootType.getActualTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  rootType.getActualTypeParameters();	  Type[]    actualTypeParameters    =    objParameterizedType.getActualTypeParameters();    	non-compiled	[CE]  cannot  find  symbol  rootType	60	None	replace
403	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener ");  [CE]  not  a  statement  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
404	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
405	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
406	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
407	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [CE]  unreachable  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  	non-compiled	[CE]  unreachable  statement	40	None	add
408	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generator  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator    	non-compiled	[CE]  unclosed  string  literal	129	None	replace
409	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generator  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator    	non-compiled	[CE]  unclosed  string  literal	129	None	replace
410	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator  [CE]  unclosed  string  literal  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator    	non-compiled	[CE]  unclosed  string  literal	129	None	replace
411	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	55	None	replace
412	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	55	None	replace
413	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation	  	non-compiled	[CE]  	69	None	add
414	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  	69	None	add
415	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  unreachable  statement  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  unreachable  statement	69	None	add
416	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	89	None	replace
417	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	89	None	replace
418	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	89	None	replace
419	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-and  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	89	None	replace
420	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	45	None	replace
421	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  unreachable  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  unreachable  statement	110	None	add
422	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	72	1	replace
423	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	72	1	replace
424	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	25	1	replace
425	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	25	1	replace
426	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  not  a  statement  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  not  a  statement	12	None	replace
427	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	18	None	add
428	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  unreachable  statement  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  unreachable  statement	18	None	add
429	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  unreachable  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  unreachable  statement	123	None	add
430	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  	123	None	add
431	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	128	None	replace
432	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  unreachable  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  unreachable  statement	112	None	add
433	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generacy ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generacy ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
434	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generacy ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generacy ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generacy ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
435	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
436	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
437	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generage ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generage ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
438	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generage ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generage ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generage ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	124	1	replace
439	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  unreachable  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  unreachable  statement	73	None	add
440	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  	73	None	add
441	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation	  	non-compiled	[CE]  	73	None	add
442	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  not  a  statement  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  not  a  statement	73	None	add
443	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	51	None	replace
444	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-    	non-compiled	[CE]  unclosed  string  literal	56	None	replace
445	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	71	None	add
446	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  unreachable  statement  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  unreachable  statement	71	None	add
447	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  not  a  statement	71	None	add
448	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  unreachable  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  unreachable  statement	78	None	add
449	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  	78	None	add
450	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener	  	non-compiled	[CE]  	78	None	add
451	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	85	None	replace
452	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generate  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generate  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generate	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	85	None	replace
453	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	22	None	add
454	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  unreachable  statement  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  unreachable  statement	22	None	add
455	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
456	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  unreachable  statement  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  unreachable  statement	38	None	add
457	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	81	1	replace
458	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	81	1	replace
459	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation	  	non-compiled	[CE]  	20	None	add
460	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generation ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generation ");	  	non-compiled	[CE]  	20	None	add
461	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [CE]  unreachable  statement  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");	  	non-compiled	[CE]  unreachable  statement	20	None	add
462	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation  [CE]  unclosed  string  literal  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	non-compiled	[CE]  unclosed  string  literal	74	None	replace
463	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	74	1	replace
464	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	74	1	replace
465	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	84	None	replace
466	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TO    	non-compiled	[CE]  unclosed  string  literal	66	None	replace
467	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing    	non-compiled	[CE]  unclosed  string  literal	90	None	replace
468	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing    	non-compiled	[CE]  unclosed  string  literal	90	None	replace
469	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing    	non-compiled	[CE]  unclosed  string  literal	90	None	replace
470	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator    	non-compiled	[CE]  unclosed  string  literal	117	None	replace
471	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",    is    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	67	None	replace
472	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	106	None	replace
473	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	106	None	replace
474	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-Deserializing-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
475	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-Deserializing-Gener ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-Deserializing-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
476	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/userguide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	100	None	replace
477	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	41	1	replace
478	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	41	1	replace
479	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  +  classTypeVariables  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	11	None	replace
480	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	94	1	replace
481	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener ");  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	94	1	replace
482	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	44	None	replace
483	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	75	None	replace
484	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken' "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  	123	None	add
485	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  '   "  +     "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    '   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  not  a  statement	123	None	add
486	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	18	None	add
487	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	18	None	add
488	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	72	1	replace
489	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	72	1	replace
490	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	72	1	replace
491	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	72	1	replace
492	[BUG]  [BUGGY]  Type[]  actualTypeArguments  =  cloneTree.getActualTypeArguments();  [CE]  cannot  find  symbol  cloneTree  [FE]                                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeArguments  =  cloneTree.getActualTypeArguments();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeArguments  =  cloneTree.getActualTypeArguments();	  Type[]    actualTypeArguments    =    objParameterizedType.getActualTypeArguments();    	non-compiled	[CE]  cannot  find  symbol  cloneTree	62	None	replace
493	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	70	1	replace
494	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	70	1	replace
495	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	19	1	replace
496	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	19	1	replace
497	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator    	non-compiled	[CE]  unclosed  string  literal	117	None	replace
498	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-    	non-compiled	[CE]  unclosed  string  literal	54	None	replace
499	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-    	non-compiled	[CE]  unclosed  string  literal	54	None	replace
500	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
501	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
502	[BUG]  [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	100	None	replace
503	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	100	None	replace
504	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	100	None	replace
505	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
506	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");  [FE]  UnsupportedOperationException  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	100	1	replace
507	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  	non-compiled	[CE]  	42	None	add
508	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  	non-compiled	[CE]  	42	None	add
509	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate. ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate. ");	  	non-compiled	[CE]  	42	None	add
510	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  unclosed  string  literal	95	None	replace
511	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  unclosed  string  literal	95	None	replace
512	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-Gener	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  unclosed  string  literal	95	None	replace
513	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	99	None	replace
514	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	109	None	replace
515	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");  }  [CE]  missing  return  statement  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");  }  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");  }	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	non-compiled	[CE]  missing  return  statement	14	None	replace
516	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
517	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-generator  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	84	None	replace
518	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	111	1	replace
519	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	111	1	replace
520	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gen  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gen  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gen	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener    	non-compiled	[CE]  unclosed  string  literal	116	None	replace
521	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-guide#TOC-Serializing-and-Des  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-guide#TOC-Serializing-and-Des	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	128	None	replace
522	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	21	1	replace
523	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	21	1	replace
524	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    fieldTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	121	None	replace
525	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	118	1	replace
526	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	118	1	replace
527	[BUG]  [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	118	None	replace
528	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	118	None	replace
529	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	74	1	replace
530	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    	compilable	  [FE]  UnsupportedOperationException  	74	1	replace
531	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	71	None	add
532	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	71	None	add
533	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	71	None	add
534	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
535	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
536	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	122	1	replace
537	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	122	1	replace
538	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	122	None	replace
539	[BUG]  [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	non-compiled	[CE]  unclosed  string  literal	35	None	replace
540	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  (Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  (Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    (Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	112	None	add
541	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	112	None	add
542	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   ",http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	112	None	add
543	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TO    	non-compiled	[CE]  unclosed  string  literal	66	None	replace
544	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TO  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TO  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TO	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TO    	non-compiled	[CE]  unclosed  string  literal	66	None	replace
545	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	55	None	replace
546	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	110	None	add
547	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator   ");    TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	110	None	add
548	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  cloneTree.getActualTypeParameters();  [CE]  cannot  find  symbol  cloneTree  [FE]                              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Type[]  actualTypeParameters  =  cloneTree.getActualTypeParameters();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  cloneTree.getActualTypeParameters();	  Type[]    actualTypeParameters    =    objParameterizedType.getActualTypeParameters();    	non-compiled	[CE]  cannot  find  symbol  cloneTree	60	None	replace
549	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(fieldTypeVariables,  parentType);  [CE]  cannot  find  symbol  fieldTypeVariables  [FE]                                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(fieldTypeVariables,  parentType);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(fieldTypeVariables,  parentType);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    parentType);    	non-compiled	[CE]  cannot  find  symbol  fieldTypeVariables	63	None	replace
550	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(baseTypeVariables,  parentType);  [CE]  cannot  find  symbol  baseTypeVariables  [FE]                                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(baseTypeVariables,  parentType);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(baseTypeVariables,  parentType);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    parentType);    	non-compiled	[CE]  cannot  find  symbol  baseTypeVariables	63	None	replace
551	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentTypeVariables,  parentType);  [CE]  cannot  find  symbol  parentTypeVariables  [FE]                                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentTypeVariables,  parentType);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(parentTypeVariables,  parentType);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    parentType);    	non-compiled	[CE]  cannot  find  symbol  parentTypeVariables	63	None	replace
552	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
553	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");  }  [CE]  missing  return  statement  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");  }  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");  }	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	non-compiled	[CE]  missing  return  statement	5	None	replace
554	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
555	[BUG]  [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");  }  [CE]  missing  return  statement  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");  }  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-Generator ");  }	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	non-compiled	[CE]  missing  return  statement	5	None	replace
556	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	53	None	replace
557	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	53	None	replace
558	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	53	None	replace
559	[BUG]  [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  ==  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	93	None	replace
560	[BUG]  [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
561	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
562	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	22	None	add
563	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	22	None	add
564	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  	78	None	add
565	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  	78	None	add
566	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  	78	None	add
567	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	44	None	replace
568	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	106	None	replace
569	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  but  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  but  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  but  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	106	None	replace
570	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  but  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  but  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  but  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	50	None	replace
571	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	65	None	replace
572	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentTypeVariables,  typeToEvaluate);  [CE]  cannot  find  symbol  parentTypeVariables  [FE]                            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentTypeVariables,  typeToEvaluate);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(parentTypeVariables,  typeToEvaluate);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    typeToEvaluate);    	non-compiled	[CE]  cannot  find  symbol  parentTypeVariables	59	None	replace
573	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  	80	None	add
574	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  	80	None	add
575	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");	  	non-compiled	[CE]  	69	None	add
576	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");	  	non-compiled	[CE]  	69	None	add
577	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",.n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	98	None	replace
578	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",.n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	98	None	replace
579	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator  [CE]  not  a  statement  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
580	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	85	None	replace
581	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	49	None	replace
582	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(ClassTypeVariables,  fieldTypeVariable);  [CE]  cannot  find  symbol  ClassTypeVariables  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(ClassTypeVariables,  fieldTypeVariable);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(ClassTypeVariables,  fieldTypeVariable);	  int    indexOfActualTypeArgument    =    getIndex(actualTypeVariables,    fieldTypeVariable);    	non-compiled	[CE]  cannot  find  symbol  ClassTypeVariables	58	None	replace
583	[BUG]  [BUGGY]  int  actualTypeVariableIndex  =  getIndex(classTypeVariables,  fieldTypeVariable);  [CE]  cannot  find  symbol  classTypeVariables  [FE]                            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  actualTypeVariableIndex  =  getIndex(classTypeVariables,  fieldTypeVariable);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  actualTypeVariableIndex  =  getIndex(classTypeVariables,  fieldTypeVariable);	  int    indexOfActualTypeArgument    =    getIndex(actualTypeVariables,    fieldTypeVariable);    	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	58	None	replace
584	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	89	None	replace
585	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-gener  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	89	None	replace
586	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-generator  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	89	None	replace
587	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  UnsupportedOperationException)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  instanceof  UnsupportedOperationException)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  instanceof  UnsupportedOperationException)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	115	None	replace
588	[BUG]  [BUGGY]  if(typeToEvaluate  instanceof  UnsupportedOperationException)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate  instanceof  UnsupportedOperationException)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate  instanceof  UnsupportedOperationException)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	115	None	replace
589	[BUG]  [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener       ");    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	115	None	replace
590	[BUG]  [BUGGY]  Class  <?>  rawParentClass  =  parentType.getRawParentClass(parentType);  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Class  <?>  rawParentClass  =  parentType.getRawParentClass(parentType);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Class  <?>  rawParentClass  =  parentType.getRawParentClass(parentType);	  Class    <?>    rawParentClass    =    parentType.getRawParentClass();    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	130	None	replace
591	[BUG]  [BUGGY]  Class  <?>  rawParentClass  =  this.parentType.getRawParentClass();  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Class  <?>  rawParentClass  =  this.parentType.getRawParentClass();  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Class  <?>  rawParentClass  =  this.parentType.getRawParentClass();	  Class    <?>    rawParentClass    =    parentType.getRawParentClass();    	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	130	None	replace
592	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	38	None	add
593	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	38	None	add
594	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializer-Gener  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializer-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializer-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
595	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gen  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gen  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gen	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
596	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  unclosed  string  literal	77	None	replace
597	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gen  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gen  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gen	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener    	non-compiled	[CE]  unclosed  string  literal	77	None	replace
598	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "',http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "',http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	113	1	replace
599	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "',http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "',http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "',http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	113	1	replace
600	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	81	1	replace
601	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	81	1	replace
602	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	24	None	add
603	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	24	None	add
604	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	24	None	add
605	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generation  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generation  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generation	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	75	None	replace
606	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generator  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	75	None	replace
607	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generate  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generate  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-Generate	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	75	None	replace
608	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization    	non-compiled	[CE]  unclosed  string  literal	46	None	replace
609	[BUG]  [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(parentType!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	13	None	replace
610	[BUG]  [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	if(typeToEvaluate!=  null)  {  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	13	None	replace
611	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	52	None	replace
612	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
613	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");	  	non-compiled	[CE]  	20	None	add
614	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-Generation ");	  	non-compiled	[CE]  	20	None	add
615	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	30	None	replace
616	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");	  	non-compiled	[CE]  	125	None	add
617	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations   ");    TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");	  	non-compiled	[CE]  	125	None	add
618	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",.    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	107	None	replace
619	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
620	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  	73	None	add
621	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  	73	None	add
622	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://www.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  	73	None	add
623	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [CE]  [FE]          UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation. ");	  	non-compiled	[CE]  	73	None	add
624	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  not  a  statement  [FE]                    UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  not  a  statement	8	None	replace
625	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   ",http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
626	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(objectTypeVariables,  objParameterizedType);  [CE]  cannot  find  symbol  objectTypeVariables  [FE]                                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(objectTypeVariables,  objParameterizedType);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(objectTypeVariables,  objParameterizedType);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    objParameterizedType);    	non-compiled	[CE]  cannot  find  symbol  objectTypeVariables	61	None	replace
627	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentTypeVariables,  fieldTypeVariable);  [CE]  cannot  find  symbol  parentTypeVariables  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(parentTypeVariables,  fieldTypeVariable);  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(parentTypeVariables,  fieldTypeVariable);	  int    indexOfActualTypeArgument    =    getIndex(classTypeVariables,    fieldTypeVariable);    	non-compiled	[CE]  cannot  find  symbol  parentTypeVariables	57	None	replace
628	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	45	None	replace
629	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	45	None	replace
630	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                        UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ",    is    you    missing    the    use    of    TypeToken    idiom?n    See   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	67	None	replace
631	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                          UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    See    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	11	None	replace
632	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  	non-compiled	[CE]  	40	None	add
633	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation   ");    TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  	non-compiled	[CE]  	40	None	add
634	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	25	1	replace
635	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken?   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	compilable	  [FE]  UnsupportedOperationException  	25	1	replace
636	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator  [CE]  unclosed  string  literal  [FE]      UnsupportedOperationException    [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?   "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	non-compiled	[CE]  unclosed  string  literal	25	None	replace
637	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator  [CE]  not  a  statement  [FE]                  UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator	  throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener       ");    Throw    new    UnsupportedOperationException(       "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See       "    +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator   ");    	non-compiled	[CE]  not  a  statement	17	None	replace
638	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException      [CONTEXT]      TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }      [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]      +       ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See       "  +       "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener     ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(     "Type  \'     "  +  typeToEvaluate  +       "\'  is  not  a  Class,       "  +       "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.     ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing    	non-compiled	[CE]  unclosed  string  literal	119	None	replace
