bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  not  a  statement	17	None	add
2	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  	17	None	add
3	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  	non-compiled	[CE]  	17	None	add
4	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  not  a  statement  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener	  	non-compiled	[CE]  not  a  statement	17	None	add
5	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  	17	None	add
6	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [CE]  not  a  statement  [FE]              UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  	non-compiled	[CE]  not  a  statement	17	None	add
7	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
8	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
9	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
10	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
11	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
12	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  not  a  statement	15	None	add
13	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  	15	None	add
14	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");	  	non-compiled	[CE]  	15	None	add
15	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener  [CE]  not  a  statement  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener	  	non-compiled	[CE]  not  a  statement	15	None	add
16	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	15	None	add
17	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  not  a  statement  [FE]              UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  not  a  statement	15	None	add
18	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
19	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
20	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
21	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
22	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
23	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
24	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
25	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	16	1	replace
26	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
27	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
28	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
29	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
30	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
31	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
32	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  not  a  statement  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  not  a  statement	12	None	add
33	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  	non-compiled	[CE]  	12	None	add
34	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  	12	None	add
35	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  	12	None	add
36	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [CE]  not  a  statement  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  	non-compiled	[CE]  not  a  statement	12	None	add
37	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [CE]  [FE]              UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  	non-compiled	[CE]  	12	None	add
38	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
39	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
40	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
41	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
42	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
43	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generate ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
44	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
45	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
46	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
47	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
48	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
49	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
50	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
51	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
52	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	11	None	replace
53	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
54	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
55	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
56	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serialization-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
57	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  [CE]  cannot  find  symbol  classTypeVariables  [FE]                    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);	      	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	7	None	replace
58	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(actualTypeVariables,  fieldTypeVariable);  [CE]  cannot  find  symbol  actualTypeVariables  [FE]                      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(actualTypeVariables,  fieldTypeVariable);  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(actualTypeVariables,  fieldTypeVariable);	      	non-compiled	[CE]  cannot  find  symbol  actualTypeVariables	7	None	replace
59	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  typeToEvaluate);  [CE]  cannot  find  symbol  classTypeVariables  [FE]                        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  typeToEvaluate);  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  typeToEvaluate);	      	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	7	None	replace
60	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  objParameterizedType.getActualTypeParameters();  [CE]  cannot  find  symbol  objParameterizedType  [FE]                          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  Type[]  actualTypeParameters  =  objParameterizedType.getActualTypeParameters();  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  objParameterizedType.getActualTypeParameters();	      	non-compiled	[CE]  cannot  find  symbol  objParameterizedType	7	None	replace
61	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  objParameterizedType);  [CE]  cannot  find  symbol  classTypeVariables  [FE]                            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  objParameterizedType);  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  objParameterizedType);	      	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	7	None	replace
62	[BUG]  [BUGGY]  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  [CE]  cannot  find  symbol  objParameterizedType  [FE]                              UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();	      	non-compiled	[CE]  cannot  find  symbol  objParameterizedType	7	None	replace
63	[BUG]  [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  parentType);  [CE]  cannot  find  symbol  classTypeVariables  [FE]                                UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  parentType);  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  parentType);	      	non-compiled	[CE]  cannot  find  symbol  classTypeVariables	7	None	replace
64	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serialization-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	6	None	replace
65	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
66	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TO	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
67	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",  is  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
68	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
69	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	18	1	replace
70	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	18	1	replace
71	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	18	1	replace
72	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	18	1	replace
73	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	18	1	replace
74	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Generation ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	18	1	replace
75	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
76	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
77	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  unclosed  string  literal  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	18	None	replace
78	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	18	1	replace
79	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom? "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	18	1	replace
80	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	18	1	replace
81	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Gener ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	18	1	replace
82	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener  [CE]  unclosed  string  literal  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	non-compiled	[CE]  unclosed  string  literal	16	None	replace
83	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
84	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	11	None	replace
85	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	11	None	replace
86	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	11	None	replace
87	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
88	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
89	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
90	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
91	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  rawParentClass.getTypeParameters();  [CE]  missing  return  statement  [FE]                    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  Type[]  actualTypeParameters  =  rawParentClass.getTypeParameters();  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  rawParentClass.getTypeParameters();	      	non-compiled	[CE]  missing  return  statement	7	None	replace
92	[BUG]  [BUGGY]  Type[]  actualTypeParameters  =  parentType.getActualTypeParameters();  [CE]  cannot  find  symbol  [FE]                      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  Type[]  actualTypeParameters  =  parentType.getActualTypeParameters();  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Type[]  actualTypeParameters  =  parentType.getActualTypeParameters();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
93	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  	17	None	add
94	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  unreachable  statement  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  unreachable  statement	17	None	add
95	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener	  	non-compiled	[CE]  	17	None	add
96	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  unreachable  statement  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  unreachable  statement	12	None	add
97	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
98	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
99	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
100	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-userguide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  	15	None	add
101	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener	  	non-compiled	[CE]  	15	None	add
102	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
103	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
104	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".n  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
105	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
106	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
107	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [CE]  unclosed  string  literal  [FE]                    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  classTypeVariables  + ",.  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
108	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  See  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
109	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
110	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
111	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserialization-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
112	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
113	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generator ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
114	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  	12	None	add
115	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  	12	None	add
116	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener  [CE]  unclosed  string  literal  [FE]          UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
117	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
118	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserialization-Gener ");	  	non-compiled	[CE]  	17	None	add
119	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
120	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [CE]  unclosed  string  literal  [FE]              UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + ",http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-De    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
121	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [CE]  unclosed  string  literal  [FE]                UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  fieldTypeVariables  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    classTypeVariables    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-S    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
122	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException(   "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");    Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See   "  +   "http://www.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener ");	  	non-compiled	[CE]  	15	None	add
123	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
124	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  ' "  +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
125	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	add	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
126	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Generations ");	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/user-guide#TOC-Serializing-and-Deserializing-Gener   ");    	compilable	  [FE]  UnsupportedOperationException  	13	1	replace
127	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [CE]  unclosed  string  literal  [FE]        UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Gener	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
128	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des  [CE]  unclosed  string  literal  [FE]            UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got  the  use  of  TypeToken  idiom?n  See "  +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Des    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
129	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator  [CE]  unclosed  string  literal  [FE]                  UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	throw  new  UnsupportedOperationException( "Expecting  parameterized  type,  got   "  +  parentType  + ".  Are  you  missing  the  use  of  TypeToken  idiom?n  See "  + "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-Generator	  throw    new    UnsupportedOperationException(   "Expecting    parameterized    type,    got       "    +    parentType    +   ".n    Are    you    missing    the    use    of    TypeToken    idiom?n    See   "    +   "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-    	non-compiled	[CE]  unclosed  string  literal	6	None	replace
130	[BUG]  [BUGGY]  Class  <?>  rawParentClass  =  parentType.getRawParentClass();  [CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)  [FE]                    UnsupportedOperationException    [CONTEXT]    TypeVariable<?>  fieldTypeVariable  =  (TypeVariable<?>)  typeToEvaluate;  TypeVariable<?>[]  classTypeVariables  =  rawParentClass.getTypeParameters();  ParameterizedType  objParameterizedType  =  (ParameterizedType)  parentType;  int  indexOfActualTypeArgument  =  getIndex(classTypeVariables,  fieldTypeVariable);  Type[]  actualTypeArguments  =  objParameterizedType.getActualTypeArguments();  return  actualTypeArguments[indexOfActualTypeArgument];  }    [BUGGY]  Class  <?>  rawParentClass  =  parentType.getRawParentClass();  [BUGGY]    +     ".\n  Are  you  missing  the  use  of  TypeToken  idiom?\n  See     "  +     "http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener   ");  }  else  if  (typeToEvaluate  instanceof  WildcardType)  {  WildcardType  castedType  =  (WildcardType)  typeToEvaluate;  return  getActualType(castedType.getUpperBounds()[0],  parentType,  rawParentClass);  }  else  {  throw  new  IllegalArgumentException(   "Type  \'   "  +  typeToEvaluate  +     "\'  is  not  a  Class,     "  +     "ParameterizedType,  GenericArrayType  or  TypeVariable.  Can't  extract  type.   ");  }  }  [CLASS]  TypeInfoFactory  [METHOD]  getActualType  [RETURN_TYPE]  Type  Type  typeToEvaluate  Type  parentType  Class<?>  rawParentClass  [VARIABLES]  ParameterizedType  castedType  objParameterizedType  Type  actualType  componentType  owner  parentType  rawType  typeToEvaluate  WildcardType  castedType  boolean  TypeVariable  fieldTypeVariable  Type[]  actualTypeArguments  actualTypeParameters  Class  rawParentClass  GenericArrayType  castedType  TypeVariable[]  classTypeVariables  int  indexOfActualTypeArgument  	projects/Gson1/gson/src/main/java/com/google/gson/TypeInfoFactory.java	1.0	97	99	1	replace	Class  <?>  rawParentClass  =  parentType.getRawParentClass();	      	non-compiled	[CE]  variable  rawParentClass  is  already  defined  in  method  getActualType(Type,Type,Class<?>)	7	None	replace
