bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y!=  null  ||  x.length  ==  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y!=  null  ||  x.length  ==  y.length)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length    ==    y.length)    {    	compilable	  [FE]  NullPointerException  	13	1	replace
2	[BUG]  [BUGGY]  if(x  ==  null  ||  y!=  null  ||  x.length  ==  y.length)  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y!=  null  ||  x.length  ==  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y!=  null  ||  x.length  ==  y.length)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length    ==    y.length)    {    	compilable	  [FE]  NullPointerException  	13	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  >=  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y  ==  null  ||  x.length  >=  y.length)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length    ==    y.length)    {    	compilable	  [FE]  AssertionFailedError  	13	1	replace
4	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  >=  y.length)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  >=  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null  ||  x.length  >=  y.length)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length    ==    y.length)    {    	compilable	  [FE]  AssertionFailedError  	13	1	replace
5	[BUG]  [BUGGY]  if(x!=  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null)  {  return  false;  }  if(x  ==  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null)    {    return    false;    }    if(x  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
7	[BUG]  [BUGGY]      if(x  ==  null)  {  return  false;  }  if(x  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null)  {  return  false;  }  if(x  ==  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null)    {    return    false;    }    if(x  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null)  {  return  false;  }  if(x!=  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null)    {    return    false;    }    if(x!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
9	[BUG]  [BUGGY]      if(x  ==  null)  {  return  false;  }  if(x!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null)  {  return  false;  }  if(x!=  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null)    {    return    false;    }    if(x!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
10	[BUG]  [BUGGY]      if(x  ==  null)  {  return  false;  }  if(x  >=  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null)  {  return  false;  }  if(x  >=  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null)    {    return    false;    }    if(x  >=  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	16	None	add
11	[BUG]  [BUGGY]      if(x  ==  null)  {  return  false;  }  If(x  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null)  {  return  false;  }  If(x  ==  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null)    {    return    false;    }    If(x  ==  null)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	16	None	add
12	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length!=    0)    {    if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
13	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  if(x  ==  null  ||  y!=  null  ||  x.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  if(x  ==  null  ||  y!=  null  ||  x.length!=  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length!=    0)    {    if(x  ==  null  ||  y!=  null  ||  x.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
14	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  if(x!=  null  ||  y  ==  null  ||  x.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  if(x!=  null  ||  y  ==  null  ||  x.length!=  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length!=    0)    {    if(x!=  null  ||  y  ==  null  ||  x.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
15	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  if(x  ==  null  ||  y  ==  null  ||  x.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  if(x  ==  null  ||  y  ==  null  ||  x.length  >=  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length!=    0)    {    if(x  ==  null  ||  y  ==  null  ||  x.length  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
16	[BUG]  [BUGGY]  parent  ==  null  ||(y  ==  null))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  parent  ==  null  ||(y  ==  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	parent  ==  null  ||(y  ==  null))  {  return  false;  }	      if((    x    ==    null)||(y!=    null))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	21	None	replace
17	[BUG]  [BUGGY]  ||(x  ==  null)||(y!=  null))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  ||(x  ==  null)||(y!=  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	||(x  ==  null)||(y!=  null))  {  return  false;  }	      if((    x    ==    null)||(y!=    null))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
19	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  if(x  ==  null  ||  y!=  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    if(x  ==  null  ||  y!=  null)return  false;  if(x.length!=  y.length)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
21	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  if(x  ==  null  ||  y!=  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  if(x  ==  null  ||  y!=  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    if(x  ==  null  ||  y!=  null)return  false;  if(x.length!=  y.length)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(x.length  >=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    if(x  ==  null  ||  y  ==  null)return  false;  if(x.length  >=  y.length)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
23	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(x.length  >=  y.length)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(x.length  >=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    if(x  ==  null  ||  y  ==  null)return  false;  if(x.length  >=  y.length)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  if(x!=  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    if(x!=  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
25	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  if(x!=  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  if(x!=  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    if(x!=  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
26	[BUG]  [BUGGY]  if(x!=  null  ||  x.length  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  x.length  ==  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null  ||  x.length  ==  0)  {  return  false;  }	      if(x    ==    null    ||    x.length    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length!=  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  x.length!=  0)  {	  if(x    ==    null    ||    x.length    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	38	1	replace
28	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length!=  0)  {  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length!=  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length!=  0)  {	  if(x    ==    null    ||    x.length    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	38	1	replace
29	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x!=  null  ||  x.length  ==  0)  {	  if(x    ==    null    ||    x.length    ==    0)    {    	compilable	  [FE]  NullPointerException  	38	1	replace
30	[BUG]  [BUGGY]  if(x!=  null  ||  x.length  ==  0)  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null  ||  x.length  ==  0)  {	  if(x    ==    null    ||    x.length    ==    0)    {    	compilable	  [FE]  NullPointerException  	38	1	replace
31	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y.length  ==  0)  {	  if(x    ==    null    ||    x.length    ==    0)    {    	compilable	  [FE]  NullPointerException  	38	1	replace
32	[BUG]  [BUGGY]  if(x  ==  null  ||  y.length  ==  0)  {  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y.length  ==  0)  {	  if(x    ==    null    ||    x.length    ==    0)    {    	compilable	  [FE]  NullPointerException  	38	1	replace
33	[BUG]  [BUGGY]  if(x  ==  null)  {  if(x  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null)  {  if(x  ==  null)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null)    {    if(x  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
34	[BUG]  [BUGGY]  if(x  ==  null)  {  if(x  ==  null  ||  x.length  ==  y.length)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null)  {  if(x  ==  null  ||  x.length  ==  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null)    {    if(x  ==  null  ||  x.length  ==  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
35	[BUG]  [BUGGY]  if(x  ==  null)  {  if(x  ==  null  ||  y  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null)  {  if(x  ==  null  ||  y  ==  null)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null)    {    if(x  ==  null  ||  y  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
36	[BUG]  [BUGGY]  if(x  ==  null)  {  if(x  ==  null  ||  x.length!=  y.length)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null)  {  if(x  ==  null  ||  x.length!=  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null)    {    if(x  ==  null  ||  x.length!=  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
37	[BUG]  [BUGGY]  if(x  ==  null)  {  if(x  ==  null  ||  x.length  ==  y)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null)  {  if(x  ==  null  ||  x.length  ==  y)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null)    {    if(x  ==  null  ||  x.length  ==  y)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    x.length    ==    0)    {    return    true;    }    if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
39	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length    ==    0)    {    return    true;    }    if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x!=  null  ||  x.length  ==  0)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    x.length    ==    0)    {    return    true;    }    if(x!=  null  ||  x.length  ==  0)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
41	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x!=  null  ||  x.length  ==  0)  {  return  true;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x!=  null  ||  x.length  ==  0)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length    ==    0)    {    return    true;    }    if(x!=  null  ||  x.length  ==  0)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x  ==  null  ||  x.length!=  0)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    x.length    ==    0)    {    return    true;    }    if(x  ==  null  ||  x.length!=  0)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
43	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x  ==  null  ||  x.length!=  0)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x  ==  null  ||  x.length!=  0)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length    ==    0)    {    return    true;    }    if(x  ==  null  ||  x.length!=  0)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x  ==  null  ||  x.length  >=  0)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    x.length    ==    0)    {    return    true;    }    if(x  ==  null  ||  x.length  >=  0)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
45	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x  ==  null  ||  x.length  >=  0)  {  return  true;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x  ==  null  ||  x.length  >=  0)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length    ==    0)    {    return    true;    }    if(x  ==  null  ||  x.length  >=  0)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
46	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  x.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    x.length    ==    0)    {    if(x  ==  null  ||  x.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
47	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  x.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  x.length!=  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    x.length    ==    0)    {    if(x  ==  null  ||  x.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
48	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  0)  {  if(x!=  null  ||  x.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  0)  {  if(x!=  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    x.length    ==    0)    {    if(x!=  null  ||  x.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
49	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  x.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  x.length  >=  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    x.length    ==    0)    {    if(x  ==  null  ||  x.length  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
50	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y!=  null)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y!=  null)  {	  if(x!=    null    ||    y    ==    null)    {    	compilable	  [FE]  NullPointerException  	26	1	replace
51	[BUG]  [BUGGY]  if(x  ==  null  ||  y!=  null)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y!=  null)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y!=  null)  {	  if(x!=    null    ||    y    ==    null)    {    	compilable	  [FE]  NullPointerException  	26	1	replace
52	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  x.length  ==  y.length)  {	  if(x!=    null    ||    y    ==    null)    {    	compilable	  [FE]  NullPointerException  	26	1	replace
53	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  y.length)  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length  ==  y.length)  {	  if(x!=    null    ||    y    ==    null)    {    	compilable	  [FE]  NullPointerException  	26	1	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x,    y))    {    return    false;    }    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
55	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x,    y))    {    return    false;    }    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x,    y))    {    return    false;    }    if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x,  y))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
57	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x,    y))    {    return    false;    }    if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x,  y))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x,    y))    {    return    false;    }    if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
59	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x,    y))    {    return    false;    }    if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
60	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length    ==    y.length)    {    if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
61	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length    ==    y.length)    {    if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
62	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  if(x  ==  null  ||  y!=  null  ||  x.length  ==  y.length)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  if(x  ==  null  ||  y!=  null  ||  x.length  ==  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length    ==    y.length)    {    if(x  ==  null  ||  y!=  null  ||  x.length  ==  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
63	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  (y!=  null))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  (y!=  null))  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length    ==    y.length)    {    if(x  ==  null  ||  y  ==  null  ||  x.length  ==  (y!=  null))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
64	[BUG]  [BUGGY]  if(x  ==  null  ||!x.equals(y))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||!x.equals(y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||!x.equals(y))  {  return  false;  }	      if(x    ==    null)    {    if(!x.equals(y))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
65	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null)  {  if(!x.equals(y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x!=  null)  {  if(!x.equals(y))  {  return  false;  }	      if(x    ==    null)    {    if(!x.equals(y))    {    return    false;    }    	compilable	  [FE]  NullPointerException  	22	1	replace
66	[BUG]  [BUGGY]  if(x!=  null)  {  if(!x.equals(y))  {  return  false;  }  [FE]  NullPointerException  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null)  {  if(!x.equals(y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null)  {  if(!x.equals(y))  {  return  false;  }	      if(x    ==    null)    {    if(!x.equals(y))    {    return    false;    }    	compilable	  [FE]  NullPointerException  	22	1	replace
67	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  if(!x.equals(y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y  ==  null)  {  if(!x.equals(y))  {  return  false;  }	      if(x    ==    null)    {    if(!x.equals(y))    {    return    false;    }    	compilable	  [FE]  NullPointerException  	22	1	replace
68	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  if(!x.equals(y))  {  return  false;  }  [FE]  NullPointerException  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  if(!x.equals(y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null)  {  if(!x.equals(y))  {  return  false;  }	      if(x    ==    null)    {    if(!x.equals(y))    {    return    false;    }    	compilable	  [FE]  NullPointerException  	22	1	replace
69	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length    ==    0)    {    if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
70	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length    ==    0)    {    if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
71	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  y!=  null  ||  x.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  y!=  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length    ==    0)    {    if(x  ==  null  ||  y!=  null  ||  x.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
72	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  if(x!=  null  ||  y  ==  null  ||  x.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  if(x!=  null  ||  y  ==  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length    ==    0)    {    if(x!=  null  ||  y  ==  null  ||  x.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    x.length    ==    0)    {    return    false;    }    if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
74	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length    ==    0)    {    return    false;    }    if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x!=  null  ||  x.length  ==  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    x.length    ==    0)    {    return    false;    }    if(x!=  null  ||  x.length  ==  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
76	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x!=  null  ||  x.length  ==  0)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x!=  null  ||  x.length  ==  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length    ==    0)    {    return    false;    }    if(x!=  null  ||  x.length  ==  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    x.length    ==    0)    {    return    false;    }    if(x  ==  null  ||  x.length!=  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
78	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length    ==    0)    {    return    false;    }    if(x  ==  null  ||  x.length!=  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x  ==  null  ||  x.length  >=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    x.length    ==    0)    {    return    false;    }    if(x  ==  null  ||  x.length  >=  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
80	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x  ==  null  ||  x.length  >=  0)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x  ==  null  ||  x.length  >=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length    ==    0)    {    return    false;    }    if(x  ==  null  ||  x.length  >=  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
81	[BUG]  [BUGGY]  if(x!=  null  ||  y  ==  null)  {  if(x  ==  null  ||  y  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  y  ==  null)  {  if(x  ==  null  ||  y  ==  null)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=    null    ||    y    ==    null)    {    if(x  ==  null  ||  y  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
82	[BUG]  [BUGGY]  if(x!=  null  ||  y  ==  null)  {  if(x!=  null  ||  y  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  y  ==  null)  {  if(x!=  null  ||  y  ==  null)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=    null    ||    y    ==    null)    {    if(x!=  null  ||  y  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
83	[BUG]  [BUGGY]  if(x!=  null  ||  y  ==  null)  {  if(x  ==  null  ||  y!=  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  y  ==  null)  {  if(x  ==  null  ||  y!=  null)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=    null    ||    y    ==    null)    {    if(x  ==  null  ||  y!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
84	[BUG]  [BUGGY]  if(x!=  null  ||  y  ==  null)  {  if(x  >=  null  ||  y  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  y  ==  null)  {  if(x  >=  null  ||  y  ==  null)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=    null    ||    y    ==    null)    {    if(x  >=  null  ||  y  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
85	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x.length  ==  0)  {  return  false;  }  if(x.length  ==  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x.length    ==    0)    {    return    false;    }    if(x.length  ==  0)  {  return  false;  }	  	compilable	  [FE]  NullPointerException  	29	1	add
86	[BUG]  [BUGGY]      if(x.length  ==  0)  {  return  false;  }  if(x.length  ==  0)  {  return  false;  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x.length  ==  0)  {  return  false;  }  if(x.length  ==  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x.length    ==    0)    {    return    false;    }    if(x.length  ==  0)  {  return  false;  }	  	compilable	  [FE]  NullPointerException  	29	1	add
87	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x.length  ==  0)  {  return  false;  }  if(x.length!=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x.length    ==    0)    {    return    false;    }    if(x.length!=  0)  {  return  false;  }	  	compilable	  [FE]  NullPointerException  	29	1	add
88	[BUG]  [BUGGY]      if(x.length  ==  0)  {  return  false;  }  if(x.length!=  0)  {  return  false;  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x.length  ==  0)  {  return  false;  }  if(x.length!=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x.length    ==    0)    {    return    false;    }    if(x.length!=  0)  {  return  false;  }	  	compilable	  [FE]  NullPointerException  	29	1	add
89	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x.length  ==  0)  {  return  false;  }  if(x.length  >=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x.length    ==    0)    {    return    false;    }    if(x.length  >=  0)  {  return  false;  }	  	compilable	  [FE]  NullPointerException  	29	1	add
90	[BUG]  [BUGGY]      if(x.length  ==  0)  {  return  false;  }  if(x.length  >=  0)  {  return  false;  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x.length  ==  0)  {  return  false;  }  if(x.length  >=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x.length    ==    0)    {    return    false;    }    if(x.length  >=  0)  {  return  false;  }	  	compilable	  [FE]  NullPointerException  	29	1	add
91	[BUG]  [BUGGY]      if(x.length  ==  0)  {  return  false;  }  If(x.length  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x.length  ==  0)  {  return  false;  }  If(x.length  ==  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x.length    ==    0)    {    return    false;    }    If(x.length  ==  0)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	29	None	add
92	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null)return  false;  }	      if(x    ==    null    ||    y    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
93	[BUG]  [BUGGY]  if(x  ==  null  ||  y!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y!=  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y!=  null)  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
94	[BUG]  [BUGGY]  if(x!=  null  ||  y  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  y  ==  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null  ||  y  ==  null)  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
95	[BUG]  [BUGGY]  if(x.length  ==  0)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x.length  ==  0)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x.length  ==  0)  {  return  true;  }	      if(x.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
96	[BUG]  [BUGGY]  if(x.length  ==  0  ||  y.length  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x.length  ==  0  ||  y.length  ==  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x.length  ==  0  ||  y.length  ==  0)  {  return  false;  }	      if(x.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
97	[BUG]  [BUGGY]  if(x.length!=  0)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x.length!=  0)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x.length!=  0)  {  return  true;  }	      if(x.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  >=  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y  ==  null  ||  x.length  >=  0)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length!=    0)    {    	compilable	  [FE]  AssertionFailedError  	40	1	replace
99	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  >=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  >=  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null  ||  x.length  >=  0)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length!=    0)    {    	compilable	  [FE]  AssertionFailedError  	40	1	replace
100	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y!=  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y!=  null  ||  x.length  ==  0)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length!=    0)    {    	compilable	  [FE]  NullPointerException  	40	1	replace
101	[BUG]  [BUGGY]  if(x  ==  null  ||  y!=  null  ||  x.length  ==  0)  {  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y!=  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y!=  null  ||  x.length  ==  0)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length!=    0)    {    	compilable	  [FE]  NullPointerException  	40	1	replace
102	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  0)return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  0)return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length  ==  0)return  false;  }	      if(x    ==    null    ||    x.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  if(x  ==  null  ||  y  ==  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)    {    return    false;    }    if(x  ==  null  ||  y  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
104	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  if(x  ==  null  ||  y  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  if(x  ==  null  ||  y  ==  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)    {    return    false;    }    if(x  ==  null  ||  y  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  if(x  ==  null  ||  y!=  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)    {    return    false;    }    if(x  ==  null  ||  y!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
106	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  if(x  ==  null  ||  y!=  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  if(x  ==  null  ||  y!=  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)    {    return    false;    }    if(x  ==  null  ||  y!=  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  if(x!=  null  ||  y  ==  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)    {    return    false;    }    if(x!=  null  ||  y  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
108	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  if(x!=  null  ||  y  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  if(x!=  null  ||  y  ==  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)    {    return    false;    }    if(x!=  null  ||  y  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
109	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  if(x  >=  null  ||  y  ==  null)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  if(x  >=  null  ||  y  ==  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)    {    return    false;    }    if(x  >=  null  ||  y  ==  null)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	3	None	add
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if((  x  ==  null)||(y  ==  null))  {  return  false;  }  if((  x  ==  null)||(y  ==  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if((    x    ==    null)||(y    ==    null))    {    return    false;    }    if((  x  ==  null)||(y  ==  null))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
111	[BUG]  [BUGGY]      if((  x  ==  null)||(y  ==  null))  {  return  false;  }  if((  x  ==  null)||(y  ==  null))  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if((  x  ==  null)||(y  ==  null))  {  return  false;  }  if((  x  ==  null)||(y  ==  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if((    x    ==    null)||(y    ==    null))    {    return    false;    }    if((  x  ==  null)||(y  ==  null))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if((  x  ==  null)||(y  ==  null))  {  return  false;  }  if((  x  ==  null)||(y!=  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if((    x    ==    null)||(y    ==    null))    {    return    false;    }    if((  x  ==  null)||(y!=  null))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
113	[BUG]  [BUGGY]      if((  x  ==  null)||(y  ==  null))  {  return  false;  }  if((  x  ==  null)||(y!=  null))  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if((  x  ==  null)||(y  ==  null))  {  return  false;  }  if((  x  ==  null)||(y!=  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if((    x    ==    null)||(y    ==    null))    {    return    false;    }    if((  x  ==  null)||(y!=  null))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if((  x  ==  null)||(y  ==  null))  {  return  false;  }  if((  x!=  null)||(y  ==  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if((    x    ==    null)||(y    ==    null))    {    return    false;    }    if((  x!=  null)||(y  ==  null))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
115	[BUG]  [BUGGY]      if((  x  ==  null)||(y  ==  null))  {  return  false;  }  if((  x!=  null)||(y  ==  null))  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if((  x  ==  null)||(y  ==  null))  {  return  false;  }  if((  x!=  null)||(y  ==  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if((    x    ==    null)||(y    ==    null))    {    return    false;    }    if((  x!=  null)||(y  ==  null))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
116	[BUG]  [BUGGY]  if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x[0],    y[0]))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
117	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length!=    y.length)    {    if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
118	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length!=  (y  ==  null))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length!=  (y  ==  null))  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length!=    y.length)    {    if(x  ==  null  ||  y  ==  null  ||  x.length!=  (y  ==  null))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
119	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x  ==  null  ||  y!=  null  ||  x.length!=  y.length)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x  ==  null  ||  y!=  null  ||  x.length!=  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length!=    y.length)    {    if(x  ==  null  ||  y!=  null  ||  x.length!=  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
120	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x!=  null  ||  y  ==  null  ||  x.length!=  y.length)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x!=  null  ||  y  ==  null  ||  x.length!=  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length!=    y.length)    {    if(x!=  null  ||  y  ==  null  ||  x.length!=  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
121	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  y  ==  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x!=  null  ||  y  ==  null  ||  x.length  ==  0)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length    ==    0)    {    	compilable	  [FE]  NullPointerException  	36	1	replace
122	[BUG]  [BUGGY]  if(x!=  null  ||  y  ==  null  ||  x.length  ==  0)  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  y  ==  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null  ||  y  ==  null  ||  x.length  ==  0)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length    ==    0)    {    	compilable	  [FE]  NullPointerException  	36	1	replace
123	[BUG]  [BUGGY]  if(x  ==  null  ||  y.length!=  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y.length!=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y.length!=  0)  {  return  false;  }	      if(x    ==    null    ||    x.length!=    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
124	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  if(x  ==  null  ||  y  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  if(x  ==  null  ||  y  ==  null)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null)    {    if(x  ==  null  ||  y  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
125	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  if(x  ==  null  ||  y!=  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  if(x  ==  null  ||  y!=  null)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null)    {    if(x  ==  null  ||  y!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
126	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  if(x!=  null  ||  y  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  if(x!=  null  ||  y  ==  null)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null)    {    if(x!=  null  ||  y  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
127	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  If(x  ==  null  ||  y  ==  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  If(x  ==  null  ||  y  ==  null)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null)    {    If(x  ==  null  ||  y  ==  null)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
128	[BUG]  [BUGGY]  if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x,  y))  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x,    y))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
129	[BUG]  [BUGGY]  if(x  ==  null)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null)  {  return  true;  }	      if(x    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
130	[BUG]  [BUGGY]  if(x!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null)  {  return  false;  }	      if(x    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    x.length!=    0)    {    return    false;    }    if(x  ==  null  ||  x.length!=  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
132	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length!=    0)    {    return    false;    }    if(x  ==  null  ||  x.length!=  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  if(x!=  null  ||  x.length!=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    x.length!=    0)    {    return    false;    }    if(x!=  null  ||  x.length!=  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
134	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  if(x!=  null  ||  x.length!=  0)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  if(x!=  null  ||  x.length!=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length!=    0)    {    return    false;    }    if(x!=  null  ||  x.length!=  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  if(x  ==  null  ||  x.length  >=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    x.length!=    0)    {    return    false;    }    if(x  ==  null  ||  x.length  >=  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
136	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  if(x  ==  null  ||  x.length  >=  0)  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  if(x  ==  null  ||  x.length  >=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length!=    0)    {    return    false;    }    if(x  ==  null  ||  x.length  >=  0)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
137	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  if(x  ==  null  ||  x.length  >>  0)  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  if(x  ==  null  ||  x.length  >>  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length!=    0)    {    return    false;    }    if(x  ==  null  ||  x.length  >>  0)  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	33	None	add
138	[BUG]  [BUGGY]  if(x  ==  null  ||  y!=  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y!=  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y!=  null)return  false;  if(x.length!=  y.length)  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x[0],    y[0]))    {    return    false;    }    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
140	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x[0],    y[0]))    {    return    false;    }    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x[0],    y[0]))    {    return    false;    }    if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
142	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x[0],    y[0]))    {    return    false;    }    if(x  ==  null  ||  y!=  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x[0],    y[0]))    {    return    false;    }    if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
144	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x[0],    y[0]))    {    return    false;    }    if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
145	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[1],  y[1]))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x[0],    y[0]))    {    return    false;    }    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[1],  y[1]))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
146	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[1],  y[1]))  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[1],  y[1]))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x[0],    y[0]))    {    return    false;    }    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[1],  y[1]))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
147	[BUG]  [BUGGY]  ||(x  ==  null)||(y  ==  null))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  ||(x  ==  null)||(y  ==  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	||(x  ==  null)||(y  ==  null))  {  return  false;  }	      if((    x    ==    null)||(y    ==    null))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if((  x  ==  null)||(y!=  null))  {  return  false;  }  if((  x  ==  null)||(y!=  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if((    x    ==    null)||(y!=    null))    {    return    false;    }    if((  x  ==  null)||(y!=  null))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
149	[BUG]  [BUGGY]      if((  x  ==  null)||(y!=  null))  {  return  false;  }  if((  x  ==  null)||(y!=  null))  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if((  x  ==  null)||(y!=  null))  {  return  false;  }  if((  x  ==  null)||(y!=  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if((    x    ==    null)||(y!=    null))    {    return    false;    }    if((  x  ==  null)||(y!=  null))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
150	[BUG]  [BUGGY]      if((  x  ==  null)||(y!=  null))  {  return  false;  }  if((  x  ==  null)||(y  >>  null))  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if((  x  ==  null)||(y!=  null))  {  return  false;  }  if((  x  ==  null)||(y  >>  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if((    x    ==    null)||(y!=    null))    {    return    false;    }    if((  x  ==  null)||(y  >>  null))  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	20	None	add
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if((  x  ==  null)||(y!=  null))  {  return  false;  }  if((  x!=  null)||(y!=  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	        if((    x    ==    null)||(y!=    null))    {    return    false;    }    if((  x!=  null)||(y!=  null))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
152	[BUG]  [BUGGY]      if((  x  ==  null)||(y!=  null))  {  return  false;  }  if((  x!=  null)||(y!=  null))  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if((  x  ==  null)||(y!=  null))  {  return  false;  }  if((  x!=  null)||(y!=  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if((    x    ==    null)||(y!=    null))    {    return    false;    }    if((  x!=  null)||(y!=  null))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
153	[BUG]  [BUGGY]      if((  x  ==  null)||(y!=  null))  {  return  false;  }  if((  x  ==  null)||(y  >=  null))  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if((  x  ==  null)||(y!=  null))  {  return  false;  }  if((  x  ==  null)||(y  >=  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if((    x    ==    null)||(y!=    null))    {    return    false;    }    if((  x  ==  null)||(y  >=  null))  {  return  false;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	20	None	add
154	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y!=  null  ||  x.length!=  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y!=  null  ||  x.length!=  y.length)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length!=    y.length)    {    	compilable	  [FE]  NullPointerException  	15	1	replace
155	[BUG]  [BUGGY]  if(x  ==  null  ||  y!=  null  ||  x.length!=  y.length)  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y!=  null  ||  x.length!=  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y!=  null  ||  x.length!=  y.length)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length!=    y.length)    {    	compilable	  [FE]  NullPointerException  	15	1	replace
156	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  If(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  If(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length!=    0)    {    If(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
157	[BUG]  [BUGGY]  if(x  ==  null)  {  if(x  ==  null  ||!((x  ==  null)!=  (y  ==  null))  {  [CE]  ')'  expected  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null)  {  if(x  ==  null  ||!((x  ==  null)!=  (y  ==  null))  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null)    {    if(x  ==  null  ||!((x  ==  null)!=  (y  ==  null))  {	  	non-compiled	[CE]  ')'  expected	23	None	add
158	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  0)  {  If(x  ==  null  ||  x.length  ==  0)  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  0)  {  If(x  ==  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    x.length    ==    0)    {    If(x  ==  null  ||  x.length  ==  0)  {	  	non-compiled	[CE]  ';'  expected	37	None	add
159	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  If(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  If(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length    ==    0)    {    If(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
160	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  If(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  If(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    If(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
161	[BUG]  [BUGGY]  if(x  ==  null  ||  y.length  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y.length  ==  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y.length  ==  0)  {  return  false;  }	      if(x    ==    null    ||    x.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
162	[BUG]  [BUGGY]  parent  ==  null  ||(y!=  null))  {  return  false;  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  parent  ==  null  ||(y!=  null))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	parent  ==  null  ||(y!=  null))  {  return  false;  }	      if((    x    ==    null)||(y!=    null))    {    return    false;    }    	non-compiled	[CE]  not  a  statement	21	None	replace
163	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x!=  null  ||  y  ==  null  ||  x.length  ==  y.length)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length!=    y.length)    {    	compilable	  [FE]  NullPointerException  	15	1	replace
164	[BUG]  [BUGGY]  if(x!=  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null  ||  y  ==  null  ||  x.length  ==  y.length)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length!=    y.length)    {    	compilable	  [FE]  NullPointerException  	15	1	replace
165	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)return  true;  if(x.length!=  y.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)return  true;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null)return  true;  if(x.length!=  y.length)  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
166	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length  >=  y.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length  >=  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length!=    y.length)    {    if(x  ==  null  ||  y  ==  null  ||  x.length  >=  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
167	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  If(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  If(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length    ==    0)    {    return    true;    }    If(x  ==  null  ||  x.length  ==  0)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	31	None	add
168	[BUG]  [BUGGY]  if(x!=  null  ||!x.equals(y))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||!x.equals(y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null  ||!x.equals(y))  {  return  false;  }	      if(x    ==    null)    {    if(!x.equals(y))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
169	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  If(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  If(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x,    y))    {    return    false;    }    If(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
170	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  If(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  If(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length    ==    0)    {    return    false;    }    If(x  ==  null  ||  x.length  ==  0)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	27	None	add
171	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)return  true;  if(!equals(x[0],  y[0]))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)return  true;  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null)return  true;  if(!equals(x[0],  y[0]))  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x[0],    y[0]))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
172	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  if(x!=  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  if(x!=  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length    ==    y.length)    {    if(x!=  null  ||  y  ==  null  ||  x.length  ==  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
173	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null)  {  return  true;  }	      if(x    ==    null    ||    y    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
174	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)return  true;  if(x.length!=  y.length)return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)return  true;  if(x.length!=  y.length)return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null)return  true;  if(x.length!=  y.length)return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
175	[BUG]  [BUGGY]  if(x  ==  null  ||  y!=  null)return  false;  if(x.length!=  y.length)return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y!=  null)return  false;  if(x.length!=  y.length)return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y!=  null)return  false;  if(x.length!=  y.length)return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
176	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  If(x  ==  null  ||  y  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  If(x  ==  null  ||  y  ==  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)    {    return    false;    }    If(x  ==  null  ||  y  ==  null)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	3	None	add
177	[BUG]  [BUGGY]      if(x  ==  null)  {  return  false;  }  if(x  {  null)  {  return  false;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null)  {  return  false;  }  if(x  {  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null)    {    return    false;    }    if(x  {  null)  {  return  false;  }	  	non-compiled	[CE]  ')'  expected	16	None	add
178	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)return  true;  if(!equals(x,  y))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)return  true;  if(!equals(x,  y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null)return  true;  if(!equals(x,  y))  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x,    y))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
179	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  0)return  false;  if(x.length!=  y.length)return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  0)return  false;  if(x.length!=  y.length)return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length  ==  0)return  false;  if(x.length!=  y.length)return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
180	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  y)return  false;  if(x.length!=  y.length)return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  y)return  false;  if(x.length!=  y.length)return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length  ==  y)return  false;  if(x.length!=  y.length)return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
181	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length!=  y.length)return  false;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length!=  y.length)return  false;  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length!=  y.length)return  false;	      if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
182	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length!=  y.length)return  false;  if(x.length!=  y.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length!=  y.length)return  false;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length!=  y.length)return  false;  if(x.length!=  y.length)  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
183	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  y)return  false;  if(x.length!=  y.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  y)return  false;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length  ==  y)return  false;  if(x.length!=  y.length)  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
184	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  y.length)return  false;  if(x.length!=  y.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  y.length)return  false;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length  ==  y.length)return  false;  if(x.length!=  y.length)  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(x.length!=    y.length)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
185	[BUG]  [BUGGY]  if(x  ==  null)  {  if(x  ==  null  ||  x.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null)  {  if(x  ==  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null)    {    if(x  ==  null  ||  x.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
186	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length!=  y.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length!=  y.length)  {  return  false;  }	      if(x    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x!=  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  x!=  null  ||  x.length  ==  0)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	36	1	replace
188	[BUG]  [BUGGY]  if(x  ==  null  ||  x!=  null  ||  x.length  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x!=  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x!=  null  ||  x.length  ==  0)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	36	1	replace
189	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  if(x  ==  null  ||  Y  ==  null  ||  x.length!=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  if(x  ==  null  ||  Y  ==  null  ||  x.length!=  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length!=    0)    {    if(x  ==  null  ||  Y  ==  null  ||  x.length!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
190	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  if(x  {  null  ||  x.length!=  0)  {  return  false;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  if(x  {  null  ||  x.length!=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length!=    0)    {    return    false;    }    if(x  {  null  ||  x.length!=  0)  {  return  false;  }	  	non-compiled	[CE]  ')'  expected	33	None	add
191	[BUG]  [BUGGY]  if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x,    y))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
192	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length!=  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  x.length!=  y.length)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length!=    y.length)    {    	compilable	  [FE]  NullPointerException  	15	1	replace
193	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length!=  y.length)  {  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length!=  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length!=  y.length)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length!=    y.length)    {    	compilable	  [FE]  NullPointerException  	15	1	replace
194	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  <  =  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  <  =  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length  <  =  0)  {  return  false;  }	      if(x    ==    null    ||    x.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
195	[BUG]  [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  if(x  {  null  ||  y  ==  null)  {  return  false;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  y  ==  null)  {  return  false;  }  if(x  {  null  ||  y  ==  null)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    y    ==    null)    {    return    false;    }    if(x  {  null  ||  y  ==  null)  {  return  false;  }	  	non-compiled	[CE]  ')'  expected	3	None	add
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||!x.equals(y))  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||!x.equals(y))  {	  if(x!=    null    ||    y    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
197	[BUG]  [BUGGY]  if(x  ==  null  ||!x.equals(y))  {  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||!x.equals(y))  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||!x.equals(y))  {	  if(x!=    null    ||    y    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
198	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  <  =  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  <  =  0)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length  <  =  0)  {  return  true;  }	      if(x    ==    null    ||    x.length    ==    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
199	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  Y  ==  null  ||  x.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  if(x  ==  null  ||  Y  ==  null  ||  x.length  ==  0)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length    ==    0)    {    if(x  ==  null  ||  Y  ==  null  ||  x.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x!=  null  ||  x.length  ==  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  x!=  null  ||  x.length  ==  y.length)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length    ==    y.length)    {    	compilable	  [FE]  AssertionFailedError  	13	1	replace
201	[BUG]  [BUGGY]  if(x  ==  null  ||  x!=  null  ||  x.length  ==  y.length)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x!=  null  ||  x.length  ==  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x!=  null  ||  x.length  ==  y.length)  {	  if(x    ==    null    ||    y    ==    null    ||    x.length    ==    y.length)    {    	compilable	  [FE]  AssertionFailedError  	13	1	replace
202	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x  {  null  ||  x.length  ==  0)  {  return  true;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  if(x  {  null  ||  x.length  ==  0)  {  return  true;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length    ==    0)    {    return    true;    }    if(x  {  null  ||  x.length  ==  0)  {  return  true;  }	  	non-compiled	[CE]  ')'  expected	31	None	add
203	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  if(x  {  null  ||  y  ==  null)  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  if(x  {  null  ||  y  ==  null)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null)    {    if(x  {  null  ||  y  ==  null)  {	  	non-compiled	[CE]  ')'  expected	10	None	add
204	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x  ==  null  ||  Y  ==  null  ||  x.length!=  y.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x  ==  null  ||  Y  ==  null  ||  x.length!=  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length!=    y.length)    {    if(x  ==  null  ||  Y  ==  null  ||  x.length!=  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
205	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length!=  (y.length))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  if(x  ==  null  ||  y  ==  null  ||  x.length!=  (y.length))  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length!=    y.length)    {    if(x  ==  null  ||  y  ==  null  ||  x.length!=  (y.length))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
206	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x.length!=  y.length)  {  return  false;  }	      if(x.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
207	[BUG]  [BUGGY]  if(x.length!=  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x.length!=  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x.length!=  0)  {  return  false;  }	      if(x.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
208	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  0)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  0)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length  ==  0)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x[0],    y[0]))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
209	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  y)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  x.length  ==  y)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length  ==  y)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x[0],    y[0]))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
210	[BUG]  [BUGGY]  if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)return    false;    if(!equals(x[0],    y[0]))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
211	[BUG]  [BUGGY]  if(x!=  null)  {  if(!x.equals(new  double[]  {  x,  new  double[]  {  y  }  ))  {  return  false;  }  [CE]  '}'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null)  {  if(!x.equals(new  double[]  {  x,  new  double[]  {  y  }  ))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null)  {  if(!x.equals(new  double[]  {  x,  new  double[]  {  y  }  ))  {  return  false;  }	      if(x    ==    null)    {    if(!x.equals(y))    {    return    false;    }    	non-compiled	[CE]  '}'  expected	22	None	replace
212	[BUG]  [BUGGY]  if(x!=  null)  {  if(!x.equals(y,  x))  {  return  false;  }  [CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x!=  null)  {  if(!x.equals(y,  x))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null)  {  if(!x.equals(y,  x))  {  return  false;  }	      if(x    ==    null)    {    if(!x.equals(y))    {    return    false;    }    	non-compiled	[CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;	22	None	replace
213	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x.length  ==  0)  {  if(!x.equals(y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x.length  ==  0)  {  if(!x.equals(y))  {  return  false;  }	      if(x    ==    null)    {    if(!x.equals(y))    {    return    false;    }    	compilable	  [FE]  NullPointerException  	22	1	replace
214	[BUG]  [BUGGY]  if(x.length  ==  0)  {  if(!x.equals(y))  {  return  false;  }  [FE]  NullPointerException  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x.length  ==  0)  {  if(!x.equals(y))  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x.length  ==  0)  {  if(!x.equals(y))  {  return  false;  }	      if(x    ==    null)    {    if(!x.equals(y))    {    return    false;    }    	compilable	  [FE]  NullPointerException  	22	1	replace
215	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  return  false;  }	      if(x    ==    null    ||    y    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
216	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  if(x  ==  null  ||  Y  ==  null  ||  x.length  ==  y.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  if(x  ==  null  ||  Y  ==  null  ||  x.length  ==  y.length)  {  [BUGGY]    return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x    ==    null    ||    y    ==    null    ||    x.length    ==    y.length)    {    if(x  ==  null  ||  Y  ==  null  ||  x.length  ==  y.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
217	[BUG]  [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x  {  null  ||  x.length  ==  0)  {  return  false;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {    [BUGGY]      if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  if(x  {  null  ||  x.length  ==  0)  {  return  false;  }  [BUGGY]    if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	        if(x    ==    null    ||    x.length    ==    0)    {    return    false;    }    if(x  {  null  ||  x.length  ==  0)  {  return  false;  }	  	non-compiled	[CE]  ')'  expected	27	None	add
