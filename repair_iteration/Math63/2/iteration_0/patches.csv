bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
2	[BUG]  [BUGGY]    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x[0],  y[0]))  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  y  ==  null)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	    if(x  ==  null  ||  y  ==  null)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
4	[BUG]  [BUGGY]    if(x  ==  null  ||  y  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  y  ==  null)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x  ==  null  ||  y  ==  null)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
6	[BUG]  [BUGGY]    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x  ==  null  ||  y  ==  null)return  false;  if(!equals(x,  y))  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	    if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
8	[BUG]  [BUGGY]    if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
9	[BUG]  [BUGGY]    if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x  ==  null  ||  y  ==  null)return  false;  if(x.length!=  y.length)return  false;  }		non-compiled	[CE]  illegal  start  of  type	4	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y  ==  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
11	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
13	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null  ||  x.length  ==  y.length)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
15	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null  ||  x.length!=  y.length)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	    if(x  ==  null)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
17	[BUG]  [BUGGY]    if(x  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x  ==  null)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if((  x  ==  null)||(y  ==  null))  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	    if((  x  ==  null)||(y  ==  null))  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
19	[BUG]  [BUGGY]    if((  x  ==  null)||(y  ==  null))  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if((  x  ==  null)||(y  ==  null))  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if((  x  ==  null)||(y  ==  null))  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if((  x  ==  null)||(y!=  null))  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	    if((  x  ==  null)||(y!=  null))  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
21	[BUG]  [BUGGY]    if((  x  ==  null)||(y!=  null))  {  return  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if((  x  ==  null)||(y!=  null))  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if((  x  ==  null)||(y!=  null))  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
22	[BUG]  [BUGGY]    if(x  ==  null)  {  if(!x.equals(y))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null)  {  if(!x.equals(y))  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x  ==  null)  {  if(!x.equals(y))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
23	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  NullPointerException  	3	1	replace
24	[BUG]  [BUGGY]  if(x  ==  null)  {  [FE]  NullPointerException  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  NullPointerException  	3	1	replace
25	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x!=  null  ||  y  ==  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x!=  null  ||  y  ==  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  NullPointerException  	3	1	replace
26	[BUG]  [BUGGY]  if(x!=  null  ||  y  ==  null)  {  [FE]  NullPointerException  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x!=  null  ||  y  ==  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null  ||  y  ==  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  NullPointerException  	3	1	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	    if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
28	[BUG]  [BUGGY]    if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x  ==  null  ||  x.length  ==  0)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
29	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x.length  ==  0)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	    if(x.length  ==  0)  {  return  false;  }		compilable	  [FE]  NullPointerException  	4	1	add
30	[BUG]  [BUGGY]    if(x.length  ==  0)  {  return  false;  }  [FE]  NullPointerException  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x.length  ==  0)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x.length  ==  0)  {  return  false;  }		compilable	  [FE]  NullPointerException  	4	1	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	    if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
32	[BUG]  [BUGGY]    if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x  ==  null  ||  x.length  ==  0)  {  return  true;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	    if(x  ==  null  ||  x.length!=  0)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
34	[BUG]  [BUGGY]    if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null  ||  x.length!=  0)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x  ==  null  ||  x.length!=  0)  {  return  false;  }		compilable	  [FE]  AssertionFailedError  	4	1	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
36	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null  ||  x.length  ==  0)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
37	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  x.length  ==  0)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  x.length  ==  0)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  NullPointerException  	3	1	replace
38	[BUG]  [BUGGY]  if(x  ==  null  ||  x.length  ==  0)  {  [FE]  NullPointerException  [FE]      AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  x.length  ==  0)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  x.length  ==  0)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  NullPointerException  	3	1	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
40	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null  ||  x.length!=  0)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  AssertionFailedError  	3	1	replace
