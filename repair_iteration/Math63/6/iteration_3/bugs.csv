bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	  if(!equals(x[i],    y[i]))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
2	[BUG]  [BUGGY]  if(x.length  ==  y.length)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length  ==  y.length)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length  ==  y.length)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	  if(!equals(x[i],    y[i]))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  true;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  true;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  true;  }	  for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    true;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]  ==  0;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]  ==  0;  ++i)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y[i]  ==  0;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y.length    ==    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
5	[BUG]  [BUGGY]  if(x  ==  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x  ==  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x  ==  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	  if(x!=    null)    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
6	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }	  if(x!=    null)    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
7	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  For(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	For(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }	  For(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
8	[BUG]  [BUGGY]  if(!equals(x[0],  y[1])||!equals(x[1],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x[0],  y[1])||!equals(x[1],  y[1]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[0],  y[1])||!equals(x[1],  y[1]))  {  return  false;  }	  if(!equals(x[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
9	[BUG]  [BUGGY]  ||!equals(x[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  ||!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	||!equals(x[0],  y[1]))  {  return  false;  }	  if(!equals(x[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
10	[BUG]  [BUGGY]  if(!equals(x[0],  y[1])&&!equals(x[1],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x[0],  y[1])&&!equals(x[1],  y[1]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[0],  y[1])&&!equals(x[1],  y[1]))  {  return  false;  }	  if(!equals(x[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1,  y.length  -  1)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1,  y.length  -  1)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  -  1,  y.length  -  1)  {	  for(int    i    =    0;    i    <    x.length    -    1,    y.length)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1,  y[i])  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1,  y[i])  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  -  1,  y[i])  {	  for(int    i    =    0;    i    <    x.length    -    1,    y.length)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  -  2,  y.length)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  -  2,  y.length)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  -  2,  y.length)  {	  for(int    i    =    0;    i    <    x.length    -    1,    y.length)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
14	[BUG]  [BUGGY]  if(y.length!=  x.length)  {  if(!equals(y[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(y.length!=  x.length)  {  if(!equals(y[0],  y[1]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(y.length!=  x.length)  {  if(!equals(y[0],  y[1]))  {  return  false;  }	  if(x.length!=    y.length)    {    if(!equals(y[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
15	[BUG]  [BUGGY]  if(x.length  ==  y.length)  {  if(!equals(y[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length  ==  y.length)  {  if(!equals(y[0],  y[1]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length  ==  y.length)  {  if(!equals(y[0],  y[1]))  {  return  false;  }	  if(x.length!=    y.length)    {    if(!equals(y[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
16	[BUG]  [BUGGY]  if(x  ==  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x  ==  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x  ==  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }	  if(x!=    null)    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }	  for(int    i    =    0;    i    <    x.length    -    1;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  -  2;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  -  2;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  -  2;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	  for(int    i    =    0;    i    <    x.length    -    1;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
19	[BUG]  [BUGGY]  if(!equals(x,  y)||!equals(y,  x.length))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x,  y)||!equals(y,  x.length))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x,  y)||!equals(y,  x.length))  {  return  false;  }	  if(!equals(x,    y))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
20	[BUG]  [BUGGY]  if(!equals(x[0],  y[0]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x[0],  y[0]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[0],  y[0]))  {  return  false;  }	  if(!equals(x,    y))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
21	[BUG]  [BUGGY]  if(!equals(x,  y)||!equals(y,  x[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x,  y)||!equals(y,  x[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x,  y)||!equals(y,  x[i]))  {  return  false;  }	  if(!equals(x,    y))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
22	[BUG]  [BUGGY]  char  i  =  0;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  char  i  =  0;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	char  i  =  0;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	  int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
23	[BUG]  [BUGGY]  boolean  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  boolean  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	boolean  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	  int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
24	[BUG]  [BUGGY]  byte  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  byte  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	byte  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	  int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i].length!=  0;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i].length!=  0;  ++i)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y[i].length!=  0;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y[i].length    >    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i].length  ==  0;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i].length  ==  0;  ++i)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y[i].length  ==  0;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y[i].length    >    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i].length  >=  0;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i].length  >=  0;  ++i)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y[i].length  >=  0;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y[i].length    >    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  isEmpty())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  isEmpty())  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  isEmpty())  {	  for(int    i    =    0;    i    <    x.length    &&!isEmpty())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!equals(y[i],  x.length))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!equals(y[i],  x.length))  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&!equals(y[i],  x.length))  {	  for(int    i    =    0;    i    <    x.length    &&!isEmpty())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
30	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }	  if(!equals(x,    y))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
31	[BUG]  [BUGGY]  if(x.length  ==  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length  ==  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length  ==  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }	  if(!equals(x,    y))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
32	[BUG]  [BUGGY]  if(y.length  ==  x.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(y.length  ==  x.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(y.length  ==  x.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }	  if(x.length    ==    y.length)    {    if(!equals(x[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
33	[BUG]  [BUGGY]  if(x  ==  null)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x  ==  null)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x  ==  null)  {  if(!equals(x[0],  y[1]))  {  return  false;  }	  if(x!=    null)    {    if(!equals(x[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
34	[BUG]  [BUGGY]  if(x!=  null  ||!equals(x[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x!=  null  ||!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x!=  null  ||!equals(x[0],  y[1]))  {  return  false;  }	  if(x!=    null)    {    if(!equals(x[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!equals(y[i],  y[i]))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!equals(y[i],  y[i]))  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&!equals(y[i],  y[i]))  {	  for(int    i    =    0;    i    <    x.length    &&!isEquals(y[i],    y[i]))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  isEquals(y[i],  y[i]))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  isEquals(y[i],  y[i]))  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  isEquals(y[i],  y[i]))  {	  for(int    i    =    0;    i    <    x.length    &&!isEquals(y[i],    y[i]))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
37	[BUG]  [BUGGY]  if(y.length  ==  x.length)  {  if(!equals(x,  y[0]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(y.length  ==  x.length)  {  if(!equals(x,  y[0]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(y.length  ==  x.length)  {  if(!equals(x,  y[0]))  {  return  false;  }	  if(x.length    ==    y.length)    {    if(!equals(x,    y[0]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
38	[BUG]  [BUGGY]  if(x.length  ==  y.length)  {  if(!equals(y,  x[0]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length  ==  y.length)  {  if(!equals(y,  x[0]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length  ==  y.length)  {  if(!equals(y,  x[0]))  {  return  false;  }	  if(x.length    ==    y.length)    {    if(!equals(x,    y[0]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
39	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  if(!equals(y,  x[0]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length!=  y.length)  {  if(!equals(y,  x[0]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  if(!equals(y,  x[0]))  {  return  false;  }	  if(x.length    ==    y.length)    {    if(!equals(x,    y[0]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!y[i])  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!y[i])  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&!y[i])  {	  for(int    i    =    0;    i    <    x.length    &&!y.length)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!y[i].length)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!y[i].length)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&!y[i].length)  {	  for(int    i    =    0;    i    <    x.length    &&!y.length)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!y.length  &&!equals(x[i],  y[i]))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!y.length  &&!equals(x[i],  y[i]))  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&!y.length  &&!equals(x[i],  y[i]))  {	  for(int    i    =    0;    i    <    x.length    &&!y.length)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]  >=  0;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]  >=  0;  ++i)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y[i]  >=  0;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y[i]!=    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  x.length  &&  y[i]!=  0;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  1;  i  <  x.length  &&  y[i]!=  0;  ++i)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  1;  i  <  x.length  &&  y[i]!=  0;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y[i]!=    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!equals(x[i],  y[i]))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!equals(x[i],  y[i]))  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&!equals(x[i],  y[i]))  {	  for(int    i    =    0;    i    <    x.length    &&!equals(y[i],    x[i]))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  x.length  &&  y[i]  >  0;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  1;  i  <  x.length  &&  y[i]  >  0;  ++i)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  1;  i  <  x.length  &&  y[i]  >  0;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y[i]    >    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
47	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	  if(!equals(x,    y))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
48	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false	  if(!equals(x,    y))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
49	[BUG]  [BUGGY]  if(!equals(y[1],  x[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(y[1],  x[1]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(y[1],  x[1]))  {  return  false;  }	  if(!equals(x[1],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length  >  1)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length  >  1)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y.length  >  1)  {	  for(int    i    =    0;    i    <    x.length    &&    y.length    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length  ==  0)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y.length  ==  0)  {	  for(int    i    =    0;    i    <    x.length    &&    y.length    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length!=  0)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y.length!=  0)  {	  for(int    i    =    0;    i    <    x.length    &&    y.length    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
53	[BUG]  [BUGGY]  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }	  if(!equals(x,    y))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
54	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false	  if(!equals(x,    y))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
55	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[	  if(!equals(x[i],    y[i]))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(y[i],    x[i]))    {    return    false;    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
56	[BUG]  [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false	  if(!equals(x[i],    y[i]))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(y[i],    x[i]))    {    return    false;    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(y[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(y[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(y[i],  y[i]))  {  return  false;  }	  for(int    i    =    0;    i    <    x.length    -    1;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  -  2;  ++i)  {  if(!equals(y[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  -  2;  ++i)  {  if(!equals(y[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  -  2;  ++i)  {  if(!equals(y[i],  y[i]))  {  return  false;  }	  for(int    i    =    0;    i    <    x.length    -    1;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
59	[BUG]  [BUGGY]  if(!equals(x[0],  y[1])||!equals(x[1],  y[2]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x[0],  y[1])||!equals(x[1],  y[2]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[0],  y[1])||!equals(x[1],  y[2]))  {  return  false;  }	  if(!equals(x[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
60	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  return  false;  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  return  false;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  return  false;  }  }	  if(!equals(x[i],    y[i]))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
61	[BUG]  [BUGGY]  if(x!=  null)  {  if(!equals(y[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x!=  null)  {  if(!equals(y[0],  y[1]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x!=  null)  {  if(!equals(y[0],  y[1]))  {  return  false;  }	  if(x!=    null)    {    if(!equals(x[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
62	[BUG]  [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  true;  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  true;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  true;  }  }	  for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    true;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  y[i]))  {  return  false;  }	  for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(y[i],    x[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	  for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(y[i],    x[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1,  y[i].length)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1,  y[i].length)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  -  1,  y[i].length)  {	  for(int    i    =    0;    i    <    x.length    -    1,    y.length)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
66	[BUG]  [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }	  if(!equals(x[i],    y[i]))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
67	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  }	  if(x!=    null)    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
68	[BUG]  [BUGGY]  int  i  =  0;  y  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  int  i  =  0;  y  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	int  i  =  0;  y  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	  int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
69	[BUG]  [BUGGY]  char  i  =  0;  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  char  i  =  0;  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	char  i  =  0;  if(!equals(x[i],  y[i]))  {  return  false;  }	  int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
70	[BUG]  [BUGGY]  int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	  int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
71	[BUG]  [BUGGY]  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  }	  if(!equals(x,    y))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length  &&!x.length)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  y.length  &&!x.length)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  y.length  &&!x.length)  {	  for(int    i    =    0;    i    <    x.length    &&!y.length)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length  &&!isEquals(x[i],  y[i]))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  y.length  &&!isEquals(x[i],  y[i]))  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  y.length  &&!isEquals(x[i],  y[i]))  {	  for(int    i    =    0;    i    <    x.length    &&!isEquals(y[i],    y[i]))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!isEquals(y,  y[i]))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!isEquals(y,  y[i]))  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&!isEquals(y,  y[i]))  {	  for(int    i    =    0;    i    <    x.length    &&!isEquals(y[i],    y[i]))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
75	[BUG]  [BUGGY]  if(!equals(x[1],  y[2]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x[1],  y[2]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[1],  y[2]))  {  return  false;  }	  if(!equals(x[1],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length  &&!isEmpty())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  y.length  &&!isEmpty())  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  y.length  &&!isEmpty())  {	  for(int    i    =    0;    i    <    x.length    &&!isEmpty())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]!=  -1;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]!=  -1;  ++i)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y[i]!=  -1;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y[i]!=    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
78	[BUG]  [BUGGY]  if(!equals(x,  y)||!equals(y[0],  y[0]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x,  y)||!equals(y[0],  y[0]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x,  y)||!equals(y[0],  y[0]))  {  return  false;  }	  if(!equals(x,    y))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
79	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  true;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  true;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  true;  }	  if(x!=    null)    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    true;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
80	[BUG]  [BUGGY]  if(!equals(y[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(y[0],  y[1]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(y[0],  y[1]))  {  return  false;  }	  if(x.length!=    y.length)    {    if(!equals(y[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
81	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length!=  y.length)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }	  for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(y[i],    x[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
82	[BUG]  [BUGGY]  if(!equals(x,  y.length))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x,  y.length))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x,  y.length))  {  return  false;  }	  if(y.length!=    x.length)    {    if(!equals(x,    y[0]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
83	[BUG]  [BUGGY]  if(!equals(x[1],  y[1])||!equals(x[1],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x[1],  y[1])||!equals(x[1],  y[1]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[1],  y[1])||!equals(x[1],  y[1]))  {  return  false;  }	  if(!equals(x[1],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
84	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  x.length;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  For(int  i  =  0;  i  <  x.length;  ++i)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	For(int  i  =  0;  i  <  x.length;  ++i)  {	  for(int    i    =    0;    i    <    x.length    +    2;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
85	[BUG]  [BUGGY]  if(!equals(y,  x[0]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(y,  x[0]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(y,  x[0]))  {  return  false;  }	  if(!equals(x,    y[0]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
86	[BUG]  [BUGGY]  if(!equals(x,  y[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x,  y[0],  y[1]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x,  y[0],  y[1]))  {  return  false;  }	  if(!equals(x,    y[0]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
87	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false	  if(!equals(x[i],    y[i]))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(y[i],    x[i]))    {    return    false;    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!isEquals(y,  y[i],  x[i]))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!isEquals(y,  y[i],  x[i]))  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&!isEquals(y,  y[i],  x[i]))  {	  for(int    i    =    0;    i    <    x.length    &&!isEquals(y[i],    y[i]))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!isEquals(x[i],  y[i]))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!isEquals(x[i],  y[i]))  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&!isEquals(x[i],  y[i]))  {	  for(int    i    =    0;    i    <    x.length    &&!isEquals(y[i],    y[i]))    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]!=  y.length;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]!=  y.length;  ++i)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y[i]!=  y.length;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y[i]!=    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]  >=  y.length;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]  >=  y.length;  ++i)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y[i]  >=  y.length;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y[i]!=    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }	  if(!equals(x,    y))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
93	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x,  y))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length!=  y.length)  {  if(!equals(x,  y))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  if(!equals(x,  y))  {  return  false;  }	  if(!equals(x,    y))    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
94	[BUG]  [BUGGY]  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[i],  y[i]))  {  return  false;  }	  For(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
95	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  For(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(x.length!=  y.length)  {  For(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  For(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	  For(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]!=  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]!=  0)  {  [BUGGY]      if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y[i]!=  0)  {	  for(int    i    =    0;    i    <    x.length    &&    y.length    >    0)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
97	[BUG]  [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	  for(int    i    =    0;    i    <    x.length    -    1;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
98	[BUG]  [BUGGY]  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  true;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }      [BUGGY]  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  true;  }  [BUGGY]      for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  true;  }	  if(x.length!=    y.length)    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    true;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
