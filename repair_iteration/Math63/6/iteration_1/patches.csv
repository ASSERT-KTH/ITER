bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!equals(x[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[0],  y[1]))  {  return  false;  }	      if(x.length!=    y.length)    {    if(!equals(x[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
2	[BUG]  [BUGGY]  if(y.length!=  x.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(y.length!=  x.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(y.length!=  x.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }	      if(x.length!=    y.length)    {    if(!equals(x[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
3	[BUG]  [BUGGY]  if(x.length  ==  y.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(x.length  ==  y.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length  ==  y.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }	      if(x.length!=    y.length)    {    if(!equals(x[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length  ==  0;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length  ==  0;  ++i)  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y.length  ==  0;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y.length    >    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length!=  0;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length!=  0;  ++i)  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y.length!=  0;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y.length    >    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length  >=  0;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length  >=  0;  ++i)  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y.length  >=  0;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y.length    >    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length  >  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y.length  >  0)  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y.length  >  0)  {	  for(int    i    =    0;    i    <    x.length    &&    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!equals(y[i],  x[i]))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!equals(y[i],  x[i]))  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&!equals(y[i],  x[i]))  {	  for(int    i    =    0;    i    <    x.length    &&    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!isEmpty())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!isEmpty())  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&!isEmpty())  {	  for(int    i    =    0;    i    <    x.length    &&    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  true;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  true;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  true;  }	      if(x.length    ==    y.length)    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    true;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
11	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  true;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(x.length!=  y.length)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  true;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  true;  }	      if(x.length    ==    y.length)    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    true;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  -  3;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  -  3;  ++i)  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  -  3;  ++i)  {	  for(int    i    =    0;    i    <    x.length    -    1;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  -  4;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  -  4;  ++i)  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  -  4;  ++i)  {	  for(int    i    =    0;    i    <    x.length    -    1;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
14	[BUG]  [BUGGY]  if(!equals(x,  y))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(!equals(x,  y))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x,  y))  {  return  false;  }	      if(x.length!=    y.length)    {    if(!equals(x,    y[0]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
15	[BUG]  [BUGGY]  if(y.length!=  x.length)  {  if(!equals(x,  y[0]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(y.length!=  x.length)  {  if(!equals(x,  y[0]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(y.length!=  x.length)  {  if(!equals(x,  y[0]))  {  return  false;  }	      if(x.length!=    y.length)    {    if(!equals(x,    y[0]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
16	[BUG]  [BUGGY]  if(x.length  ==  y.length)  {  if(!equals(x,  y[0]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(x.length  ==  y.length)  {  if(!equals(x,  y[0]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length  ==  y.length)  {  if(!equals(x,  y[0]))  {  return  false;  }	      if(x.length!=    y.length)    {    if(!equals(x,    y[0]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }	      for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
18	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  For(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	For(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	      for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
19	[BUG]  [BUGGY]  int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	      for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  +  2;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  +  2;  ++i)  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  +  2;  ++i)  {	  for(int    i    =    0;    i    <    x.length    +    1;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  +  3;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  +  3;  ++i)  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  +  3;  ++i)  {	  for(int    i    =    0;    i    <    x.length    +    1;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
22	[BUG]  [BUGGY]  if(!equals(x,  y[0]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(!equals(x,  y[0]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x,  y[0]))  {  return  false;  }	      if(x.length!=    y.length)    {    if(!equals(x,    y[0]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
23	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }	      if(x.length    ==    y.length)    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
24	[BUG]  [BUGGY]  if(x!=  null)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(x!=  null)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x!=  null)  {  if(!equals(x[0],  y[1]))  {  return  false;  }	      if(x.length!=    y.length)    {    if(!equals(x[0],    y[1]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!isEquals(y[i],  y[i]))  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!isEquals(y[i],  y[i]))  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&!isEquals(y[i],  y[i]))  {	  for(int    i    =    0;    i    <    x.length    &&    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!y.length)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  &&!y.length)  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&!y.length)  {	  for(int    i    =    0;    i    <    x.length    &&    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  -  1;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	      for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
28	[BUG]  [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  x[i]))  {  return  false;  }  }	      for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
29	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  true;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  true;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  true;  }	      if(x.length    ==    y.length)    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    true;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
30	[BUG]  [BUGGY]  if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	      if(x.length!=    y.length)    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
31	[BUG]  [BUGGY]  if(x.length!=  y.length)  {  if(!equals(y[0],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(x.length!=  y.length)  {  if(!equals(y[0],  y[1]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(x.length!=  y.length)  {  if(!equals(y[0],  y[1]))  {  return  false;  }	      if(x.length!=    y.length)    {    if(!equals(x[0],    y[0]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]  >  0;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]  >  0;  ++i)  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y[i]  >  0;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y.length    >    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]!=  0;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i]!=  0;  ++i)  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y[i]!=  0;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y.length    >    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i].length  >  0;  ++i)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  &&  y[i].length  >  0;  ++i)  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  &&  y[i].length  >  0;  ++i)  {	  for(int    i    =    0;    i    <    x.length    &&    y.length    >    0;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
35	[BUG]  [BUGGY]  if(!equals(x[1],  y[1]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(!equals(x[1],  y[1]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[1],  y[1]))  {  return  false;  }	      if(x.length!=    y.length)    {    if(!equals(x[0],    y[0]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
36	[BUG]  [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	      for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
37	[BUG]  [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x[i],  y[i]))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }	      for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
38	[BUG]  [BUGGY]  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }	      if(x.length    ==    y.length)    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
39	[BUG]  [BUGGY]  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]    for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	if(!equals(x,  y))  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  }	      if(x.length    ==    y.length)    {    for(int    i    =    0;    i    <    x.length;    ++i)    {    if(!equals(x[i],    y[i]))    {    return    false;    }    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1,  y.length)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }    [BUGGY]  for(int  i  =  0;  i  <  x.length  -  1,  y.length)  {  [BUGGY]    if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i  <  x.length  -  1,  y.length)  {	  for(int    i    =    0;    i    <    x.length    -    1;    ++i)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
