bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]  return  false;  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	534	534	1	add	return  false;	return  true;  	compilable	  [FE]  AssertionFailedError  testArrayEquals	15	1
2	[BUG]  [BUGGY]  return  false;  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]  return  false;  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	534	534	1	replace	return  false;	return  true;  	compilable	  [FE]  AssertionFailedError  testArrayEquals	15	1
2	[BUG]  [BUGGY]  return(x  ==  y)||(y[i]  ==  y)&&((  y[i]  ==  y)||(y.equals(x[i],  y[i])))  {  return  false;  }  [CE]  ';'  expected  [CONTEXT]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]  return(x  ==  y)||(y[i]  ==  y)&&((  y[i]  ==  y)||(y.equals(x[i],  y[i])))  {  return  false;  }  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	534	534	1	replace	return(x  ==  y)||(y[i]  ==  y)&&((  y[i]  ==  y)||(y.equals(x[i],  y[i])))  {  return  false;  }	return  true;  	non-compiled	[CE]  ';'  expected	15	None
3	[BUG]  [BUGGY]  return(x  ==  y)||(y[i]  ==  y)&&((  y[i]  ==  y)||(y.equals(x[i],  y[i])))  {  return  false;  [CE]  ';'  expected  [CONTEXT]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]  return(x  ==  y)||(y[i]  ==  y)&&((  y[i]  ==  y)||(y.equals(x[i],  y[i])))  {  return  false;  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	534	534	1	replace	return(x  ==  y)||(y[i]  ==  y)&&((  y[i]  ==  y)||(y.equals(x[i],  y[i])))  {  return  false;	return  true;  	non-compiled	[CE]  ';'  expected	15	None
4	[BUG]  [BUGGY]  return  y.equals(x[i])&&  y[i]  ==  y[i].equals(x[i],  y[i])&&  y[i]  ==  y[i])&&((  y[i]  ==  y[i])  [CE]  ';'  expected  [CONTEXT]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]  return  y.equals(x[i])&&  y[i]  ==  y[i].equals(x[i],  y[i])&&  y[i]  ==  y[i])&&((  y[i]  ==  y[i])  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	534	534	1	replace	return  y.equals(x[i])&&  y[i]  ==  y[i].equals(x[i],  y[i])&&  y[i]  ==  y[i])&&((  y[i]  ==  y[i])	return  true;  	non-compiled	[CE]  ';'  expected	15	None
5	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]    [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	534	534	1	replace	  	return  true;  	non-compiled	[CE]  missing  return  statement	15	None
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]  return  true;  [BUGGY]  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	add	return  true;	return  false;  	compilable	  [FE]  AssertionFailedError  testArrayEquals	9	1
12	[BUG]  [BUGGY]  return  true;  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]  return  true;  [BUGGY]  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	return  true;	return  false;  	compilable	  [FE]  AssertionFailedError  testArrayEquals	9	1
12	[BUG]  [BUGGY]  return!((  x.length  ==  y.length)&&(y.charAt(y.charAt(0))!=  0))  {  [CE]  ';'  expected  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]  return!((  x.length  ==  y.length)&&(y.charAt(y.charAt(0))!=  0))  {  [BUGGY]  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	return!((  x.length  ==  y.length)&&(y.charAt(y.charAt(0))!=  0))  {	return  false;  	non-compiled	[CE]  ';'  expected	9	None
13	[BUG]  [BUGGY]  return!((  x.length  ==  y.length)&&(y.charAt(y.charAt(0))  ==  0))  {  [CE]  ';'  expected  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]  return!((  x.length  ==  y.length)&&(y.charAt(y.charAt(0))  ==  0))  {  [BUGGY]  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	return!((  x.length  ==  y.length)&&(y.charAt(y.charAt(0))  ==  0))  {	return  false;  	non-compiled	[CE]  ';'  expected	9	None
14	[BUG]  [BUGGY]  return!((  y  ==  null)&&(x.length!=  y.length))  &&(y.length!=  0))  {  [CE]  ';'  expected  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]  return!((  y  ==  null)&&(x.length!=  y.length))  &&(y.length!=  0))  {  [BUGGY]  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	return!((  y  ==  null)&&(x.length!=  y.length))  &&(y.length!=  0))  {	return  false;  	non-compiled	[CE]  ';'  expected	9	None
15	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]    [BUGGY]  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	add	  	return  false;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  testArrayEquals	9	1
16	[BUG]  [BUGGY]    [FE]  ArrayIndexOutOfBoundsException  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]    [BUGGY]  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	  	return  false;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  testArrayEquals	9	1
21	[BUG]  [BUGGY]    return  new  long[]  {  0l,1l,  2l,  6l,  24l,  121645100408832000l,  3556874800l,  484128000l  }  ;  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  new  long[]  {  0l,1l,  2l,  6l,  24l,  121645100408832000l,  3556874800l,  484128000l  }  ;  [BUGGY]  private  static  final  long[]  FACTORIALS  =  new  long[]  {  1l,1l,  2l,  6l,  24l,  120l,  720l,  5040l,  40320l,  362880l,3628800l,39916800l,  479001600l,  6227020800l,  87178291200l,  1307674368000l,  20922789888000l,  355687428096000l,  6402373705728000l,  121645100408832000l,  2432902008176640000l  };  [CLASS]  MathUtils  OrderDirection  [VARIABLES]  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.13018891098082389	75	75	1	replace	    return  new  long[]  {  0l,1l,  2l,  6l,  24l,  121645100408832000l,  3556874800l,  484128000l  }  ;		non-compiled	[CE]  illegal  start  of  type	19	None
23	[BUG]  [BUGGY]    return  new  long[]  {  0l,1l,  2l,  6l,  24l,  121645100408832000l,  3556874800l,  48412800l  }  ;  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  new  long[]  {  0l,1l,  2l,  6l,  24l,  121645100408832000l,  3556874800l,  48412800l  }  ;  [BUGGY]  private  static  final  long[]  FACTORIALS  =  new  long[]  {  1l,1l,  2l,  6l,  24l,  120l,  720l,  5040l,  40320l,  362880l,3628800l,39916800l,  479001600l,  6227020800l,  87178291200l,  1307674368000l,  20922789888000l,  355687428096000l,  6402373705728000l,  121645100408832000l,  2432902008176640000l  };  [CLASS]  MathUtils  OrderDirection  [VARIABLES]  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.13018891098082389	75	75	1	replace	    return  new  long[]  {  0l,1l,  2l,  6l,  24l,  121645100408832000l,  3556874800l,  48412800l  }  ;		non-compiled	[CE]  illegal  start  of  type	19	None
24	[BUG]  [BUGGY]    return  new  long[]  {  0l,1l,  2l,  6l,  24l,  121645100408832000l,  3556874800l,  48412800l,  5657880l  }  ;  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  new  long[]  {  0l,1l,  2l,  6l,  24l,  121645100408832000l,  3556874800l,  48412800l,  5657880l  }  ;  [BUGGY]  private  static  final  long[]  FACTORIALS  =  new  long[]  {  1l,1l,  2l,  6l,  24l,  120l,  720l,  5040l,  40320l,  362880l,3628800l,39916800l,  479001600l,  6227020800l,  87178291200l,  1307674368000l,  20922789888000l,  355687428096000l,  6402373705728000l,  121645100408832000l,  2432902008176640000l  };  [CLASS]  MathUtils  OrderDirection  [VARIABLES]  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.13018891098082389	75	75	1	replace	    return  new  long[]  {  0l,1l,  2l,  6l,  24l,  121645100408832000l,  3556874800l,  48412800l,  5657880l  }  ;		non-compiled	[CE]  illegal  start  of  type	19	None
25	[BUG]  [BUGGY]    return  new  long[]  {  0l,1l,  2l,  6l,  24l,  121645100408832000l,  3556874800l,  48412800l,  5657880l,  109227898000l  }  ;  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  new  long[]  {  0l,1l,  2l,  6l,  24l,  121645100408832000l,  3556874800l,  48412800l,  5657880l,  109227898000l  }  ;  [BUGGY]  private  static  final  long[]  FACTORIALS  =  new  long[]  {  1l,1l,  2l,  6l,  24l,  120l,  720l,  5040l,  40320l,  362880l,3628800l,39916800l,  479001600l,  6227020800l,  87178291200l,  1307674368000l,  20922789888000l,  355687428096000l,  6402373705728000l,  121645100408832000l,  2432902008176640000l  };  [CLASS]  MathUtils  OrderDirection  [VARIABLES]  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.13018891098082389	75	75	1	replace	    return  new  long[]  {  0l,1l,  2l,  6l,  24l,  121645100408832000l,  3556874800l,  48412800l,  5657880l,  109227898000l  }  ;		non-compiled	[CE]  illegal  start  of  type	19	None
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]  for(int  i  =  1;  i  <  x.length;  ++i)  {  [BUGGY]  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	add	for(int  i  =  1;  i  <  x.length;  ++i)  {	for  (int  i  =  0;  i  <  x.length;  ++i)  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	11	1
33	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  x.length;  ++i)  {  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]  for(int  i  =  1;  i  <  x.length;  ++i)  {  [BUGGY]  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  1;  i  <  x.length;  ++i)  {	for  (int  i  =  0;  i  <  x.length;  ++i)  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	11	1
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]  for(int  i  =  0;  i!=  x.length;  ++i)  {  [BUGGY]  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	add	for(int  i  =  0;  i!=  x.length;  ++i)  {	for  (int  i  =  0;  i  <  x.length;  ++i)  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	11	1
35	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  x.length;  ++i)  {  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]  for(int  i  =  0;  i!=  x.length;  ++i)  {  [BUGGY]  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	for(int  i  =  0;  i!=  x.length;  ++i)  {	for  (int  i  =  0;  i  <  x.length;  ++i)  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	11	1
35	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]    [BUGGY]  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	  	for  (int  i  =  0;  i  <  x.length;  ++i)  {  	non-compiled	[CE]  illegal  start  of  type	11	None
41	[BUG]  [BUGGY]    if(x  ==  null)  {  if(y  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x  ==  null)  {  if(y  ==  null)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x  ==  null)  {  if(y  ==  null)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	4	None
42	[BUG]  [BUGGY]    if(x.length  ==  0)  {  if(y.length  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x.length  ==  0)  {  if(y.length  ==  0)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x.length  ==  0)  {  if(y.length  ==  0)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	4	None
43	[BUG]  [BUGGY]    if(x!=  null)  {  if(y  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x!=  null)  {  if(y  ==  null)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x!=  null)  {  if(y  ==  null)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	4	None
44	[BUG]  [BUGGY]    if(x.length!=  0)  {  if(y.length  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x.length!=  0)  {  if(y.length  ==  0)  {  return  false;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x.length!=  0)  {  if(y.length  ==  0)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	4	None
45	[BUG]  [BUGGY]    if(x.length  ==  0)  {  if(y.length  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]    if(x.length  ==  0)  {  if(y.length  ==  0)  {  return  true;  }  [BUGGY]  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	    if(x.length  ==  0)  {  if(y.length  ==  0)  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	4	None
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]  if(x.length!=  0  ||  y.length!=  0)  {  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	add	if(x.length!=  0  ||  y.length!=  0)  {	if  (x.length  !=  y.length)  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	7	1
53	[BUG]  [BUGGY]  if(x.length!=  0  ||  y.length!=  0)  {  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]  if(x.length!=  0  ||  y.length!=  0)  {  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	replace	if(x.length!=  0  ||  y.length!=  0)  {	if  (x.length  !=  y.length)  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	7	1
53	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]  if(x.length  ==  y.length)  {  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	add	if(x.length  ==  y.length)  {	if  (x.length  !=  y.length)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  testArrayEquals	7	1
54	[BUG]  [BUGGY]  if(x.length  ==  y.length)  {  [FE]  ArrayIndexOutOfBoundsException  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]  if(x.length  ==  y.length)  {  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	replace	if(x.length  ==  y.length)  {	if  (x.length  !=  y.length)  {  	compilable	  [FE]  ArrayIndexOutOfBoundsException  testArrayEquals	7	1
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]  if(x.length!=  (y.length))  {  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	add	if(x.length!=  (y.length))  {	if  (x.length  !=  y.length)  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	7	1
55	[BUG]  [BUGGY]  if(x.length!=  (y.length))  {  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]  if(x.length!=  (y.length))  {  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	replace	if(x.length!=  (y.length))  {	if  (x.length  !=  y.length)  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	7	1
55	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]    [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	replace	  	if  (x.length  !=  y.length)  {  	non-compiled	[CE]  illegal  start  of  type	7	None
61	[BUG]  [BUGGY]    Preconditions.checkNotNull(DECREASING);  [CE]  cannot  find  symbol  DECREASING  [CONTEXT]  private  MathUtils()  {  [BUGGY]    Preconditions.checkNotNull(DECREASING);  [BUGGY]  super();  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  <init>  [RETURN_TYPE]  MathUtils()  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  long  SGN_MASK  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	88	88	1	replace	    Preconditions.checkNotNull(DECREASING);		non-compiled	[CE]  cannot  find  symbol  DECREASING	21	None
62	[BUG]  [BUGGY]    Preconditions.checkState(this.orderDirection  ==  null);  [CE]  cannot  find  symbol  orderDirection  [CONTEXT]  private  MathUtils()  {  [BUGGY]    Preconditions.checkState(this.orderDirection  ==  null);  [BUGGY]  super();  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  <init>  [RETURN_TYPE]  MathUtils()  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  long  SGN_MASK  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	88	88	1	replace	    Preconditions.checkState(this.orderDirection  ==  null);		non-compiled	[CE]  cannot  find  symbol  orderDirection	21	None
63	[BUG]  [BUGGY]    Preconditions.checkState(this.orderDirection!=  null);  [CE]  cannot  find  symbol  orderDirection  [CONTEXT]  private  MathUtils()  {  [BUGGY]    Preconditions.checkState(this.orderDirection!=  null);  [BUGGY]  super();  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  <init>  [RETURN_TYPE]  MathUtils()  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  long  SGN_MASK  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	88	88	1	replace	    Preconditions.checkState(this.orderDirection!=  null);		non-compiled	[CE]  cannot  find  symbol  orderDirection	21	None
64	[BUG]  [BUGGY]    Preconditions.checkState(this.orderDirection  ==  NAN_GAP);  [CE]  cannot  find  symbol  orderDirection  [CONTEXT]  private  MathUtils()  {  [BUGGY]    Preconditions.checkState(this.orderDirection  ==  NAN_GAP);  [BUGGY]  super();  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  <init>  [RETURN_TYPE]  MathUtils()  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  long  SGN_MASK  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	88	88	1	replace	    Preconditions.checkState(this.orderDirection  ==  NAN_GAP);		non-compiled	[CE]  cannot  find  symbol  orderDirection	21	None
65	[BUG]  [BUGGY]    Preconditions.checkState(this.orderDirection  ==  NAN_MASK);  [CE]  cannot  find  symbol  orderDirection  [CONTEXT]  private  MathUtils()  {  [BUGGY]    Preconditions.checkState(this.orderDirection  ==  NAN_MASK);  [BUGGY]  super();  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  <init>  [RETURN_TYPE]  MathUtils()  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  long  SGN_MASK  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	88	88	1	replace	    Preconditions.checkState(this.orderDirection  ==  NAN_MASK);		non-compiled	[CE]  cannot  find  symbol  orderDirection	21	None
71	[BUG]  [BUGGY]    if(y  ==  null)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]    if(y  ==  null)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	534	534	1	replace	    if(y  ==  null)  {  if(!equals(x[i],  y[i]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	16	None
72	[BUG]  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	534	534	1	replace	    if(x.length!=  y.length)  {  if(!equals(x[i],  y[i]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	16	None
73	[BUG]  [BUGGY]    if(!equals(x[i],  y[i]))  {  if(!equals(y[i],  y[i]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]    if(!equals(x[i],  y[i]))  {  if(!equals(y[i],  y[i]))  {  return  false;  }  [BUGGY]  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	534	534	1	replace	    if(!equals(x[i],  y[i]))  {  if(!equals(y[i],  y[i]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	16	None
74	[BUG]  [BUGGY]    if(y  ==  null)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]    if(y  ==  null)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	534	534	1	replace	    if(y  ==  null)  {  if(!equals(x[0],  y[1]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	16	None
75	[BUG]  [BUGGY]    if(y.length!=  x.length)  {  if(!equals(y[i],  y[i]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [BUGGY]    if(y.length!=  x.length)  {  if(!equals(y[i],  y[i]))  {  return  false;  }  [BUGGY]  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	534	534	1	replace	    if(y.length!=  x.length)  {  if(!equals(y[i],  y[i]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	16	None
81	[BUG]  [BUGGY]    if(y[i]  ==  x[i])  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  [BUGGY]    if(y[i]  ==  x[i])  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	530	530	1	replace	    if(y[i]  ==  x[i])  {  if(!equals(x[i],  y[i]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	14	None
82	[BUG]  [BUGGY]    if(x[i]!=  y[i])  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  [BUGGY]    if(x[i]!=  y[i])  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	530	530	1	replace	    if(x[i]!=  y[i])  {  if(!equals(x[i],  y[i]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	14	None
83	[BUG]  [BUGGY]    if(x[i]  ==  y[i])  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  [BUGGY]    if(x[i]  ==  y[i])  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	530	530	1	replace	    if(x[i]  ==  y[i])  {  if(!equals(x[i],  y[i]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	14	None
84	[BUG]  [BUGGY]    if(x[i],  y[i]  ==  x[i])  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [CE]  ')'  expected  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  [BUGGY]    if(x[i],  y[i]  ==  x[i])  {  if(!equals(x[i],  y[i]))  {  return  false;  }  [BUGGY]  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	530	530	1	replace	    if(x[i],  y[i]  ==  x[i])  {  if(!equals(x[i],  y[i]))  {  return  false;  }		non-compiled	[CE]  ')'  expected	14	None
85	[BUG]  [BUGGY]    if(x.length[i]  ==  x.length)  {  if(y[i]  ==  y.length)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  [BUGGY]    if(x.length[i]  ==  x.length)  {  if(y[i]  ==  y.length)  {  return  false;  }  [BUGGY]  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	530	530	1	replace	    if(x.length[i]  ==  x.length)  {  if(y[i]  ==  y.length)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	14	None
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  [BUGGY]  return!((  x  ==  null)!=  (y  ==  null));  [BUGGY]  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	add	return!((  x  ==  null)!=  (y  ==  null));	return  !((x  ==  null)  ^  (y  ==  null));  	compilable	  [FE]  AssertionFailedError  testArrayEquals	5	1
92	[BUG]  [BUGGY]  return!((  x  ==  null)!=  (y  ==  null));  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  [BUGGY]  return!((  x  ==  null)!=  (y  ==  null));  [BUGGY]  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	replace	return!((  x  ==  null)!=  (y  ==  null));	return  !((x  ==  null)  ^  (y  ==  null));  	compilable	  [FE]  AssertionFailedError  testArrayEquals	5	1
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  [BUGGY]  return!((  x  ==  null)  ==  (y  ==  null));  [BUGGY]  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	add	return!((  x  ==  null)  ==  (y  ==  null));	return  !((x  ==  null)  ^  (y  ==  null));  	compilable	  [FE]  AssertionFailedError  testArrayEquals	5	1
93	[BUG]  [BUGGY]  return!((  x  ==  null)  ==  (y  ==  null));  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  [BUGGY]  return!((  x  ==  null)  ==  (y  ==  null));  [BUGGY]  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	replace	return!((  x  ==  null)  ==  (y  ==  null));	return  !((x  ==  null)  ^  (y  ==  null));  	compilable	  [FE]  AssertionFailedError  testArrayEquals	5	1
93	[BUG]  [BUGGY]  return!((  x  ==  null)  <=  (y  ==  null));  [CE]  bad  operand  types  for  binary  operator  '<='  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  [BUGGY]  return!((  x  ==  null)  <=  (y  ==  null));  [BUGGY]  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	replace	return!((  x  ==  null)  <=  (y  ==  null));	return  !((x  ==  null)  ^  (y  ==  null));  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<='	5	None
94	[BUG]  [BUGGY]  return!((  x  ==  null)  <  (y  ==  null));  [CE]  bad  operand  types  for  binary  operator  '<'  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  [BUGGY]  return!((  x  ==  null)  <  (y  ==  null));  [BUGGY]  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	replace	return!((  x  ==  null)  <  (y  ==  null));	return  !((x  ==  null)  ^  (y  ==  null));  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	5	None
95	[BUG]  [BUGGY]  [FE]  NullPointerException  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  [BUGGY]    [BUGGY]  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	add	  	return  !((x  ==  null)  ^  (y  ==  null));  	compilable	  [FE]  NullPointerException  testArrayEquals	5	1
96	[BUG]  [BUGGY]    [FE]  NullPointerException  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  [BUGGY]    [BUGGY]  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	replace	  	return  !((x  ==  null)  ^  (y  ==  null));  	compilable	  [FE]  NullPointerException  testArrayEquals	5	1
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double  x,  double  y)  {  [BUGGY]  return(Double.isNaN(x)||  Double.isNaN(y))  ||  x  ==  y;  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double  x  double  y  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	417	417	1	add	return(Double.isNaN(x)||  Double.isNaN(y))  ||  x  ==  y;	return  (Double.isNaN(x)  &&  Double.isNaN(y))  ||  x  ==  y;  	compilable	  [FE]  AssertionFailedError  testArrayEquals	1	1
102	[BUG]  [BUGGY]  return(Double.isNaN(x)||  Double.isNaN(y))  ||  x  ==  y;  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double  x,  double  y)  {  [BUGGY]  return(Double.isNaN(x)||  Double.isNaN(y))  ||  x  ==  y;  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double  x  double  y  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	417	417	1	replace	return(Double.isNaN(x)||  Double.isNaN(y))  ||  x  ==  y;	return  (Double.isNaN(x)  &&  Double.isNaN(y))  ||  x  ==  y;  	compilable	  [FE]  AssertionFailedError  testArrayEquals	1	1
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double  x,  double  y)  {  [BUGGY]  return(Double.isNaN(x)&&  Double.isNaN(y))  &&  x  ==  y;  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double  x  double  y  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	417	417	1	add	return(Double.isNaN(x)&&  Double.isNaN(y))  &&  x  ==  y;	return  (Double.isNaN(x)  &&  Double.isNaN(y))  ||  x  ==  y;  	compilable	  [FE]  AssertionFailedError  testArrayEquals	1	1
105	[BUG]  [BUGGY]  return(Double.isNaN(x)&&  Double.isNaN(y))  &&  x  ==  y;  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double  x,  double  y)  {  [BUGGY]  return(Double.isNaN(x)&&  Double.isNaN(y))  &&  x  ==  y;  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double  x  double  y  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	417	417	1	replace	return(Double.isNaN(x)&&  Double.isNaN(y))  &&  x  ==  y;	return  (Double.isNaN(x)  &&  Double.isNaN(y))  ||  x  ==  y;  	compilable	  [FE]  AssertionFailedError  testArrayEquals	1	1
105	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  public  static  boolean  equals(double  x,  double  y)  {  [BUGGY]    [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double  x  double  y  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	417	417	1	replace	  	return  (Double.isNaN(x)  &&  Double.isNaN(y))  ||  x  ==  y;  	non-compiled	[CE]  missing  return  statement	1	None
111	[BUG]  [BUGGY]    if(x.length  ==  0)  {  if(y.length  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  [BUGGY]    if(x.length  ==  0)  {  if(y.length  ==  0)  {  return  false;  }  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	replace	    if(x.length  ==  0)  {  if(y.length  ==  0)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	6	None
112	[BUG]  [BUGGY]    if(x.length  ==  0)  {  if(y.length!=  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  [BUGGY]    if(x.length  ==  0)  {  if(y.length!=  0)  {  return  false;  }  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	replace	    if(x.length  ==  0)  {  if(y.length!=  0)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	6	None
113	[BUG]  [BUGGY]    if(x.length  ==  0)  {  if(y.length  <  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  [BUGGY]    if(x.length  ==  0)  {  if(y.length  <  0)  {  return  false;  }  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	replace	    if(x.length  ==  0)  {  if(y.length  <  0)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	6	None
114	[BUG]  [BUGGY]    if(x.length  ==  y.length)  {  if(y.length  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  [BUGGY]    if(x.length  ==  y.length)  {  if(y.length  ==  0)  {  return  false;  }  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	replace	    if(x.length  ==  y.length)  {  if(y.length  ==  0)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	6	None
115	[BUG]  [BUGGY]    if(y  ==  null)  {  if(x.length  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  [BUGGY]    if(y  ==  null)  {  if(x.length  ==  0)  {  return  false;  }  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	replace	    if(y  ==  null)  {  if(x.length  ==  0)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	6	None
121	[BUG]  [BUGGY]    if(x.length!=  0)  {  if(y.length!=  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]    if(x.length!=  0)  {  if(y.length!=  0)  {  return  false;  }  [BUGGY]  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	replace	    if(x.length!=  0)  {  if(y.length!=  0)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	8	None
122	[BUG]  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x,  y))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x,  y))  {  return  false;  }  [BUGGY]  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	replace	    if(x.length!=  y.length)  {  if(!equals(x,  y))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	8	None
123	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  y[i]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]    for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  y[i]))  {  return  false;  }  [BUGGY]  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	replace	    for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(y[i],  y[i]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	8	None
124	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  x.length;  ++i)  {  if(y.length!=  y.length)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]    for(int  i  =  0;  i  <  x.length;  ++i)  {  if(y.length!=  y.length)  {  return  false;  }  [BUGGY]  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	replace	    for(int  i  =  0;  i  <  x.length;  ++i)  {  if(y.length!=  y.length)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	8	None
125	[BUG]  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	replace	    if(x.length!=  y.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	8	None
131	[BUG]  [BUGGY]    if(x  ==  y)  {  if(Double.isNaN(x)&&  Double.isNaN(y))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double  x,  double  y)  {  [BUGGY]    if(x  ==  y)  {  if(Double.isNaN(x)&&  Double.isNaN(y))  {  return  false;  }  [BUGGY]  return  (Double.isNaN(x)  &&  Double.isNaN(y))  ||  x  ==  y;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double  x  double  y  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	417	417	1	replace	    if(x  ==  y)  {  if(Double.isNaN(x)&&  Double.isNaN(y))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	2	None
132	[BUG]  [BUGGY]    if(x  ==  y)  {  if(Double.isNaN(x)||  Double.isNaN(y))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double  x,  double  y)  {  [BUGGY]    if(x  ==  y)  {  if(Double.isNaN(x)||  Double.isNaN(y))  {  return  false;  }  [BUGGY]  return  (Double.isNaN(x)  &&  Double.isNaN(y))  ||  x  ==  y;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double  x  double  y  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	417	417	1	replace	    if(x  ==  y)  {  if(Double.isNaN(x)||  Double.isNaN(y))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	2	None
133	[BUG]  [BUGGY]    if(x  ==  y)  {  if(Double.isNaN(x)&&  Double.isNaN(y))  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double  x,  double  y)  {  [BUGGY]    if(x  ==  y)  {  if(Double.isNaN(x)&&  Double.isNaN(y))  {  return  true;  }  [BUGGY]  return  (Double.isNaN(x)  &&  Double.isNaN(y))  ||  x  ==  y;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double  x  double  y  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	417	417	1	replace	    if(x  ==  y)  {  if(Double.isNaN(x)&&  Double.isNaN(y))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	2	None
134	[BUG]  [BUGGY]    if(x  ==  y)  {  if(Double.isNaN(x)||  Double.isNaN(y))  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double  x,  double  y)  {  [BUGGY]    if(x  ==  y)  {  if(Double.isNaN(x)||  Double.isNaN(y))  {  return  true;  }  [BUGGY]  return  (Double.isNaN(x)  &&  Double.isNaN(y))  ||  x  ==  y;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double  x  double  y  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	417	417	1	replace	    if(x  ==  y)  {  if(Double.isNaN(x)||  Double.isNaN(y))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	2	None
135	[BUG]  [BUGGY]    if(x  ==  y)  {  if(Double.isNaN(x)||  Double.isInfinite(y))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double  x,  double  y)  {  [BUGGY]    if(x  ==  y)  {  if(Double.isNaN(x)||  Double.isInfinite(y))  {  return  false;  }  [BUGGY]  return  (Double.isNaN(x)  &&  Double.isNaN(y))  ||  x  ==  y;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double  x  double  y  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	417	417	1	replace	    if(x  ==  y)  {  if(Double.isNaN(x)||  Double.isInfinite(y))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	2	None
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  [BUGGY]  if(!equals(x[i],  y[i])&&!equals(y[i],  y[i]))  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	530	530	1	add	if(!equals(x[i],  y[i])&&!equals(y[i],  y[i]))  {	if  (!equals(x[i],  y[i]))  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	13	1
143	[BUG]  [BUGGY]  if(!equals(x[i],  y[i])&&!equals(y[i],  y[i]))  {  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  [BUGGY]  if(!equals(x[i],  y[i])&&!equals(y[i],  y[i]))  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	530	530	1	replace	if(!equals(x[i],  y[i])&&!equals(y[i],  y[i]))  {	if  (!equals(x[i],  y[i]))  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	13	1
143	[BUG]  [BUGGY]  if(!equals(x[i],  y[i])&&(y[i]!=  y[i])&&((  y[i]!=  y[i])&&(y[i]!=  y[i])&&((  y!=  y  [CE]  ')'  expected  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  [BUGGY]  if(!equals(x[i],  y[i])&&(y[i]!=  y[i])&&((  y[i]!=  y[i])&&(y[i]!=  y[i])&&((  y!=  y  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	530	530	1	replace	if(!equals(x[i],  y[i])&&(y[i]!=  y[i])&&((  y[i]!=  y[i])&&(y[i]!=  y[i])&&((  y!=  y	if  (!equals(x[i],  y[i]))  {  	non-compiled	[CE]  ')'  expected	13	None
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  [BUGGY]  if(!equals(x[i],  y[i])||!equals(x[i],  y[i]))  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	530	530	1	add	if(!equals(x[i],  y[i])||!equals(x[i],  y[i]))  {	if  (!equals(x[i],  y[i]))  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	13	1
145	[BUG]  [BUGGY]  if(!equals(x[i],  y[i])||!equals(x[i],  y[i]))  {  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  [BUGGY]  if(!equals(x[i],  y[i])||!equals(x[i],  y[i]))  {  [BUGGY]  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	530	530	1	replace	if(!equals(x[i],  y[i])||!equals(x[i],  y[i]))  {	if  (!equals(x[i],  y[i]))  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	13	1
152	[BUG]  [BUGGY]  private  static  final  long[]  FACTORIALS  =  new  long[]  }  [CE]  array  dimension  missing  [CONTEXT]    [BUGGY]  private  static  final  long[]  FACTORIALS  =  new  long[]  }  [BUGGY]  1l,1l,  2l,  6l,  24l,  120l,  720l,  5040l,  40320l,  362880l,3628800l,39916800l,  479001600l,  6227020800l,  87178291200l,  1307674368000l,  20922789888000l,  355687428096000l,  6402373705728000l,  121645100408832000l,  2432902008176640000l  };  [CLASS]  MathUtils  OrderDirection  [VARIABLES]  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.13018891098082389	75	75	1	replace	private  static  final  long[]  FACTORIALS  =  new  long[]  }	private  static  final  long[]  FACTORIALS  =  new  long[]  {  	non-compiled	[CE]  array  dimension  missing	18	None
154	[BUG]  [BUGGY]  private  static  final  long[]  FACTORIALS  =  new  long[]  >>  [CE]  array  dimension  missing  [CONTEXT]    [BUGGY]  private  static  final  long[]  FACTORIALS  =  new  long[]  >>  [BUGGY]  1l,1l,  2l,  6l,  24l,  120l,  720l,  5040l,  40320l,  362880l,3628800l,39916800l,  479001600l,  6227020800l,  87178291200l,  1307674368000l,  20922789888000l,  355687428096000l,  6402373705728000l,  121645100408832000l,  2432902008176640000l  };  [CLASS]  MathUtils  OrderDirection  [VARIABLES]  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.13018891098082389	75	75	1	replace	private  static  final  long[]  FACTORIALS  =  new  long[]  >>	private  static  final  long[]  FACTORIALS  =  new  long[]  {  	non-compiled	[CE]  array  dimension  missing	18	None
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y  ==  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	3	1
162	[BUG]  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y  ==  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y  ==  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	3	1
162	[BUG]  [BUGGY]  [FE]  NullPointerException  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x!=  null  ||  y  ==  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x!=  null  ||  y  ==  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  NullPointerException  testArrayEquals	3	1
163	[BUG]  [BUGGY]  if(x!=  null  ||  y  ==  null)  {  [FE]  NullPointerException  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x!=  null  ||  y  ==  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x!=  null  ||  y  ==  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  NullPointerException  testArrayEquals	3	1
163	[BUG]  [BUGGY]  [FE]  NullPointerException  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y!=  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null  ||  y!=  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  NullPointerException  testArrayEquals	3	1
164	[BUG]  [BUGGY]  if(x  ==  null  ||  y!=  null)  {  [FE]  NullPointerException  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null  ||  y!=  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null  ||  y!=  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  NullPointerException  testArrayEquals	3	1
164	[BUG]  [BUGGY]  [FE]  NullPointerException  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	if(x  ==  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  NullPointerException  testArrayEquals	3	1
165	[BUG]  [BUGGY]  if(x  ==  null)  {  [FE]  NullPointerException  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  [BUGGY]  if(x  ==  null)  {  [BUGGY]  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	if(x  ==  null)  {	if  ((x  ==  null)  ||  (y  ==  null))  {  	compilable	  [FE]  NullPointerException  testArrayEquals	3	1
172	[BUG]  [BUGGY]  setDecREASING(DECREASING);  [CE]  cannot  find  symbol  DECREASING  [CONTEXT]  private  MathUtils()  {  [BUGGY]  setDecREASING(DECREASING);  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  <init>  [RETURN_TYPE]  MathUtils()  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  long  SGN_MASK  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	88	88	1	replace	setDecREASING(DECREASING);	super();  	non-compiled	[CE]  cannot  find  symbol  DECREASING	20	None
173	[BUG]  [BUGGY]  setDeclaringInclusive(DECREASING);  [CE]  cannot  find  symbol  DECREASING  [CONTEXT]  private  MathUtils()  {  [BUGGY]  setDeclaringInclusive(DECREASING);  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  <init>  [RETURN_TYPE]  MathUtils()  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  long  SGN_MASK  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	88	88	1	replace	setDeclaringInclusive(DECREASING);	super();  	non-compiled	[CE]  cannot  find  symbol  DECREASING	20	None
174	[BUG]  [BUGGY]  checkInvariant();  [CE]  cannot  find  symbol  [CONTEXT]  private  MathUtils()  {  [BUGGY]  checkInvariant();  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  <init>  [RETURN_TYPE]  MathUtils()  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  long  SGN_MASK  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	88	88	1	replace	checkInvariant();	super();  	non-compiled	[CE]  cannot  find  symbol	20	None
181	[BUG]  [BUGGY]    if(x.length!=  0)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]    if(x.length!=  0)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	    if(x.length!=  0)  {  if(!equals(x[0],  y[1]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	12	None
182	[BUG]  [BUGGY]    if(x.length  ==  0)  {  if(y.length!=  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]    if(x.length  ==  0)  {  if(y.length!=  0)  {  return  false;  }  [BUGGY]  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	    if(x.length  ==  0)  {  if(y.length!=  0)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	12	None
183	[BUG]  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x[y]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x[y]))  {  return  false;  }  [BUGGY]  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	    if(x.length!=  y.length)  {  if(!equals(x[y]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	12	None
184	[BUG]  [BUGGY]    if(x.length!=  0)  {  if(y.length!=  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]    if(x.length!=  0)  {  if(y.length!=  0)  {  return  false;  }  [BUGGY]  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	    if(x.length!=  0)  {  if(y.length!=  0)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	12	None
185	[BUG]  [BUGGY]    if(x.length!=  0)  {  if(y.length  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]    if(x.length!=  0)  {  if(y.length  ==  0)  {  return  false;  }  [BUGGY]  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	    if(x.length!=  0)  {  if(y.length  ==  0)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	12	None
191	[BUG]  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x,  y))  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x,  y))  {  return  true;  }  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	    if(x.length!=  y.length)  {  if(!equals(x,  y))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	10	None
192	[BUG]  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x[y],  y[y]))  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x[y],  y[y]))  {  return  true;  }  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	    if(x.length!=  y.length)  {  if(!equals(x[y],  y[y]))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	10	None
193	[BUG]  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x[y]))  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x[y]))  {  return  true;  }  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	    if(x.length!=  y.length)  {  if(!equals(x[y]))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	10	None
194	[BUG]  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x,  y))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]    if(x.length!=  y.length)  {  if(!equals(x,  y))  {  return  false;  }  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	    if(x.length!=  y.length)  {  if(!equals(x,  y))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	10	None
195	[BUG]  [BUGGY]    if(x.length!=  0)  {  if(!equals(x,  y))  {  return  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]    if(x.length!=  0)  {  if(!equals(x,  y))  {  return  true;  }  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	    if(x.length!=  0)  {  if(!equals(x,  y))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	10	None
2	[BUG]  [BUGGY]  return!((  x.length  ==  y.length)||(x.length  ==  y.length))  &&(y.charAt(y.length  -  1)  ==  '0')||(y.charAt(y.length  -  1)!=  '9'));  [CE]  ';'  expected  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]  return!((  x.length  ==  y.length)||(x.length  ==  y.length))  &&(y.charAt(y.length  -  1)  ==  '0')||(y.charAt(y.length  -  1)!=  '9'));  [BUGGY]  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	return!((  x.length  ==  y.length)||(x.length  ==  y.length))  &&(y.charAt(y.length  -  1)  ==  '0')||(y.charAt(y.length  -  1)!=  '9'));	return  false;  	non-compiled	[CE]  ';'  expected	9	None
3	[BUG]  [BUGGY]  return!((  x.length  ==  y.length)||(x.length  ==  y.length))  &&(y.charAt(y.length  -  1)  ==  '0')||(y.charAt(y.length  -  1)!=  '9')  [CE]  ';'  expected  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]  return!((  x.length  ==  y.length)||(x.length  ==  y.length))  &&(y.charAt(y.length  -  1)  ==  '0')||(y.charAt(y.length  -  1)!=  '9')  [BUGGY]  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	return!((  x.length  ==  y.length)||(x.length  ==  y.length))  &&(y.charAt(y.length  -  1)  ==  '0')||(y.charAt(y.length  -  1)!=  '9')	return  false;  	non-compiled	[CE]  ';'  expected	9	None
4	[BUG]  [BUGGY]  return!((  x.length  ==  y.length)||(x.length  ==  y.length))  &&(y.charAt(y.length  -  1)  ==  '0')||(y.charAt(y.length  -  1)!=  '9'))  {  [CE]  ';'  expected  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  [BUGGY]  return!((  x.length  ==  y.length)||(x.length  ==  y.length))  &&(y.charAt(y.length  -  1)  ==  '0')||(y.charAt(y.length  -  1)!=  '9'))  {  [BUGGY]  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	return!((  x.length  ==  y.length)||(x.length  ==  y.length))  &&(y.charAt(y.length  -  1)  ==  '0')||(y.charAt(y.length  -  1)!=  '9'))  {	return  false;  	non-compiled	[CE]  ';'  expected	9	None
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]  if(x.length!=  y.length  ||(x.length  ==  y.length))  {  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	add	if(x.length!=  y.length  ||(x.length  ==  y.length))  {	if  (x.length  !=  y.length)  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	7	1
24	[BUG]  [BUGGY]  if(x.length!=  y.length  ||(x.length  ==  y.length))  {  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]  if(x.length!=  y.length  ||(x.length  ==  y.length))  {  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	replace	if(x.length!=  y.length  ||(x.length  ==  y.length))  {	if  (x.length  !=  y.length)  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	7	1
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]  if(x.length!=  y.length  ||  x.length  ==  y.length)  {  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	add	if(x.length!=  y.length  ||  x.length  ==  y.length)  {	if  (x.length  !=  y.length)  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	7	1
25	[BUG]  [BUGGY]  if(x.length!=  y.length  ||  x.length  ==  y.length)  {  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  [BUGGY]  if(x.length!=  y.length  ||  x.length  ==  y.length)  {  [BUGGY]  return  false;  }  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	replace	if(x.length!=  y.length  ||  x.length  ==  y.length)  {	if  (x.length  !=  y.length)  {  	compilable	  [FE]  AssertionFailedError  testArrayEquals	7	1
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]    System.arraycopy(y,  0,  x,  0,  y.length);  [BUGGY]  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	add	    System.arraycopy(y,  0,  x,  0,  y.length);		compilable	  [FE]  AssertionFailedError  testArrayEquals	12	1
42	[BUG]  [BUGGY]    System.arraycopy(y,  0,  x,  0,  y.length);  [FE]  AssertionFailedError  testArrayEquals  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]    System.arraycopy(y,  0,  x,  0,  y.length);  [BUGGY]  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	    System.arraycopy(y,  0,  x,  0,  y.length);		compilable	  [FE]  AssertionFailedError  testArrayEquals	12	1
42	[BUG]  [BUGGY]    if(x.length  ==  y.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]    if(x.length  ==  y.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	    if(x.length  ==  y.length)  {  if(!equals(x[0],  y[1]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	12	None
44	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]    for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	    for(int  i  =  0;  i  <  x.length;  ++i)  {  if(!equals(x[0],  y[1]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	12	None
45	[BUG]  [BUGGY]    if((  x.length  ==  0)&&(y.length  <  0))  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  boolean  equals(double[]  x,  double[]  y)  {  if  ((x  ==  null)  ||  (y  ==  null))  {  return  !((x  ==  null)  ^  (y  ==  null));  }  if  (x.length  !=  y.length)  {  return  false;  }  [BUGGY]    if((  x.length  ==  0)&&(y.length  <  0))  {  if(!equals(x[0],  y[1]))  {  return  false;  }  [BUGGY]  for  (int  i  =  0;  i  <  x.length;  ++i)  {  if  (!equals(x[i],  y[i]))  {  return  false;  }  }  return  true;  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  equals  [RETURN_TYPE]  boolean  double[]  x  double[]  y  [VARIABLES]  boolean  double[]  x  y  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  i  j  k  maxUlps  n  x  y  long  SGN_MASK  a  b  d  result  ret  s  xInt  yInt  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	    if((  x.length  ==  0)&&(y.length  <  0))  {  if(!equals(x[0],  y[1]))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	12	None
62	[BUG]  [BUGGY]  super()  -  Math.sqrt(Integer.toHexString(Nan_GAP));  [CE]  not  a  statement  [CONTEXT]  private  MathUtils()  {  [BUGGY]  super()  -  Math.sqrt(Integer.toHexString(Nan_GAP));  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  <init>  [RETURN_TYPE]  MathUtils()  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  long  SGN_MASK  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	88	88	1	replace	super()  -  Math.sqrt(Integer.toHexString(Nan_GAP));	super();  	non-compiled	[CE]  not  a  statement	20	None
63	[BUG]  [BUGGY]  super()  -  Math.sqrt(Integer.toHexString(NSG_MAX_VALUE));  [CE]  not  a  statement  [CONTEXT]  private  MathUtils()  {  [BUGGY]  super()  -  Math.sqrt(Integer.toHexString(NSG_MAX_VALUE));  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  <init>  [RETURN_TYPE]  MathUtils()  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  long  SGN_MASK  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	88	88	1	replace	super()  -  Math.sqrt(Integer.toHexString(NSG_MAX_VALUE));	super();  	non-compiled	[CE]  not  a  statement	20	None
64	[BUG]  [BUGGY]  super()  -  Math.sqrt(Integer.toHexString(NSS));  [CE]  not  a  statement  [CONTEXT]  private  MathUtils()  {  [BUGGY]  super()  -  Math.sqrt(Integer.toHexString(NSS));  [BUGGY]  }  [CLASS]  MathUtils  OrderDirection  [METHOD]  <init>  [RETURN_TYPE]  MathUtils()  [VARIABLES]  boolean  long[]  FACTORIALS  double  EPSILON  SAFE_MIN  TWO_PI  byte  NB  PB  ZB  short  NS  PS  ZS  int  NAN_GAP  long  SGN_MASK  OrderDirection  DECREASING  INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	88	88	1	replace	super()  -  Math.sqrt(Integer.toHexString(NSS));	super();  	non-compiled	[CE]  not  a  statement	20	None
