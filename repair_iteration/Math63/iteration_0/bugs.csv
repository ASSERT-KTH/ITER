bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return (Double.isNaN(x) && Double.isNaN(y)) || x == y; [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double x, double y) { [BUGGY] return (Double.isNaN(x) && Double.isNaN(y)) || x == y; [BUGGY] } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double x double y [VARIABLES] boolean long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k n x y long SGN_MASK a b d result ret s OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	417	417	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double x, double y) { [BUGGY] [BUGGY] return (Double.isNaN(x) && Double.isNaN(y)) || x == y; } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double x double y [VARIABLES] boolean long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k n x y long SGN_MASK a b d result ret s OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	417	417	1	add	
3	[BUG] [BUGGY] if ((x == null) || (y == null)) { [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double[] x, double[] y) { [BUGGY] if ((x == null) || (y == null)) { [BUGGY] return !((x == null) ^ (y == null)); } if (x.length != y.length) { return false; } for (int i = 0; i < x.length; ++i) { if (!equals(x[i], y[i])) { return false; } } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double[] x, double[] y) { [BUGGY] [BUGGY] if ((x == null) || (y == null)) { return !((x == null) ^ (y == null)); } if (x.length != y.length) { return false; } for (int i = 0; i < x.length; ++i) { if (!equals(x[i], y[i])) { return false; } } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	523	523	1	add	
5	[BUG] [BUGGY] return !((x == null) ^ (y == null)); [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double[] x, double[] y) { if ((x == null) || (y == null)) { [BUGGY] return !((x == null) ^ (y == null)); [BUGGY] } if (x.length != y.length) { return false; } for (int i = 0; i < x.length; ++i) { if (!equals(x[i], y[i])) { return false; } } return true; [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double[] x, double[] y) { if ((x == null) || (y == null)) { [BUGGY] [BUGGY] return !((x == null) ^ (y == null)); } if (x.length != y.length) { return false; } for (int i = 0; i < x.length; ++i) { if (!equals(x[i], y[i])) { return false; } } return true; [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	524	524	1	add	
7	[BUG] [BUGGY] if (x.length != y.length) { [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double[] x, double[] y) { if ((x == null) || (y == null)) { return !((x == null) ^ (y == null)); } [BUGGY] if (x.length != y.length) { [BUGGY] return false; } for (int i = 0; i < x.length; ++i) { if (!equals(x[i], y[i])) { return false; } } return true; } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double[] x, double[] y) { if ((x == null) || (y == null)) { return !((x == null) ^ (y == null)); } [BUGGY] [BUGGY] if (x.length != y.length) { return false; } for (int i = 0; i < x.length; ++i) { if (!equals(x[i], y[i])) { return false; } } return true; } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	526	526	1	add	
9	[BUG] [BUGGY] return false; [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double[] x, double[] y) { if ((x == null) || (y == null)) { return !((x == null) ^ (y == null)); } if (x.length != y.length) { [BUGGY] return false; [BUGGY] } for (int i = 0; i < x.length; ++i) { if (!equals(x[i], y[i])) { return false; } } return true; } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double[] x, double[] y) { if ((x == null) || (y == null)) { return !((x == null) ^ (y == null)); } if (x.length != y.length) { [BUGGY] [BUGGY] return false; } for (int i = 0; i < x.length; ++i) { if (!equals(x[i], y[i])) { return false; } } return true; } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	527	527	1	add	
11	[BUG] [BUGGY] for (int i = 0; i < x.length; ++i) { [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double[] x, double[] y) { if ((x == null) || (y == null)) { return !((x == null) ^ (y == null)); } if (x.length != y.length) { return false; } [BUGGY] for (int i = 0; i < x.length; ++i) { [BUGGY] if (!equals(x[i], y[i])) { return false; } } return true; } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double[] x, double[] y) { if ((x == null) || (y == null)) { return !((x == null) ^ (y == null)); } if (x.length != y.length) { return false; } [BUGGY] [BUGGY] for (int i = 0; i < x.length; ++i) { if (!equals(x[i], y[i])) { return false; } } return true; } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	529	529	1	add	
13	[BUG] [BUGGY] if (!equals(x[i], y[i])) { [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double[] x, double[] y) { if ((x == null) || (y == null)) { return !((x == null) ^ (y == null)); } if (x.length != y.length) { return false; } for (int i = 0; i < x.length; ++i) { [BUGGY] if (!equals(x[i], y[i])) { [BUGGY] return false; } } return true; } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	530	530	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError testArrayEquals [CONTEXT] public static boolean equals(double[] x, double[] y) { if ((x == null) || (y == null)) { return !((x == null) ^ (y == null)); } if (x.length != y.length) { return false; } for (int i = 0; i < x.length; ++i) { [BUGGY] [BUGGY] if (!equals(x[i], y[i])) { return false; } } return true; } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	530	530	1	add	
15	[BUG] [BUGGY] return true; [FE] AssertionFailedError testArrayEquals [CONTEXT] return !((x == null) ^ (y == null)); } if (x.length != y.length) { return false; } for (int i = 0; i < x.length; ++i) { if (!equals(x[i], y[i])) { return false; } } [BUGGY] return true; [BUGGY] } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	534	534	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError testArrayEquals [CONTEXT] return !((x == null) ^ (y == null)); } if (x.length != y.length) { return false; } for (int i = 0; i < x.length; ++i) { if (!equals(x[i], y[i])) { return false; } } [BUGGY] [BUGGY] return true; } [CLASS] MathUtils OrderDirection [METHOD] equals [RETURN_TYPE] boolean  double[] x double[] y [VARIABLES] boolean double[] x y long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB short NS PS ZS int NAN_GAP i j k maxUlps n x y long SGN_MASK a b d result ret s xInt yInt OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	1.0	534	534	1	add	
18	[BUG] [BUGGY] private static final long[] FACTORIALS = new long[] { [FE] AssertionFailedError testArrayEquals [CONTEXT] [BUGGY] private static final long[] FACTORIALS = new long[] { [BUGGY] 1l,1l, 2l, 6l, 24l, 120l, 720l, 5040l, 40320l, 362880l,3628800l,39916800l, 479001600l, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l, 355687428096000l, 6402373705728000l, 121645100408832000l, 2432902008176640000l }; [CLASS] MathUtils OrderDirection  [VARIABLES] 	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.13018891098082389	75	75	1	replace	
19	[BUG] [BUGGY] [FE] AssertionFailedError testArrayEquals [CONTEXT] [BUGGY] [BUGGY] private static final long[] FACTORIALS = new long[] { 1l,1l, 2l, 6l, 24l, 120l, 720l, 5040l, 40320l, 362880l,3628800l,39916800l, 479001600l, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l, 355687428096000l, 6402373705728000l, 121645100408832000l, 2432902008176640000l }; [CLASS] MathUtils OrderDirection  [VARIABLES] 	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.13018891098082389	75	75	1	add	
20	[BUG] [BUGGY] super(); [FE] AssertionFailedError testArrayEquals [CONTEXT] private MathUtils() { [BUGGY] super(); [BUGGY] } [CLASS] MathUtils OrderDirection [METHOD] <init> [RETURN_TYPE] MathUtils()  [VARIABLES] boolean long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int NAN_GAP long SGN_MASK OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	88	88	1	replace	
21	[BUG] [BUGGY] [FE] AssertionFailedError testArrayEquals [CONTEXT] private MathUtils() { [BUGGY] [BUGGY] super(); } [CLASS] MathUtils OrderDirection [METHOD] <init> [RETURN_TYPE] MathUtils()  [VARIABLES] boolean long[] FACTORIALS double EPSILON SAFE_MIN TWO_PI byte NB PB ZB short NS PS ZS int NAN_GAP long SGN_MASK OrderDirection DECREASING INCREASING  	projects/Math63/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	88	88	1	add	
