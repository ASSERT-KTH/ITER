bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
2	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  strLen);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  strLen);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
3	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen));  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen));	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
4	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  = " ";  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  = " ";  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  = " ";	      StrBuilder.this.appendFixedWidthPadLeft    =    false;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
5	[BUG]  [BUGGY]  StrBuilder.this.setFixedWidthPadLeft(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.setFixedWidthPadLeft(true);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.setFixedWidthPadLeft(true);	      StrBuilder.this.appendFixedWidthPadLeft    =    false;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
6	[BUG]  [BUGGY]  String  str  =(obj!=  null?  getText()  :  obj.toString());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj!=  null?  getText()  :  obj.toString());  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj!=  null?  getText()  :  obj.toString());	      String    str    =(obj    ==    null?    getText()    :    obj.toString());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
7	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPad()  :  obj.toString());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPad()  :  obj.toString());  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getFixedWidthPad()  :  obj.toString());	      String    str    =(obj    ==    null?    getText()    :    obj.toString());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
8	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  this;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  this;  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  this;	      StrBuilder.this.appendFixedWidthPadLeft    =    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
9	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer();  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer();	      StrBuilder.this.appendFixedWidthPadLeft    =    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
10	[BUG]  [BUGGY]  String  str  =(obj!=  null?  getNullText()  :  obj.toString());  size  +=  strLen;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj!=  null?  getNullText()  :  obj.toString());  size  +=  strLen;  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj!=  null?  getNullText()  :  obj.toString());  size  +=  strLen;	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
11	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getWidth()  :  obj.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj  ==  null?  getWidth()  :  obj.toString();  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getWidth()  :  obj.toString();	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
12	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPad()  :  obj.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPad()  :  obj.toString();  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getFixedWidthPad()  :  obj.toString();	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
13	[BUG]  [BUGGY]  appendFixedWidthPadLeft(str,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  appendFixedWidthPadLeft(str,  width,  strLen);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	appendFixedWidthPadLeft(str,  width,  strLen);	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
14	[BUG]  [BUGGY]  AppendFixedWidthPadLeft(str,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  AppendFixedWidthPadLeft(str,  width,  strLen);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	AppendFixedWidthPadLeft(str,  width,  strLen);	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
15	[BUG]  [BUGGY]  if(obj!=  null)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(obj!=  null)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(obj!=  null)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
16	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPadLeft();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getFixedWidthPadLeft();  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getFixedWidthPadLeft();	      Object    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
17	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getFixedWidthPad();  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getFixedWidthPad();	      Object    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
18	[BUG]  [BUGGY]  Object  obj  =  getImmediateParentPointer();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getImmediateParentPointer();  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getImmediateParentPointer();	      Object    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
19	[BUG]  [BUGGY]  String  obj  =  getFixedWidthPadLeft();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String  obj  =  getFixedWidthPadLeft();  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  obj  =  getFixedWidthPadLeft();	      String    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
20	[BUG]  [BUGGY]  String  obj  =  getWidthText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  obj  =  getWidthText();  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  obj  =  getWidthText();	      String    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
21	[BUG]  [BUGGY]  String  obj  =  getFixedWidthPad();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  obj  =  getFixedWidthPad();  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  obj  =  getFixedWidthPad();	      String    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
22	[BUG]  [BUGGY]  if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  i++)  {  buffer[size  +  i]  =  size;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  i++)  {  buffer[size  +  i]  =  size;  }  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  i++)  {  buffer[size  +  i]  =  size;  }	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
23	[BUG]  [BUGGY]  if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  ++i)  {  buffer[size  +  i]  =  size;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  ++i)  {  buffer[size  +  i]  =  size;  }  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  ++i)  {  buffer[size  +  i]  =  size;  }	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
24	[BUG]  [BUGGY]  if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  i++)  {  buffer[size  +  i]  =  width;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  i++)  {  buffer[size  +  i]  =  width;  }  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  i++)  {  buffer[size  +  i]  =  width;  }	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
25	[BUG]  [BUGGY]  if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  i++)  {  buffer[size  +  i]  =  length;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  i++)  {  buffer[size  +  i]  =  length;  }  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  i++)  {  buffer[size  +  i]  =  length;  }	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
26	[BUG]  [BUGGY]  this.appendFixedWidthPadLeft  =  false;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  this.appendFixedWidthPadLeft  =  false;  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	this.appendFixedWidthPadLeft  =  false;	      StrBuilder.this.appendFixedWidthPadLeft    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
27	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
28	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
29	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  width);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
30	[BUG]  [BUGGY]  if(obj!=  null)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(obj!=  null)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(obj!=  null)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
31	[BUG]  [BUGGY]  String  str  =(obj!=  null?  getFixedWidthPadLeft()  :  obj.toString());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj!=  null?  getFixedWidthPadLeft()  :  obj.toString());  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj!=  null?  getFixedWidthPadLeft()  :  obj.toString());	  String    str    =    (obj    ==    null?    getFixedWidthPadLeft()    :    obj.toString());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
32	[BUG]  [BUGGY]  String  str  =  (obj!=  null?  getWidth()  :  obj.toString());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String  str  =  (obj!=  null?  getWidth()  :  obj.toString());  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =  (obj!=  null?  getWidth()  :  obj.toString());	  String    str    =    (obj    ==    null?    getWidth()    :    obj.toString());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
33	[BUG]  [BUGGY]  if(strLen  >  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(strLen  >  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
34	[BUG]  [BUGGY]  if(size  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(size  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(size  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
35	[BUG]  [BUGGY]  if(width  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(width  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
36	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPadLeft()  :  obj.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPadLeft()  :  obj.toString();  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getFixedWidthPadLeft()  :  obj.toString();	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
37	[BUG]  [BUGGY]  String  str  =(obj!=  null?  getNullText()  :  obj.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj!=  null?  getNullText()  :  obj.toString();  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj!=  null?  getNullText()  :  obj.toString();	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
38	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  ||  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);	      StrBuilder.this.appendFixedWidthPadLeft    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
39	[BUG]  [BUGGY]  Object  obj  =  getSource();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getSource();  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getSource();	      Object    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
40	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidth()  :  obj.toString());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj  ==  null?  getFixedWidth()  :  obj.toString());  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getFixedWidth()  :  obj.toString());	      String    str    =(obj    ==    null?    getText()    :    obj.toString());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
41	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(false);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(false);	      StrBuilder.this.appendFixedWidthPadLeft    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
42	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  |=  width;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  |=  width;  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  |=  width;	      StrBuilder.this.appendFixedWidthPadLeft    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
43	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  str);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  str);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  str);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
44	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(w,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(w,  width);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(w,  width);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
45	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width));  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width));	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
46	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(true);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(true);	      StrBuilder.this.appendFixedWidthPadLeft    =    false;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
47	[BUG]  [BUGGY]  char  obj  =  getNullText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  char  obj  =  getNullText();  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	char  obj  =  getNullText();	      String    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
48	[BUG]  [BUGGY]  if(strLen  ==  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  ==  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(strLen  ==  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
49	[BUG]  [BUGGY]  if(strLen  >=  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >=  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(strLen  >=  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
50	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft();  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft();	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
