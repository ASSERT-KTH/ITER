bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  obj  =  getFixedWidthPad().toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  obj  =  getFixedWidthPad().toString();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  obj  =  getFixedWidthPad().toString();	  String    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
2	[BUG]  [BUGGY]  String  obj  =  getFixedWidthPad().getText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  obj  =  getFixedWidthPad().getText();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  obj  =  getFixedWidthPad().getText();	  String    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
3	[BUG]  [BUGGY]  Object  obj  =  getSource().toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getSource().toString();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getSource().toString();	  Object    obj    =    getSource();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
4	[BUG]  [BUGGY]  Object  obj  =  getSource().getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getSource().getValue();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getSource().getValue();	  Object    obj    =    getSource();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
5	[BUG]  [BUGGY]  Object  obj  =  this.getSource();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  this.getSource();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  this.getSource();	  Object    obj    =    getSource();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
6	[BUG]  [BUGGY]  Annotations.this.appendFixedWidthPadLeft  =  false;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Annotations.this.appendFixedWidthPadLeft  =  false;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Annotations.this.appendFixedWidthPadLeft  =  false;	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    size;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
7	[BUG]  [BUGGY]  Annotations.this.appendFixedWidthPadLeft  =  true;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Annotations.this.appendFixedWidthPadLeft  =  true;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Annotations.this.appendFixedWidthPadLeft  =  true;	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    size;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
8	[BUG]  [BUGGY]  Annotations.this.appendFixedWidthPadLeft(null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Annotations.this.appendFixedWidthPadLeft(null);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Annotations.this.appendFixedWidthPadLeft(null);	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    size;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
9	[BUG]  [BUGGY]  char  obj  =  getFixedWidthPadLeft();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  char  obj  =  getFixedWidthPadLeft();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	char  obj  =  getFixedWidthPadLeft();	  char    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
10	[BUG]  [BUGGY]  char  obj  =  getWidthText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  char  obj  =  getWidthText();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	char  obj  =  getWidthText();	  char    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
11	[BUG]  [BUGGY]  String  obj  =  getFixedWidthPadLeft()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  obj  =  getFixedWidthPadLeft()  +  1;  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  obj  =  getFixedWidthPadLeft()  +  1;	  String    obj    =    getFixedWidthPadLeft();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
12	[BUG]  [BUGGY]  safeGet(str.getChars(0,  strLen,  buffer,  size  +  padLen));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(str.getChars(0,  strLen,  buffer,  size  +  padLen));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	safeGet(str.getChars(0,  strLen,  buffer,  size  +  padLen));	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    width;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
13	[BUG]  [BUGGY]  safeGet(str.getChars(0,  strLen,  buffer,  size));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGet(str.getChars(0,  strLen,  buffer,  size));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	safeGet(str.getChars(0,  strLen,  buffer,  size));	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    width;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
14	[BUG]  [BUGGY]  safeGet(str.getChars(0,  strLen,  buffer,  size  -  padLen));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeGet(str.getChars(0,  strLen,  buffer,  size  -  padLen));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	safeGet(str.getChars(0,  strLen,  buffer,  size  -  padLen));	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    width;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
15	[BUG]  [BUGGY]  String  str  =(obj!=  null?  getFixedWidthPad()  :  obj.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj!=  null?  getFixedWidthPad()  :  obj.toString();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj!=  null?  getFixedWidthPad()  :  obj.toString();	  String    str    =(obj    ==    null?    getFixedWidthPad()    :    obj.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
16	[BUG]  [BUGGY]  String  str  =(obj!=  null?  getFixedWidthPad()  :  obj.toString());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj!=  null?  getFixedWidthPad()  :  obj.toString());  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj!=  null?  getFixedWidthPad()  :  obj.toString());	  String    str    =(obj    ==    null?    getFixedWidthPad()    :    obj.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
17	[BUG]  [BUGGY]  String  str  =(obj!=  null?  getFixedWidth()  :  obj.toString());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj!=  null?  getFixedWidth()  :  obj.toString());  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj!=  null?  getFixedWidth()  :  obj.toString());	  String    str    =(obj    ==    null?    getFixedWidth()    :    obj.toString());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
18	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedSize()  :  obj.toString());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getFixedSize()  :  obj.toString());  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getFixedSize()  :  obj.toString());	  String    str    =(obj    ==    null?    getFixedWidth()    :    obj.toString());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
19	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  &&  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  &&  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  &&  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);	  StrBuilder.this.appendFixedWidthPadLeft    ||    this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
20	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING,  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  ||  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING,  width);	  StrBuilder.this.appendFixedWidthPadLeft    ||    this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
21	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING,  size);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  ||  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING,  size);	  StrBuilder.this.appendFixedWidthPadLeft    ||    this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
22	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size];  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size];	  StrBuilder.this.appendFixedWidthPadLeft    =   "   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
23	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPaint()  :  obj.toString());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPaint()  :  obj.toString());  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getFixedWidthPaint()  :  obj.toString());	  String    str    =(obj    ==    null?    getFixedWidthPad()    :    obj.toString());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
24	[BUG]  [BUGGY]  AppendFixedWidthPadLeft(str,  width,  strLen,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  AppendFixedWidthPadLeft(str,  width,  strLen,  buffer);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	AppendFixedWidthPadLeft(str,  width,  strLen,  buffer);	  AppendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
25	[BUG]  [BUGGY]  AppendFixedWidthPadLeft(str,  width,  buffer,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  AppendFixedWidthPadLeft(str,  width,  buffer,  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	AppendFixedWidthPadLeft(str,  width,  buffer,  strLen);	  AppendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
26	[BUG]  [BUGGY]  AppendFixedWidthPadLeft(str,  width,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  AppendFixedWidthPadLeft(str,  width,  size);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	AppendFixedWidthPadLeft(str,  width,  size);	  AppendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
27	[BUG]  [BUGGY]  AppendFixedWidthPadLeft(buffer,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  AppendFixedWidthPadLeft(buffer,  width,  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	AppendFixedWidthPadLeft(buffer,  width,  strLen);	  AppendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
28	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPadLeft()  :  obj.toString());  size  +=  strLen;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPadLeft()  :  obj.toString());  size  +=  strLen;  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getFixedWidthPadLeft()  :  obj.toString());  size  +=  strLen;	  if(obj!=    null)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
29	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  |=  width  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  |=  width  -  1;  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  |=  width  -  1;	  StrBuilder.this.appendFixedWidthPadLeft    |=    width;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
30	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  |=  padChar;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  |=  padChar;  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  |=  padChar;	  StrBuilder.this.appendFixedWidthPadLeft    |=    width;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
31	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  |=  width  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  |=  width  +  1;  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  |=  width  +  1;	  StrBuilder.this.appendFixedWidthPadLeft    |=    width;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
32	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  &=  width;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  &=  width;  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  &=  width;	  StrBuilder.this.appendFixedWidthPadLeft    |=    width;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
33	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(false,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(false,  true);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(false,  true);	  StrBuilder.this.appendFixedWidthPadLeft(true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
34	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(false,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(false,  false);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(false,  false);	  StrBuilder.this.appendFixedWidthPadLeft(true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
35	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  buffer);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  buffer);	  StrBuilder.this.appendFixedWidthPadLeft(buffer);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
36	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  buffer);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(size,  buffer);	  StrBuilder.this.appendFixedWidthPadLeft(buffer);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
37	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(true,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(true,  false);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(true,  false);	  StrBuilder.this.appendFixedWidthPadLeft(false);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
38	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(true,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(true,  true);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(true,  true);	  StrBuilder.this.appendFixedWidthPadLeft(false);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
39	[BUG]  [BUGGY]  appendFixedWidthPadLeft(str,  width,  strLen,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  appendFixedWidthPadLeft(str,  width,  strLen,  buffer);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	appendFixedWidthPadLeft(str,  width,  strLen,  buffer);	  appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
40	[BUG]  [BUGGY]  appendFixedWidthPadLeft(str,  width,  buffer,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  appendFixedWidthPadLeft(str,  width,  buffer,  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	appendFixedWidthPadLeft(str,  width,  buffer,  strLen);	  appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
41	[BUG]  [BUGGY]  appendFixedWidthPadLeft(buffer,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  appendFixedWidthPadLeft(buffer,  width,  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	appendFixedWidthPadLeft(buffer,  width,  strLen);	  appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
42	[BUG]  [BUGGY]  appendFixedWidthPadLeft(str,  width,  strLen  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  appendFixedWidthPadLeft(str,  width,  strLen  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	appendFixedWidthPadLeft(str,  width,  strLen  +  1);	  appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
43	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPadLeft(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPadLeft(0);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getFixedWidthPadLeft(0);	  Object    obj    =    getFixedWidthPadLeft();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
44	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPadLeft(size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPadLeft(size);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getFixedWidthPadLeft(size);	  Object    obj    =    getFixedWidthPadLeft();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
45	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  str);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  str);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(size,  str);	  StrBuilder.this.appendFixedWidthPadLeft(width,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
46	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  buffer);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  buffer);	  StrBuilder.this.appendFixedWidthPadLeft(width,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
47	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width,  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  width,  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(width,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
48	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(size);	  StrBuilder.this.appendFixedWidthPadLeft();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
49	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  buffer);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width,  buffer);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
50	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width,  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
51	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  strLen,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  strLen,  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  strLen,  width);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
52	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(size,  width);	  StrBuilder.this.appendFixedWidthPadLeft(w,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
53	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(w,  width,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(w,  width,  buffer);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(w,  width,  buffer);	  StrBuilder.this.appendFixedWidthPadLeft(w,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
54	[BUG]  [BUGGY]  AppendFixedWidthPadLeft.append(str,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  AppendFixedWidthPadLeft.append(str,  width,  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	AppendFixedWidthPadLeft.append(str,  width,  strLen);	  if(strLen    >=    width)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
55	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
56	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  buffer.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  buffer.length);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  buffer.length);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
57	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  size);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  size);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
58	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  padChar);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  padChar);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  padChar);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
59	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(32);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(32);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(32);	  StrBuilder.this.appendFixedWidthPadLeft    =    new    StringBuffer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
60	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(16);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(16);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(16);	  StrBuilder.this.appendFixedWidthPadLeft    =    new    StringBuffer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
61	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(size);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(size);	  StrBuilder.this.appendFixedWidthPadLeft    =    new    StringBuffer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
62	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(64);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(64);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(64);	  StrBuilder.this.appendFixedWidthPadLeft    =    new    StringBuffer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
63	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(strLen,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(strLen,  buffer);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(strLen,  buffer);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
64	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  size);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  size);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
65	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(size));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(size));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(size));	  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
66	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(char));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(char));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(char));	  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
67	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(length));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(length));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(length));	  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
68	[BUG]  [BUGGY]  this.appendFixedWidthPadLeft  =  true;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.appendFixedWidthPadLeft  =  true;  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	this.appendFixedWidthPadLeft  =  true;	  this.appendFixedWidthPadLeft    =    false;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
69	[BUG]  [BUGGY]  this.appendFixedWidthPadLeft  =  null;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.appendFixedWidthPadLeft  =  null;  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	this.appendFixedWidthPadLeft  =  null;	  this.appendFixedWidthPadLeft    =    false;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
70	[BUG]  [BUGGY]  this.appendFixedWidthPadLeft  = " ";  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.appendFixedWidthPadLeft  = " ";  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	this.appendFixedWidthPadLeft  = " ";	  this.appendFixedWidthPadLeft    =    false;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
71	[BUG]  [BUGGY]  if(strLen  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(strLen  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }	  if(size    ==    0)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
72	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad().toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPad().toString();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getFixedWidthPad().toString();	  Object    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
73	[BUG]  [BUGGY]  Object  obj  =  getFixedWidth();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidth();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getFixedWidth();	  Object    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
74	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen  +  1));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen  +  1));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen  +  1));	  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
75	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen  -  width));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen  -  width));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen  -  width));	  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
76	[BUG]  [BUGGY]  safeAdd(str.getChars(0,  strLen,  buffer,  size  +  padLen));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeAdd(str.getChars(0,  strLen,  buffer,  size  +  padLen));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	safeAdd(str.getChars(0,  strLen,  buffer,  size  +  padLen));	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    length;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
77	[BUG]  [BUGGY]  safeAdd(str.getChars(0,  strLen,  buffer,  size));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeAdd(str.getChars(0,  strLen,  buffer,  size));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	safeAdd(str.getChars(0,  strLen,  buffer,  size));	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    length;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
78	[BUG]  [BUGGY]  safeAdd(str.getChars(0,  width,  buffer,  size  +  padLen));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeAdd(str.getChars(0,  width,  buffer,  size  +  padLen));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	safeAdd(str.getChars(0,  width,  buffer,  size  +  padLen));	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    length;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
79	[BUG]  [BUGGY]  String  str  =(obj!=  null?  getWidth()  :  obj.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj!=  null?  getWidth()  :  obj.toString();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj!=  null?  getWidth()  :  obj.toString();	  String    str    =(obj    ==    null?    getWidth()    :    obj.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
80	[BUG]  [BUGGY]  String  str  =(obj!=  null?  getFixedWidthPadLeft()  :  obj.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj!=  null?  getFixedWidthPadLeft()  :  obj.toString();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj!=  null?  getFixedWidthPadLeft()  :  obj.toString();	  String    str    =(obj    ==    null?    getFixedWidthPadLeft()    :    obj.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
81	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPaint()  :  obj.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPaint()  :  obj.toString();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getFixedWidthPaint()  :  obj.toString();	  String    str    =(obj    ==    null?    getFixedWidthPadLeft()    :    obj.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
82	[BUG]  [BUGGY]  Object  obj  =  getGenericParentPointer();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getGenericParentPointer();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getGenericParentPointer();	  Object    obj    =    getImmediateParentPointer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
83	[BUG]  [BUGGY]  if(size  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(size  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }	  if(width    >    0)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
84	[BUG]  [BUGGY]  StrBuilder.this.setFixedWidthPadLeft(false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.setFixedWidthPadLeft(false);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.setFixedWidthPadLeft(false);	  StrBuilder.this.setFixedWidthPadLeft(true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
85	[BUG]  [BUGGY]  StrBuilder.this.setFixedWidthPadLeft(false,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.setFixedWidthPadLeft(false,  false);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.setFixedWidthPadLeft(false,  false);	  StrBuilder.this.setFixedWidthPadLeft(true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
86	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  width);	  StrBuilder.this.appendFixedWidthPadLeft(width,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
87	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(0,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(0,  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(0,  width);	  StrBuilder.this.appendFixedWidthPadLeft(width,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
88	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  buffer,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  buffer,  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  buffer,  width);	  StrBuilder.this.appendFixedWidthPadLeft(width,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
89	[BUG]  [BUGGY]  String  obj  =  getFixedWidthText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  obj  =  getFixedWidthText();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  obj  =  getFixedWidthText();	  String    obj    =    getWidthText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
90	[BUG]  [BUGGY]  Object  obj  =  getWidthText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getWidthText();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getWidthText();	  String    obj    =    getWidthText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
91	[BUG]  [BUGGY]  String  obj  =  getWidthText()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  obj  =  getWidthText()  +  1;  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  obj  =  getWidthText()  +  1;	  String    obj    =    getWidthText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
92	[BUG]  [BUGGY]  if(obj  ==  null)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(obj  ==  null)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(obj  ==  null)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }	  if(obj!=    null)    {    String    str    =    obj.toString();    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
93	[BUG]  [BUGGY]  if(str!=  null)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(str!=  null)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(str!=  null)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }	  if(obj!=    null)    {    String    str    =    obj.toString();    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
94	[BUG]  [BUGGY]  if(str  ==  null)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(str  ==  null)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(str  ==  null)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }	  if(obj!=    null)    {    String    str    =    obj.toString();    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
95	[BUG]  [BUGGY]  if(width  >=  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(width  >=  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(width  >=  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }	  if(width    >    0)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
96	[BUG]  [BUGGY]  Object  obj  =  getImmediateParentPointer(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getImmediateParentPointer(0);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getImmediateParentPointer(0);	  Object    obj    =    getImmediateParentPointer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
97	[BUG]  [BUGGY]  Object  obj  =  getImmediateParentPointer(-1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getImmediateParentPointer(-1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getImmediateParentPointer(-1);	  Object    obj    =    getImmediateParentPointer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
98	[BUG]  [BUGGY]  if(strLen  >  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(strLen  >  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft	  if(strLen    ==    width)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
99	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(0);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(0);	  StrBuilder.this.appendFixedWidthPadLeft(false);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
100	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPadding()  :  obj.toString());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPadding()  :  obj.toString());  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getFixedWidthPadding()  :  obj.toString());	  String    str    =(obj    ==    null?    getFixedWidthPad()    :    obj.toString());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
101	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  +  strLen));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  +  strLen));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  +  strLen));	  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
102	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen  +  width));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen  +  width));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen  +  width));	  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
103	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  -  width));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  -  width));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  -  width));	  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
104	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(source);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(source);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(source);	  StrBuilder.this.appendFixedWidthPadLeft(buffer);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
105	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING));	  StrBuilder.this.appendFixedWidthPadLeft    ||    this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
106	[BUG]  [BUGGY]  if(size  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(size  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(size  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }	  if(obj!=    null)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
107	[BUG]  [BUGGY]  if(strLen  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(strLen  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }	  if(obj!=    null)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
108	[BUG]  [BUGGY]  if(strLen  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(strLen  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }	  if(obj!=    null)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
109	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(true,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(true,  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(true,  width);	  StrBuilder.this.appendFixedWidthPadLeft(true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
110	[BUG]  [BUGGY]  if(strLen  >  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(strLen  >  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str	  if(strLen    >=    width)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
111	[BUG]  [BUGGY]  safeGet(str.getChars(),  width));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(str.getChars(),  width));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	safeGet(str.getChars(),  width));	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    width;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
112	[BUG]  [BUGGY]  safeGet(str.getChars()));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGet(str.getChars()));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	safeGet(str.getChars()));	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    width;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
113	[BUG]  [BUGGY]  safeGet(str.getChars());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeGet(str.getChars());  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	safeGet(str.getChars());	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    width;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
114	[BUG]  [BUGGY]  if(size  ==  0)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(size  ==  0)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(size  ==  0)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }	  if(obj!=    null)    {    String    str    =    obj.toString();    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
115	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  width  +  1);	  StrBuilder.this.appendFixedWidthPadLeft(width,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
116	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  width  -  1);	  StrBuilder.this.appendFixedWidthPadLeft(width,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
117	[BUG]  [BUGGY]  appendFixedWidthPadLeft(str,  width,  padChar);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  appendFixedWidthPadLeft(str,  width,  padChar);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	appendFixedWidthPadLeft(str,  width,  padChar);	  appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
118	[BUG]  [BUGGY]  appendFixedWidthPadLeft(str,  width,  padLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  appendFixedWidthPadLeft(str,  width,  padLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	appendFixedWidthPadLeft(str,  width,  padLen);	  appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
119	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width  -  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width  -  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  width  -  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(width,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
120	[BUG]  [BUGGY]  String  obj  =  getWidthText().toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  obj  =  getWidthText().toString();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  obj  =  getWidthText().toString();	  String    obj    =    getWidthText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
121	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  padChar);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  padChar);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width,  padChar);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
122	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedText()  :  obj.toString());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getFixedText()  :  obj.toString());  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getFixedText()  :  obj.toString());	  String    str    =(obj    ==    null?    getFixedWidth()    :    obj.toString());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
123	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  -=  width;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  -=  width;  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  -=  width;	  StrBuilder.this.appendFixedWidthPadLeft    |=    width;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
124	[BUG]  [BUGGY]  String  obj  =  getFixedWidthPad(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  obj  =  getFixedWidthPad(true);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  obj  =  getFixedWidthPad(true);	  String    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
125	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPad(true);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getFixedWidthPad(true);	  Object    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
126	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPad(0);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getFixedWidthPad(0);	  Object    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
127	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad(size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPad(size);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getFixedWidthPad(size);	  Object    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
128	[BUG]  [BUGGY]  if(width  >  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(width  >  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }	  if(strLen    >    width)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
129	[BUG]  [BUGGY]  if(width  >  strLen)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  strLen)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(width  >  strLen)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }	  if(strLen    >    width)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
130	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width)+  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width)+  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width)+  1);	  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
131	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  +  1));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  +  1));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  +  1));	  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
132	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  -  1));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  -  1));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  -  1));	  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
133	[BUG]  [BUGGY]  combins.add(buffer,  width  -  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  combins.add(buffer,  width  -  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	combins.add(buffer,  width  -  width);	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    ++i)    {    buffer[size    +    i]    =    size;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
134	[BUG]  [BUGGY]  AppendFixedWidthPadLeft(str,  width,  padChar);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  AppendFixedWidthPadLeft(str,  width,  padChar);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	AppendFixedWidthPadLeft(str,  width,  padChar);	  AppendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
135	[BUG]  [BUGGY]  safeSegments.add(buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeSegments.add(buffer);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	safeSegments.add(buffer);	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    length;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
136	[BUG]  [BUGGY]  safeSegments.add(str);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeSegments.add(str);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	safeSegments.add(str);	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    length;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
137	[BUG]  [BUGGY]  Object  obj  =  findSource();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  findSource();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  findSource();	  Object    obj    =    getSource();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
138	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  width);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
139	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
140	[BUG]  [BUGGY]  String  obj  =  getFixedWidthPadLeft(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  obj  =  getFixedWidthPadLeft(true);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  obj  =  getFixedWidthPadLeft(true);	  String    obj    =    getFixedWidthPadLeft();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
141	[BUG]  [BUGGY]  String  obj  =  getFixedWidthPadLeft(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  obj  =  getFixedWidthPadLeft(0);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  obj  =  getFixedWidthPadLeft(0);	  String    obj    =    getFixedWidthPadLeft();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
142	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPadding()  :  obj.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPadding()  :  obj.toString();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getFixedWidthPadding()  :  obj.toString();	  String    str    =(obj    ==    null?    getFixedWidthPad()    :    obj.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
143	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPadLeft(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPadLeft(true);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getFixedWidthPadLeft(true);	  Object    obj    =    getFixedWidthPadLeft();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
144	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPadLeft(source);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPadLeft(source);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getFixedWidthPadLeft(source);	  Object    obj    =    getFixedWidthPadLeft();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
145	[BUG]  [BUGGY]  if(length  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(length  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(length  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }	  if(size    ==    0)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
146	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  ' "';  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  ' "';  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  ' "';	  StrBuilder.this.appendFixedWidthPadLeft    =   "   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
147	[BUG]  [BUGGY]  StrBuilder.this.setFixedWidthPadLeft(true,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.setFixedWidthPadLeft(true,  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.setFixedWidthPadLeft(true,  width);	  StrBuilder.this.setFixedWidthPadLeft(true);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
148	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  w);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  w);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  w);	  StrBuilder.this.appendFixedWidthPadLeft(w,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
149	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(w,  width  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(w,  width  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(w,  width  -  1);	  StrBuilder.this.appendFixedWidthPadLeft(w,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
150	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  -  strLen));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  -  strLen));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width  -  strLen));	  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
151	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width,  strLen));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width,  strLen));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(width,  strLen));	  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
152	[BUG]  [BUGGY]  char  obj  =  getFixedWidthPad();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  obj  =  getFixedWidthPad();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	char  obj  =  getFixedWidthPad();	  String    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
153	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(40);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(40);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer(40);	  StrBuilder.this.appendFixedWidthPadLeft    =    new    StringBuffer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
154	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  TextBuffer();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  TextBuffer();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  TextBuffer();	  StrBuilder.this.appendFixedWidthPadLeft    =    new    StringBuffer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
155	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  buffer,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  buffer,  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  buffer,  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
156	[BUG]  [BUGGY]  Object  obj  =  getEndSource();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getEndSource();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getEndSource();	  Object    obj    =    getSource();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
157	[BUG]  [BUGGY]  if(width  >  0)  {  StrBuilder.this.appendFixedWidthPadLeft(false);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0)  {  StrBuilder.this.appendFixedWidthPadLeft(false);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(width  >  0)  {  StrBuilder.this.appendFixedWidthPadLeft(false);  }	  StrBuilder.this.appendFixedWidthPadLeft(false);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
158	[BUG]  [BUGGY]  if(width  >  0)  {  StrBuilder.this.appendFixedWidthPadLeft(false);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0)  {  StrBuilder.this.appendFixedWidthPadLeft(false);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(width  >  0)  {  StrBuilder.this.appendFixedWidthPadLeft(false);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  StrBuilder.this.appendFixedWidthPadLeft(false);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
159	[BUG]  [BUGGY]  if(size  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(size  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }	  if(obj!=    null)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
160	[BUG]  [BUGGY]  if(width  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(width  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }	  if(obj!=    null)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
161	[BUG]  [BUGGY]  if(strLen  ==  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  ==  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(strLen  ==  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  }	  if(obj!=    null)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
162	[BUG]  [BUGGY]  if(strLen  <  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  <  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(strLen  <  width)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  appendFixedWidthPadLeft(str,  width,  strLen);  }	  if(strLen    >    width)    {    String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
163	[BUG]  [BUGGY]  appendFixedWidthPadLeft(strLen,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  appendFixedWidthPadLeft(strLen,  width,  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	appendFixedWidthPadLeft(strLen,  width,  strLen);	  appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
164	[BUG]  [BUGGY]  nisipIgnoreWhitespace(String.valueOf(str.charAt(0)));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  nisipIgnoreWhitespace(String.valueOf(str.charAt(0)));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	nisipIgnoreWhitespace(String.valueOf(str.charAt(0)));	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    length;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
165	[BUG]  [BUGGY]  nisipIgnoreWhitespace(String.valueOf(str.getValue()));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  nisipIgnoreWhitespace(String.valueOf(str.getValue()));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	nisipIgnoreWhitespace(String.valueOf(str.getValue()));	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    length;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
166	[BUG]  [BUGGY]  nisipIgnoreWhitespace(String.valueOf(str.charAt(i)));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  nisipIgnoreWhitespace(String.valueOf(str.charAt(i)));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	nisipIgnoreWhitespace(String.valueOf(str.charAt(i)));	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    i++)    {    buffer[size    +    i]    =    length;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
167	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPath()  :  obj.toString());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPath()  :  obj.toString());  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getFixedWidthPath()  :  obj.toString());	  String    str    =(obj    ==    null?    getFixedWidthPad()    :    obj.toString());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
168	[BUG]  [BUGGY]  AppendFixedWidthPadLeft(str,  width,  strLen,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  AppendFixedWidthPadLeft(str,  width,  strLen,  size);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	AppendFixedWidthPadLeft(str,  width,  strLen,  size);	  AppendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
169	[BUG]  [BUGGY]  AppendFixedWidthPadLeft(str,  width,  strLen  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  AppendFixedWidthPadLeft(str,  width,  strLen  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	AppendFixedWidthPadLeft(str,  width,  strLen  +  1);	  AppendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
170	[BUG]  [BUGGY]  AppendFixedWidthPadLeft(str,  width,  strLen,  charEncoding);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  AppendFixedWidthPadLeft(str,  width,  strLen,  charEncoding);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	AppendFixedWidthPadLeft(str,  width,  strLen,  charEncoding);	  AppendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
171	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPadLeft(width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPadLeft(width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getFixedWidthPadLeft(width);	  Object    obj    =    getFixedWidthPadLeft();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
172	[BUG]  [BUGGY]  String  obj  =  getFixedWidthPadLeft(width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  obj  =  getFixedWidthPadLeft(width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  obj  =  getFixedWidthPadLeft(width);	  String    obj    =    getFixedWidthPadLeft();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
173	[BUG]  [BUGGY]  if(str!=  null)  {  int  width  =  str.length();  for(int  i  =  0;  i  <  width;  ++i)  {  buffer[size  +  i]  =  width;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(str!=  null)  {  int  width  =  str.length();  for(int  i  =  0;  i  <  width;  ++i)  {  buffer[size  +  i]  =  width;  }  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(str!=  null)  {  int  width  =  str.length();  for(int  i  =  0;  i  <  width;  ++i)  {  buffer[size  +  i]  =  width;  }	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    ++i)    {    buffer[size    +    i]    =    size;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
174	[BUG]  [BUGGY]  if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  ++i)  {  buffer[size  +  i]  =  padChar;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  ++i)  {  buffer[size  +  i]  =  padChar;  }  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(str!=  null)  {  int  size  =  str.length();  for(int  i  =  0;  i  <  size;  ++i)  {  buffer[size  +  i]  =  padChar;  }	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    ++i)    {    buffer[size    +    i]    =    size;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
175	[BUG]  [BUGGY]  if(str!=  null)  {  int  width  =  str.length();  for(int  i  =  0;  i  <  width;  ++i)  {  buffer[size  +  i]  =  padChar;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(str!=  null)  {  int  width  =  str.length();  for(int  i  =  0;  i  <  width;  ++i)  {  buffer[size  +  i]  =  padChar;  }  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(str!=  null)  {  int  width  =  str.length();  for(int  i  =  0;  i  <  width;  ++i)  {  buffer[size  +  i]  =  padChar;  }	  if(str!=    null)    {    int    size    =    str.length();    for(int    i    =    0;    i    <    size;    ++i)    {    buffer[size    +    i]    =    size;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
176	[BUG]  [BUGGY]  if(strLen  ==  width)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  ==  width)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(strLen  ==  width)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }	  if(obj!=    null)    {    String    str    =    obj.toString();    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
177	[BUG]  [BUGGY]  if(strLen  <  width)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  <  width)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	if(strLen  <  width)  {  String  str  =  obj.toString();  appendFixedWidthPadLeft(str,  width,  strLen);  }	  if(obj!=    null)    {    String    str    =    obj.toString();    appendFixedWidthPadLeft(str,    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
178	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad(width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPad(width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  getFixedWidthPad(width);	  Object    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
179	[BUG]  [BUGGY]  Object  obj  =  createImmediateParentPointer();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  createImmediateParentPointer();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  createImmediateParentPointer();	  Object    obj    =    getImmediateParentPointer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
180	[BUG]  [BUGGY]  Object  obj  =  super.getImmediateParentPointer();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  super.getImmediateParentPointer();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	Object  obj  =  super.getImmediateParentPointer();	  Object    obj    =    getImmediateParentPointer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
181	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  1);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
182	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPath()  :  obj.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPath()  :  obj.toString();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	String  str  =(obj  ==  null?  getFixedWidthPath()  :  obj.toString();	  String    str    =(obj    ==    null?    getFixedWidthPad()    :    obj.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
183	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(this,  width,  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(this,  width,  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(this,  width,  this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);	  StrBuilder.this.appendFixedWidthPadLeft    ||    this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
184	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(this);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(this);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(this);	  StrBuilder.this.appendFixedWidthPadLeft    ||    this.isEnabled(Feature.QUOTE_FIXED_WIDTH_PADDING);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	38	None	replace
185	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(width,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
186	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width  -  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width  -  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width  -  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
187	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width  -  1,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width  -  1,  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width  -  1,  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
188	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  str.getChars(0,  strLen,  buffer,  size  +  padLen);  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1185	1185	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width  -  1);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
