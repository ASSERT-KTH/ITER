bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(strLen  >  0)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(strLen  >  0)  {	  if(size    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  if(length  >  0)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(length  >  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(length  >  0)  {	  if(size    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  if(strLen  <  width)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  <  width)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(strLen  <  width)  {	  if(size    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  if(size  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(size  ==  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(size  ==  0)  {	  if(width    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
5	[BUG]  [BUGGY]  if(strLen  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  ==  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(strLen  ==  0)  {	  if(width    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
6	[BUG]  [BUGGY]  if(strLen  ==  width)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  ==  width)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(strLen  ==  width)  {	  if(width    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
7	[BUG]  [BUGGY]  if(strLen  >  0  ||  size  >  width)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >  0  ||  size  >  width)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(strLen  >  0  ||  size  >  width)  {	  if(width    >    0    ||    size    >    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  if(size  >  0  ||  width  >  strLen)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(size  >  0  ||  width  >  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(size  >  0  ||  width  >  strLen)  {	  if(width    >    0    ||    size    >    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  if(strLen  >  0  ||  width  >  strLen)  {  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >  0  ||  width  >  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(strLen  >  0  ||  width  >  strLen)  {	  if(width    >    0    ||    size    >    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  if(strLen  >  0  ||  size  >  strLen)  {  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >  0  ||  size  >  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(strLen  >  0  ||  size  >  strLen)  {	  if(width    >    0    ||    size    >    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  if(size  >  0  ||  width  >  getWidth())  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(size  >  0  ||  width  >  getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(size  >  0  ||  width  >  getWidth())  {	  if(width    >    0    ||    size    >    getWidth())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  if(width  <  0  ||  size  >  getWidth())  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(width  <  0  ||  size  >  getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  <  0  ||  size  >  getWidth())  {	  if(width    >    0    ||    size    >    getWidth())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  if(width  >  0  ||  buffer.length  >  getWidth())  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  buffer.length  >  getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >  0  ||  buffer.length  >  getWidth())  {	  if(width    >    0    ||    size    >    getWidth())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
14	[BUG]  [BUGGY]  if(size  >  0  ||  size  >  getWidth())  {  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(size  >  0  ||  size  >  getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(size  >  0  ||  size  >  getWidth())  {	  if(width    >    0    ||    size    >    getWidth())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  if(size  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(size  <  =  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(size  <  =  0)  {	  if(width    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
16	[BUG]  [BUGGY]  if(strLen  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  <  =  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(strLen  <  =  0)  {	  if(width    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
17	[BUG]  [BUGGY]  if(size  <  =  0  ||  width  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(size  <  =  0  ||  width  <  =  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(size  <  =  0  ||  width  <  =  0)  {	  if(width    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
18	[BUG]  [BUGGY]  if(length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(length  <  =  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(length  <  =  0)  {	  if(width    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
19	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getWidth()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj  ==  null?  getWidth()  :  obj.toString());  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	String  str  =(obj  ==  null?  getWidth()  :  obj.toString());	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    ensureCapacity(size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  String  str  =(obj!=  null?  getNullText()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj!=  null?  getNullText()  :  obj.toString());  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	String  str  =(obj!=  null?  getNullText()  :  obj.toString());	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    ensureCapacity(size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  String  str  =(obj!=  null?  getWidth()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj!=  null?  getWidth()  :  obj.toString());  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	String  str  =(obj!=  null?  getWidth()  :  obj.toString());	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    ensureCapacity(size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeAccess(strLen)  {  ensureCapacity(size  +  strLen);  }	      if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  safeAccess(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  safeAccess(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeAccess(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }	      if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  safeAccess(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  safeAccess(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeAccess(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }	      if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
25	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ensureCapacity(size  +  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	ensureCapacity(size  +  strLen);	      if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
26	[BUG]  [BUGGY]  if(strLen  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >=  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(strLen  >=  0)  {	  if(width    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
27	[BUG]  [BUGGY]  if(size  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(size  >=  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(size  >=  0)  {	  if(width    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
28	[BUG]  [BUGGY]  safeGet(strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  safeGet(strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeGet(strLen)  {  ensureCapacity(size  +  strLen);  }	      if(str    ==    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
29	[BUG]  [BUGGY]  safePadding(size  +  strLen);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safePadding(size  +  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safePadding(size  +  strLen);	      if(str    ==    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
30	[BUG]  [BUGGY]  safeGet(strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeGet(strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeGet(strLen)  {  ensureCapacity(size  +  width);  }	      if(str    ==    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
31	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer);	      StrBuilder.this.appendFixedWidthPadRight(str,    width);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen);	      StrBuilder.this.appendFixedWidthPadRight(str,    width);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  +  1);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  +  1);	      StrBuilder.this.appendFixedWidthPadRight(str,    width);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
34	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  width);	      StrBuilder.this.appendFixedWidthPadRight(str,    width);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
35	[BUG]  [BUGGY]  if(obj  ==  null)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(obj  ==  null)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(obj  ==  null)  {  ensureCapacity(size  +  strLen);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeAccess(strLen)  {  ensureCapacity(size  +  width);  }	      if(str    ==    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
37	[BUG]  [BUGGY]  safeAccess(strLen);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeAccess(strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeAccess(strLen);	      if(str    ==    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
38	[BUG]  [BUGGY]  safeGet(strLen,  buffer,  size  +  width));  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeGet(strLen,  buffer,  size  +  width));  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeGet(strLen,  buffer,  size  +  width));	      if(str    ==    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
39	[BUG]  [BUGGY]  int  width  =  str.length()  -  1;  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  width  =  str.length()  -  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	int  width  =  str.length()  -  1;	      int    width    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
40	[BUG]  [BUGGY]  int  width  =  str.length()  +  1;  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  width  =  str.length()  +  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	int  width  =  str.length()  +  1;	      int    width    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
41	[BUG]  [BUGGY]  int  width  =  str.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  width  =  str.length()  -  2;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	int  width  =  str.length()  -  2;	      int    width    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
42	[BUG]  [BUGGY]  safeAccess(size  +  width);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  safeAccess(size  +  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeAccess(size  +  width);	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
43	[BUG]  [BUGGY]  safeMultiply(strLen,  width)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(strLen,  width)  {  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeMultiply(strLen,  width)  {	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  safeMultiply(strLen,  width);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(strLen,  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeMultiply(strLen,  width);	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  safeMultiply(strLen  +  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(strLen  +  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeMultiply(strLen  +  width);	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
46	[BUG]  [BUGGY]  safeAccess(strLen  +  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeAccess(strLen  +  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeAccess(strLen  +  width);	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
47	[BUG]  [BUGGY]  safeMultiply(strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeMultiply(strLen);	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  Object  obj  =  getImmediateParentPointer();  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getImmediateParentPointer();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	Object  obj  =  getImmediateParentPointer();	      Object    obj    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  Object  obj  =  getText();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getText();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	Object  obj  =  getText();	      Object    obj    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  Object  obj  =  getImmediateParent();  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getImmediateParent();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	Object  obj  =  getImmediateParent();	      Object    obj    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
51	[BUG]  [BUGGY]  size  +=  strLen;  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  size  +=  strLen;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	size  +=  strLen;	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
52	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  strLen;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  strLen;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	String  str  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  strLen;	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
53	[BUG]  [BUGGY]  if(size  >  0  &&  width  <  =  strLen)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(size  >  0  &&  width  <  =  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(size  >  0  &&  width  <  =  strLen)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
54	[BUG]  [BUGGY]  if(strLen  >  0  &&  width  <  =  strLen)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >  0  &&  width  <  =  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(strLen  >  0  &&  width  <  =  strLen)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
55	[BUG]  [BUGGY]  if(width  >  0  &&  width  <  strLen)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  &&  width  <  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >  0  &&  width  <  strLen)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
56	[BUG]  [BUGGY]  if(width  >  0  ||  width  <  =  strLen)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  width  <  =  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >  0  ||  width  <  =  strLen)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
57	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen);	      StrBuilder.this.appendFixedWidthPadRight(str);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  strLen);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  strLen);	      StrBuilder.this.appendFixedWidthPadRight(str);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
59	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidth()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj  ==  null?  getFixedWidth()  :  obj.toString());  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	String  str  =(obj  ==  null?  getFixedWidth()  :  obj.toString());	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidthPadRight(width);	      StrBuilder.this.appendFixedWidthPadRight(str);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
61	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidthPadRight(size);	      StrBuilder.this.appendFixedWidthPadRight(str);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
62	[BUG]  [BUGGY]  if(width  <  0)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(width  <  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  <  0)  {	  if(width    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
63	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad();  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getFixedWidthPad();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	Object  obj  =  getFixedWidthPad();	      Object    obj    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
64	[BUG]  [BUGGY]  if(width  >  0  ||  width  >  0)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  width  >  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >  0  ||  width  >  0)  {	  if(size    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
65	[BUG]  [BUGGY]  safeGet(strLen)>  0)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeGet(strLen)>  0)  {  ensureCapacity(size  +  width);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeGet(strLen)>  0)  {  ensureCapacity(size  +  width);  }	      if(str    ==    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
66	[BUG]  [BUGGY]  safeGet(strLen))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeGet(strLen))  {  ensureCapacity(size  +  width);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeGet(strLen))  {  ensureCapacity(size  +  width);  }	      if(str    ==    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
67	[BUG]  [BUGGY]  safeGet(strLen,  width))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeGet(strLen,  width))  {  ensureCapacity(size  +  width);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeGet(strLen,  width))  {  ensureCapacity(size  +  width);  }	      if(str    ==    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
68	[BUG]  [BUGGY]  safeMultilineStroke(getNullText(),  width));  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  safeMultilineStroke(getNullText(),  width));  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeMultilineStroke(getNullText(),  width));	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
69	[BUG]  [BUGGY]  safeMultilineStroke(getNullText());  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeMultilineStroke(getNullText());  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeMultilineStroke(getNullText());	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
70	[BUG]  [BUGGY]  safeMultiply(getWidth(),  width)  {  [CE]  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(getWidth(),  width)  {  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeMultiply(getWidth(),  width)  {	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  	10	None	replace
71	[BUG]  [BUGGY]  if(width  >  0  &&  size  >  getWidth())  {  [CE]  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  &&  size  >  getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >  0  &&  size  >  getWidth())  {	  if(width    >    0    ||    size    >    getWidth())    {    	non-compiled	[CE]  	2	None	replace
72	[BUG]  [BUGGY]  if(width  <  0  ||  width  >  getWidth())  {  [CE]  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(width  <  0  ||  width  >  getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  <  0  ||  width  >  getWidth())  {	  if(width    >    0    ||    size    >    getWidth())    {    	non-compiled	[CE]  	2	None	replace
73	[BUG]  [BUGGY]  if(width  <  =  0  ||  size  >  getWidth())  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(width  <  =  0  ||  size  >  getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  <  =  0  ||  size  >  getWidth())  {	  if(width    >    0    ||    size    >    getWidth())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
74	[BUG]  [BUGGY]  if(width  >=  0  ||  size  >  getWidth())  {  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(width  >=  0  ||  size  >  getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >=  0  ||  size  >  getWidth())  {	  if(width    >    0    ||    size    >    getWidth())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
75	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  true;  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  true;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidthPadRight  =  true;	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
76	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  false;  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  false;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidthPadRight  =  false;	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
77	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
78	[BUG]  [BUGGY]  if(width  >  0  &&  size  >  strLen)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  &&  size  >  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >  0  &&  size  >  strLen)  {	  if(width    >    0    ||    size    >    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
79	[BUG]  [BUGGY]  if(width  >  0  ||  width  >  strLen)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  width  >  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >  0  ||  width  >  strLen)  {	  if(width    >    0    ||    size    >    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
80	[BUG]  [BUGGY]  if(width  >  0  ||  strLen  >  width)  {  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  strLen  >  width)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >  0  ||  strLen  >  width)  {	  if(width    >    0    ||    size    >    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
81	[BUG]  [BUGGY]  safeGet(strLen)>  0)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  safeGet(strLen)>  0)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeGet(strLen)>  0)  {  ensureCapacity(size  +  strLen);  }	      if(str    ==    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
82	[BUG]  [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeSegment(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }	      if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  safeSegment(strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  safeSegment(strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeSegment(strLen)  {  ensureCapacity(size  +  strLen);  }	      if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  safeSegment(size  +  strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  safeSegment(size  +  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeSegment(size  +  strLen);	      if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
85	[BUG]  [BUGGY]  safeSegment(strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  safeSegment(strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeSegment(strLen)  {  ensureCapacity(size  +  width);  }	      if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
86	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  padChar);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  padChar);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  padChar);	      StrBuilder.this.appendFixedWidthPadRight(str,    width);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
87	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1);	      StrBuilder.this.appendFixedWidthPadRight(str,    width);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width);	      StrBuilder.this.appendFixedWidthPadRight(str,    width);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
89	[BUG]  [BUGGY]  if(width  ==  0  ||  size  >  strLen)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(width  ==  0  ||  size  >  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  ==  0  ||  size  >  strLen)  {	  if(width    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
90	[BUG]  [BUGGY]  if(size  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(size  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(size  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  ensureCapacity(size  +  strLen);  }	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    ensureCapacity(size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
91	[BUG]  [BUGGY]  if(obj!=  null)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(obj!=  null)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(obj!=  null)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  ensureCapacity(size  +  strLen);  }	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    ensureCapacity(size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
92	[BUG]  [BUGGY]  if(width  >=  0  &&  width  <  =  strLen)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(width  >=  0  &&  width  <  =  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >=  0  &&  width  <  =  strLen)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
93	[BUG]  [BUGGY]  if(width  <  =  0  &&  width  <  =  strLen)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(width  <  =  0  &&  width  <  =  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  <  =  0  &&  width  <  =  strLen)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
94	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPadRight()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPadRight()  :  obj.toString());  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	String  str  =(obj  ==  null?  getFixedWidthPadRight()  :  obj.toString());	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
95	[BUG]  [BUGGY]  if(width  >  0  &&  strLen  <  =  width)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  &&  strLen  <  =  width)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >  0  &&  strLen  <  =  width)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
96	[BUG]  [BUGGY]  if(width  <  0  ||  width  <  =  strLen)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(width  <  0  ||  width  <  =  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  <  0  ||  width  <  =  strLen)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
97	[BUG]  [BUGGY]  if(str  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(str  ==  null)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(str  ==  null)  {	  if(width    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
98	[BUG]  [BUGGY]  safeMultiply(str.charAt(0))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(str.charAt(0))  {  ensureCapacity(size  +  width);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeMultiply(str.charAt(0))  {  ensureCapacity(size  +  width);  }	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
99	[BUG]  [BUGGY]  MutableStringBuffer.appendFixedWidthPadRight(buffer,  width,  strLen);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer.appendFixedWidthPadRight(buffer,  width,  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	MutableStringBuffer.appendFixedWidthPadRight(buffer,  width,  strLen);	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
100	[BUG]  [BUGGY]  MutableStringBuffer.appendFixedWidthPadRight(str);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer.appendFixedWidthPadRight(str);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	MutableStringBuffer.appendFixedWidthPadRight(str);	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
101	[BUG]  [BUGGY]  MutableStringBuffer.appendFixedWidthPadRight(buffer,  width  +  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer.appendFixedWidthPadRight(buffer,  width  +  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	MutableStringBuffer.appendFixedWidthPadRight(buffer,  width  +  width);	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
102	[BUG]  [BUGGY]  safeMultiply(strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeMultiply(strLen)  {  ensureCapacity(size  +  strLen);  }	      if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
103	[BUG]  [BUGGY]  if(strLen  <  =  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  <  =  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(strLen  <  =  width)  {  ensureCapacity(size  +  strLen);  }	      if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
104	[BUG]  [BUGGY]  safeMultiply(strLen,  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(strLen,  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeMultiply(strLen,  width)  {  ensureCapacity(size  +  strLen);  }	      if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
105	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(strLen);	      if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
106	[BUG]  [BUGGY]  safeMultilineStroke(strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  safeMultilineStroke(strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeMultilineStroke(strLen)  {  ensureCapacity(size  +  strLen);  }	      if(str    ==    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
107	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length());  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length());  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length());	      if(str    ==    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
108	[BUG]  [BUGGY]  if(str!=  null)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(str!=  null)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(str!=  null)  {  ensureCapacity(size  +  strLen);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
109	[BUG]  [BUGGY]  if(width  >  0  ||  width  >  getWidth())  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  width  >  getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >  0  ||  width  >  getWidth())  {	  if(width    >    0    ||    size    >    getWidth())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
110	[BUG]  [BUGGY]  if(width  >  0  ||  width  <  getWidth())  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  width  <  getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >  0  ||  width  <  getWidth())  {	  if(width    >    0    ||    size    >    getWidth())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
111	[BUG]  [BUGGY]  safeMultiply(strLen,  width)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(strLen,  width)  {  ensureCapacity(size  +  width);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	safeMultiply(strLen,  width)  {  ensureCapacity(size  +  width);  }	      if(str    ==    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
112	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width);	      if(str    ==    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
113	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width);	      if(str    ==    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
114	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidth(str,  width);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidth(str,  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	StrBuilder.this.appendFixedWidth(str,  width);	      StrBuilder.this.appendFixedWidthPadRight(str);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
115	[BUG]  [BUGGY]  if(strLen  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(strLen  >  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  ensureCapacity(size  +  strLen);  }	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    ensureCapacity(size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
116	[BUG]  [BUGGY]  if(strLen  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(strLen  ==  0)  {  String  str  =(obj  ==  null?  getNullText()  :  obj.toString());  ensureCapacity(size  +  strLen);  }	      String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    ensureCapacity(size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
117	[BUG]  [BUGGY]  Object  obj  =  getEmbeddedObject();  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getEmbeddedObject();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	Object  obj  =  getEmbeddedObject();	      Object    obj    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
118	[BUG]  [BUGGY]  Object  obj  =  getEmptyValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getEmptyValue();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	Object  obj  =  getEmptyValue();	      Object    obj    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
119	[BUG]  [BUGGY]  MutableStringBuffer.appendFixedWidth(strLen);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer.appendFixedWidth(strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	MutableStringBuffer.appendFixedWidth(strLen);	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
120	[BUG]  [BUGGY]  MutableStringBuffer.appendFixedWidth(strLen,  width);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer.appendFixedWidth(strLen,  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	MutableStringBuffer.appendFixedWidth(strLen,  width);	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
121	[BUG]  [BUGGY]  if(width  >  0  ||  length  >  strLen)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  length  >  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  >  0  ||  length  >  strLen)  {	  if(width    >    0    ||    size    >    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
122	[BUG]  [BUGGY]  if(width  <  =  0  ||  size  >  strLen)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(width  <  =  0  ||  size  >  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1227	1227	2	replace	if(width  <  =  0  ||  size  >  strLen)  {	  if(width    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
